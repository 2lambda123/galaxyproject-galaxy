{"version":3,"sources":["webpack:///login.bundled.js","webpack:///./galaxy/scripts/apps/login.js","webpack:///./galaxy/scripts/utils/utils.js?d2e7","webpack:///./galaxy/scripts/mvc/ui/ui-modal.js?120e","webpack:///./galaxy/scripts/mvc/ui/ui-frames.js?d017","webpack:///./galaxy/scripts/mvc/user/user-model.js?e6b2","webpack:///./galaxy/scripts/galaxy.js?88e6","webpack:///./galaxy/scripts/layout/generic-nav-view.js?38bf","webpack:///./galaxy/scripts/layout/masthead.js?08fd","webpack:///./galaxy/scripts/layout/menu.js?9a2d","webpack:///./galaxy/scripts/layout/page.js?047e","webpack:///./galaxy/scripts/layout/scratchbook.js?f9ea","webpack:///./galaxy/scripts/mvc/user/user-quotameter.js?f822","webpack:///./galaxy/scripts/utils/metrics-logger.js?2783"],"names":["webpackJsonp","0","module","exports","__webpack_require__","_","jQuery","$","GalaxyApp","PANEL","_l","PAGE","window","app","options","bootstrapped","Galaxy","debug","redirect","encodeURI","show_welcome_with_login","params","param","use_panels","location","href","root","loginPage","PageLayoutView","extend","el","center","CenterPanel","right","RightPanel","title","loginUrl","render","prop","welcome_url","css","html","call","4","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","iframe","src","deepeach","dict","callback","i","d","isObject","new_dict","clone","obj","JSON","parse","stringify","isJSON","text","test","replace","sanitize","content","isEmpty","value","Array","length","undefined","indexOf","textify","lst","isArray","toString","pos","lastIndexOf","substr","get","top","__utils__get__","cache_key","cache","success","console","url","request","data","response","error","status","ajaxConfig","contentType","type","isEmptyObject","dataType","ajax","done","parseJSON","e","fail","response_text","responseText","always","complete","cssGetAttribute","classname","name","appendTo","remove","cssLoadFile","merge","optionsDefault","defaults","roundToDecimalPlaces","number","numPlaces","placesMultiplier","Math","round","bytesToString","size","normal_font","numberPlaces","unit","tb","gb","mb","kb","rounded","uid","__utils__uid__","time","Date","hours","getHours","minutes","getMinutes","datetime","getDate","getMonth","getFullYear","apply","8","Backbone","View","className","container","cls","body","backdrop","height","width","closing_events","closing_callback","title_separator","buttonList","initialize","this","prepend","show","visible","$el","fadeIn","self","document","on","keyCode","hide","$backdrop","canceled","fadeOut","off","_template","$header","$dialog","$body","$footer","$buttons","removeClass","addClass","find","empty","buttons","counter","each","$button","attr","click","append","removeAttr","getButton","enableButton","disableButton","showButton","hideButton","scrollTop","15","FrameView","model","Model","setElement","tooltip","placement","$title","$content","listenTo","attributes","menu","option","$option","icon","isFunction","disabled","onclick","defaultOptions","frame","cols","rows","cell","margin","scroll","top_min","frame_max","top_max","frame_z","frame_counter","frame_uid","frame_list","frame_shadow","event","_frameInit","_frameResize","_panelRefresh","resize","add","modal","Close","frame_id","_toPixelCoord","parseInt","_frameInsert","left","trigger","del","$frame","id","_panelAnimationComplete","events","mousemove","mouseup","mouseleave","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","_eventFrameMouseDown","target","hasClass","preventDefault","_frameIdentify","xy","x","originalEvent","pageX","y","pageY","_frameDragStart","_eventFrameMouseMove","event_xy_new","event_xy_delta","p","_frameScreen","min_dim","max","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","_eventFrameClose","_eventHide","_eventPanelScroll","frames","srcElement","parents","stopPropagation","_panelScroll","detail","wheelDelta","_eventPanelScroll_up","_eventPanelScroll_down","closest","_frameFocus","_frameGrid","grid_location","px","sign","g","_toGrid","_toPixel","_isCollision","is_collision_pair","a","b","_locationRank","loc","animate","promise","delta","top_new","min","screen_location","grid_rank","substring","new_loc","place_list","push","f","sort","place","_framePlace","j","log","has_focus","29","baseMVC","logNamespace","User","LoggableMixin","_logNamespace","urlRoot","username","email","total_disk_usage","nice_total_disk_usage","quota_percent","is_admin","resp","changes","isAnonymous","isAdmin","loadFromApi","idOrCurrent","CURRENT_ID_STR","userFn","newModel","prototype","fetch","clearSessionStorage","key","sessionStorage","removeItem","userInfo","unshift","join","getCurrentUserFromApi","currentUser","Collection","30","BASE_MVC","userModel","metricsLogger","addLogging","localize","_init","DEBUGGING_KEY","NAMESPACE_KEY","localDebugging","localStorage","getItem","storageErr","Events","logger","_processOptions","_initConfig","config","_patchGalaxy","_initLogger","loggerOptions","_initLocale","_initUser","user","_setUpListeners","patchExisting","k","hasOwnProperty","patchWith","consoleLogger","consoleLevel","MetricsLogger","ALL","consoleNamespaceWhitelist","split","emit","map","arguments","slice","userJSON","lastAjax","bind","ev","xhr","err","debugging","setting","setItem","debuggingNamespaces","namespaces","csv","newSettings","userEmail","31","Modal","GenericNavView","makeModalIframe","host","communication_server_host","port","communication_server_port","escape","persistent_communication_rooms","query_string","$el_chat_modal_header","$el_chat_modal_body","iframe_template","header_template","frame_height","frame_width","class_names","navItem","32","Utils","Menu","Scratchbook","QuotaMeter","$navbarBrandLink","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","Tab","m","quotaMeter","UserQuotaMeter","$download_link","q","brand","logo_url","logo_src","33","Tours","GenericNav","reset","extendedNavItem","user_requests","lims_doc_url","helpTab","support_url","search_url","mailing_lists","screencasts_url","wiki_url","citation_url","display","ToursView","terms_url","biostar_url","biostar_url_redirect","userTab","divider","use_remote_user","noscratchbook","allow_user_creation","activeView","active_view","set","Deferred","resolve","$dropdown","$toggle","$menu","$note","click .dropdown-toggle","visibility","_formatUrl","menuItem","_buildMenuItem","_toggleClick","buildLink","label","popover","setTimeout","charAt","34","Masthead","Panel","BaseMVC","_panelIds","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","inactivity_box_content","pick","omit","masthead","replaceWith","$messagebox","$inactivebox","renderMessageBox","renderInactivityBox","renderPanels","_checkCommunicationServerOnline","level","toggle","verificationLink","page","forEach","panelId","has","hideSidePanels","$chat_icon_element","preferences","communication_server","35","Frames","buttonActive","active","show_note","note_cls","onbeforeunload","buttonLoad","note","history_cache","addDataset","dataset_id","current_dataset","currHistoryPanel","history_id","historyId","dataset_ids","_findDataset","dataset","offset","history_details","dataset_list","_loadDatasetOffset","new_dataset_id","_loadDataset","new_dataset","__WEBPACK_AMD_REQUIRE_ARRAY__","DATA","Dataset","when","then","is_tabular","data_type","createTabularDatasetChunkedView","TabularDataset","toJSON","embedded","addTrackster","viz_id","visualization","trackster","viz","Visualization","ui","TracksterUI","frame_config","parent_elt","view_config","dbkey","stand_alone","latest_revision","drawables","view","hda_ldda","create_visualization","viewport","bookmarks","open","$galaxy_main","parent","62","warnAtPercent","errorAtPercent","update","isOverQuota","_render_quota","modelJson","percent","$meter","_templateQuotaMeter","$bar","_render_usage","usage","_templateUsage","meterHtml","66","_typeof","Symbol","iterator","constructor","userId","LoggingCache","LOG","DEBUG","INFO","WARN","ERROR","METRIC","NONE","logLevel","defaultNamespace","clientPrefix","maxCacheSize","postSize","addTime","cacheKeyPrefix","postUrl","delayPostInMs","getPingData","onServerResponse","_parseLevel","_sending","_waiting","_postSize","_initCache","maxSize","_emitToConsole","upper","toUpperCase","Error","namespace","logArguments","_addToCache","newLength","_buildEntry","_postCache","entry","args","toISOString","count","entries","entriesLength","postData","metrics","post","message","readyState","responseJSON","_delayPost","whitelist","info","warn","metric","_hasStorage","_initStorage","_cache","_fetchAndParse","overage","splice","_unparseAndStore","removed","print"],"mappings":"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","file":"login.bundled.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(_) {'use strict';\n\t\n\tvar jQuery = __webpack_require__(1),\n\t    $ = jQuery,\n\t    GalaxyApp = __webpack_require__(30).GalaxyApp,\n\t    PANEL = __webpack_require__(10),\n\t    _l = __webpack_require__(5),\n\t    PAGE = __webpack_require__(34);\n\t\n\twindow.app = function app(options, bootstrapped) {\n\t    window.Galaxy = new GalaxyApp(options, bootstrapped);\n\t    Galaxy.debug('login app');\n\t    var redirect = encodeURI(options.redirect);\n\t\n\t    // TODO: remove iframe for user login (at least) and render login page from here\n\t    // then remove this redirect\n\t    if (!options.show_welcome_with_login) {\n\t        var params = jQuery.param({ use_panels: 'True', redirect: redirect });\n\t        window.location.href = Galaxy.root + 'user/login?' + params;\n\t        return;\n\t    }\n\t\n\t    var loginPage = new PAGE.PageLayoutView(_.extend(options, {\n\t        el: 'body',\n\t        center: new PANEL.CenterPanel({ el: '#center' }),\n\t        right: new PANEL.RightPanel({\n\t            title: _l('Login required'),\n\t            el: '#right'\n\t        })\n\t    }));\n\t\n\t    $(function () {\n\t        // TODO: incorporate *actual* referrer/redirect info as the original page does\n\t        var params = jQuery.param({ redirect: redirect }),\n\t            loginUrl = Galaxy.root + 'user/login?' + params;\n\t        loginPage.render();\n\t\n\t        // welcome page (probably) needs to remain sandboxed\n\t        loginPage.center.$('#galaxy_main').prop('src', options.welcome_url);\n\t\n\t        loginPage.right.$('.unified-panel-body').css('overflow', 'hidden').html('<iframe src=\"' + loginUrl + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>');\n\t    });\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {'use strict';\n\t\n\t/**\n\t * Galaxy utilities comprises small functions, which at this point\n\t * do not require their own classes/files\n\t*/\n\t\n\t// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    /** Builds a basic iframe\n\t    */\n\t    function iframe(src) {\n\t        return '<iframe src=\"' + src + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>';\n\t    }\n\t\n\t    /** Traverse through json\n\t    */\n\t    function deepeach(dict, callback) {\n\t        for (var i in dict) {\n\t            var d = dict[i];\n\t            if (_.isObject(d)) {\n\t                var new_dict = callback(d);\n\t                new_dict && (dict[i] = new_dict);\n\t                deepeach(d, callback);\n\t            }\n\t        }\n\t    }\n\t\n\t    /** Clone */\n\t    function clone(obj) {\n\t        return JSON.parse(JSON.stringify(obj) || null);\n\t    }\n\t\n\t    /**\n\t     * Check if a string is a json string\n\t     * @param{String}   text - Content to be validated\n\t     */\n\t    function isJSON(text) {\n\t        return (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\t        );\n\t    };\n\t\n\t    /**\n\t     * Sanitize/escape a string\n\t     * @param{String}   content - Content to be sanitized\n\t     */\n\t    function sanitize(content) {\n\t        return $('<div/>').text(content).html();\n\t    };\n\t\n\t    /**\n\t     * Checks if a value or list of values is `empty`\n\t     * usually used for selectable options\n\t     * @param{String}   value - Value or list to be validated\n\t     */\n\t    function isEmpty(value) {\n\t        if (!(value instanceof Array)) {\n\t            value = [value];\n\t        }\n\t        if (value.length === 0) {\n\t            return true;\n\t        }\n\t        for (var i in value) {\n\t            if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    /**\n\t     * Convert list to pretty string\n\t     * @param{String}   lst - List of strings to be converted in human readable list sentence\n\t     */\n\t    function textify(lst) {\n\t        if ($.isArray(lst)) {\n\t            var lst = lst.toString().replace(/,/g, ', ');\n\t            var pos = lst.lastIndexOf(', ');\n\t            if (pos != -1) {\n\t                lst = lst.substr(0, pos) + ' or ' + lst.substr(pos + 2);\n\t            }\n\t            return lst;\n\t        }\n\t        return '';\n\t    };\n\t\n\t    /**\n\t     * Request handler for GET\n\t     * @param{String}   url     - Url request is made to\n\t     * @param{Function} success - Callback on success\n\t     * @param{Function} error   - Callback on error\n\t     * @param{Boolean}  cache   - Use cached data if available\n\t     */\n\t    function get(options) {\n\t        top.__utils__get__ = top.__utils__get__ || {};\n\t        var cache_key = JSON.stringify(options);\n\t        if (options.cache && top.__utils__get__[cache_key]) {\n\t            options.success && options.success(top.__utils__get__[cache_key]);\n\t            window.console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n\t        } else {\n\t            request({\n\t                url: options.url,\n\t                data: options.data,\n\t                success: function success(response) {\n\t                    top.__utils__get__[cache_key] = response;\n\t                    options.success && options.success(response);\n\t                },\n\t                error: function error(response, status) {\n\t                    options.error && options.error(response, status);\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Request handler\n\t     * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n\t     * @param{String}   url     - Url request is made to\n\t     * @param{Object}   data    - Data send to url\n\t     * @param{Function} success - Callback on success\n\t     * @param{Function} error   - Callback on error\n\t     */\n\t    function request(options) {\n\t        // prepare ajax\n\t        var ajaxConfig = {\n\t            contentType: 'application/json',\n\t            type: options.type || 'GET',\n\t            data: options.data || {},\n\t            url: options.url\n\t        };\n\t        // encode data into url\n\t        if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n\t            if (!$.isEmptyObject(ajaxConfig.data)) {\n\t                ajaxConfig.url += ajaxConfig.url.indexOf('?') == -1 ? '?' : '&';\n\t                ajaxConfig.url += $.param(ajaxConfig.data, true);\n\t            }\n\t            ajaxConfig.data = null;\n\t        } else {\n\t            ajaxConfig.dataType = 'json';\n\t            ajaxConfig.url = ajaxConfig.url;\n\t            ajaxConfig.data = JSON.stringify(ajaxConfig.data);\n\t        }\n\t\n\t        // make request\n\t        $.ajax(ajaxConfig).done(function (response) {\n\t            if (typeof response === 'string') {\n\t                try {\n\t                    response = response.replace('Infinity,', '\"Infinity\",');\n\t                    response = jQuery.parseJSON(response);\n\t                } catch (e) {\n\t                    console.debug(e);\n\t                }\n\t            }\n\t            options.success && options.success(response);\n\t        }).fail(function (response) {\n\t            var response_text = null;\n\t            try {\n\t                response_text = jQuery.parseJSON(response.responseText);\n\t            } catch (e) {\n\t                response_text = response.responseText;\n\t            }\n\t            options.error && options.error(response_text, response.status);\n\t        }).always(function () {\n\t            options.complete && options.complete();\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Read a property value from CSS\n\t     * @param{String}   classname   - CSS class\n\t     * @param{String}   name        - CSS property\n\t     */\n\t    function cssGetAttribute(classname, name) {\n\t        var el = $('<div class=\"' + classname + '\"></div>');\n\t        el.appendTo(':eq(0)');\n\t        var value = el.css(name);\n\t        el.remove();\n\t        return value;\n\t    };\n\t\n\t    /**\n\t     * Load a CSS file\n\t     * @param{String}   url - Url of CSS file\n\t     */\n\t    function cssLoadFile(url) {\n\t        if (!$('link[href^=\"' + url + '\"]').length) {\n\t            $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Safely merge to dictionaries\n\t     * @param{Object}   options         - Target dictionary\n\t     * @param{Object}   optionsDefault  - Source dictionary\n\t     */\n\t    function merge(options, optionsDefault) {\n\t        if (options) {\n\t            return _.defaults(options, optionsDefault);\n\t        } else {\n\t            return optionsDefault;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Round floaing point 'number' to 'numPlaces' number of decimal places.\n\t     * @param{Object}   number      a floaing point number\n\t     * @param{Object}   numPlaces   number of decimal places\n\t     */\n\t    function roundToDecimalPlaces(number, numPlaces) {\n\t        var placesMultiplier = 1;\n\t        for (var i = 0; i < numPlaces; i++) {\n\t            placesMultiplier *= 10;\n\t        }\n\t        return Math.round(number * placesMultiplier) / placesMultiplier;\n\t    }\n\t\n\t    // calculate on import\n\t    var kb = 1024,\n\t        mb = kb * kb,\n\t        gb = mb * kb,\n\t        tb = gb * kb;\n\t    /**\n\t     * Format byte size to string with units\n\t     * @param{Integer}   size           - Size in bytes\n\t     * @param{Boolean}   normal_font    - Switches font between normal and bold\n\t     */\n\t    function bytesToString(size, normal_font, numberPlaces) {\n\t        numberPlaces = numberPlaces !== undefined ? numberPlaces : 1;\n\t        // identify unit\n\t        var unit = \"\";\n\t        if (size >= tb) {\n\t            size = size / tb;unit = 'TB';\n\t        } else if (size >= gb) {\n\t            size = size / gb;unit = 'GB';\n\t        } else if (size >= mb) {\n\t            size = size / mb;unit = 'MB';\n\t        } else if (size >= kb) {\n\t            size = size / kb;unit = 'KB';\n\t        } else if (size > 0) {\n\t            unit = 'b';\n\t        } else {\n\t            return normal_font ? '0 b' : '<strong>-</strong>';\n\t        }\n\t        // return formatted string\n\t        var rounded = unit == 'b' ? size : roundToDecimalPlaces(size, numberPlaces);\n\t        if (normal_font) {\n\t            return rounded + ' ' + unit;\n\t        } else {\n\t            return '<strong>' + rounded + '</strong> ' + unit;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Create a unique id\n\t     */\n\t    function uid() {\n\t        top.__utils__uid__ = top.__utils__uid__ || 0;\n\t        return 'uid-' + top.__utils__uid__++;\n\t    };\n\t\n\t    /**\n\t     * Create a time stamp\n\t     */\n\t    function time() {\n\t        var d = new Date();\n\t        var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n\t        var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes();\n\t        return datetime = d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear() + \", \" + hours + \":\" + minutes;\n\t    };\n\t\n\t    return {\n\t        cssLoadFile: cssLoadFile,\n\t        cssGetAttribute: cssGetAttribute,\n\t        get: get,\n\t        merge: merge,\n\t        iframe: iframe,\n\t        bytesToString: bytesToString,\n\t        uid: uid,\n\t        time: time,\n\t        request: request,\n\t        sanitize: sanitize,\n\t        textify: textify,\n\t        isEmpty: isEmpty,\n\t        deepeach: deepeach,\n\t        isJSON: isJSON,\n\t        clone: clone\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t    var View = Backbone.View.extend({\n\t\n\t        className: \"ui-modal\",\n\t\n\t        // defaults\n\t        optionsDefault: {\n\t            container: 'body',\n\t            title: 'ui-modal',\n\t            cls: 'ui-modal',\n\t            body: '',\n\t            backdrop: true,\n\t            height: null,\n\t            width: null,\n\t            closing_events: false,\n\t            closing_callback: null,\n\t            title_separator: true\n\t        },\n\t\n\t        // button list\n\t        buttonList: {},\n\t\n\t        // initialize\n\t        initialize: function initialize(options) {\n\t            this.options = _.defaults(options || {}, this.optionsDefault);\n\t            $(this.options.container).prepend(this.el);\n\t            // optional render\n\t            options && this.render();\n\t        },\n\t\n\t        /**\n\t         * Displays modal\n\t        */\n\t        show: function show(options) {\n\t            if (options) {\n\t                this.options = _.defaults(options, this.optionsDefault);\n\t                this.render();\n\t            }\n\t            if (!this.visible) {\n\t                this.visible = true;\n\t                this.$el.fadeIn('fast');\n\t                if (this.options.closing_events) {\n\t                    var self = this;\n\t                    $(document).on('keyup.ui-modal', function (e) {\n\t                        e.keyCode == 27 && self.hide(true);\n\t                    });\n\t                    this.$backdrop.on('click', function () {\n\t                        self.hide(true);\n\t                    });\n\t                }\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Hide modal\n\t        */\n\t        hide: function hide(canceled) {\n\t            this.visible = false;\n\t            this.$el.fadeOut('fast');\n\t            this.options.closing_callback && this.options.closing_callback(canceled);\n\t            $(document).off('keyup.ui-modal');\n\t            this.$backdrop.off('click');\n\t        },\n\t\n\t        /**\n\t         * Render modal\n\t        */\n\t        render: function render() {\n\t            var self = this;\n\t            this.$el.html(this._template());\n\t\n\t            // link elements\n\t            this.$header = this.$('.modal-header');\n\t            this.$dialog = this.$('.modal-dialog');\n\t            this.$body = this.$('.modal-body');\n\t            this.$footer = this.$('.modal-footer');\n\t            this.$backdrop = this.$('.modal-backdrop');\n\t            this.$buttons = this.$('.buttons');\n\t\n\t            if (this.options.body == 'progress') {\n\t                this.options.body = $('<div class=\"progress progress-striped active\">' + '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' + '</div>');\n\t            }\n\t\n\t            // fix main content\n\t            this.$el.removeClass().addClass('modal').addClass(this.options.cls);\n\t            this.$header.find('.title').html(this.options.title);\n\t            this.$body.html(this.options.body);\n\t\n\t            // append buttons\n\t            this.$buttons.empty();\n\t            this.buttonList = {};\n\t            if (this.options.buttons) {\n\t                var counter = 0;\n\t                $.each(this.options.buttons, function (name, callback) {\n\t                    var $button = $('<button/>').attr('id', 'button-' + counter++).text(name).click(callback);\n\t                    self.$buttons.append($button).append('&nbsp;');\n\t                    self.buttonList[name] = $button;\n\t                });\n\t            } else {\n\t                this.$footer.hide();\n\t            }\n\t\n\t            // configure background, separator line\n\t            this.$backdrop[this.options.backdrop && 'addClass' || 'removeClass']('in');\n\t            this.$header[!this.options.title_separator && 'addClass' || 'removeClass']('no-separator');\n\t\n\t            // fix dimensions\n\t            // note: because this is a singleton, we need to clear inline styles from any previous invocations\n\t            this.$body.removeAttr('style');\n\t            if (this.options.height) {\n\t                this.$body.css('height', this.options.height);\n\t                this.$body.css('overflow', 'hidden');\n\t            } else {\n\t                this.$body.css('max-height', $(window).height() / 2);\n\t            }\n\t            if (this.options.width) {\n\t                this.$dialog.css('width', this.options.width);\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Returns the button dom\n\t         * @param{String}   name    - Button name/title\n\t        */\n\t        getButton: function getButton(name) {\n\t            return this.buttonList[name];\n\t        },\n\t\n\t        /**\n\t         * Enables a button\n\t         * @param{String}   name    - Button name/title\n\t        */\n\t        enableButton: function enableButton(name) {\n\t            this.getButton(name).prop('disabled', false);\n\t        },\n\t\n\t        /**\n\t         * Disables a button\n\t         * @param{String}   name    - Button name/title\n\t        */\n\t        disableButton: function disableButton(name) {\n\t            this.getButton(name).prop('disabled', true);\n\t        },\n\t\n\t        /**\n\t         * Show a button\n\t         * @param{String}   name    - Button name/title\n\t        */\n\t        showButton: function showButton(name) {\n\t            this.getButton(name).show();\n\t        },\n\t\n\t        /**\n\t         * Hide a button\n\t         * @param{String}   name    - Button name/title\n\t        */\n\t        hideButton: function hideButton(name) {\n\t            this.getButton(name).hide();\n\t        },\n\t\n\t        /**\n\t         * Returns scroll top for body element\n\t        */\n\t        scrollTop: function scrollTop() {\n\t            return this.$body.scrollTop();\n\t        },\n\t\n\t        /**\n\t         * Returns the modal template\n\t        */\n\t        _template: function _template() {\n\t            return '<div class=\"modal-backdrop fade\"/>' + '<div class=\"modal-dialog\">' + '<div class=\"modal-content\">' + '<div class=\"modal-header\">' + '<h4 class=\"title\"/>' + '</div>' + '<div class=\"modal-body\"/>' + '<div class=\"modal-footer\">' + '<div class=\"buttons\"/>' + '</div>' + '</div>' + '</div>';\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    /** Frame view */\n\t    var FrameView = Backbone.View.extend({\n\t        initialize: function initialize(options) {\n\t            var self = this;\n\t            this.model = options && options.model || new Backbone.Model(options);\n\t            this.setElement($('<div/>').addClass('corner frame'));\n\t            this.$el.append($('<div/>').addClass('f-header corner').append($('<div/>').addClass('f-title')).append($('<div/>').addClass('f-icon f-close fa fa-close').tooltip({ title: 'Close', placement: 'bottom' }))).append($('<div/>').addClass('f-content')).append($('<div/>').addClass('f-resize f-icon corner fa fa-expand').tooltip({ title: 'Resize' })).append($('<div/>').addClass('f-cover'));\n\t            this.$header = this.$('.f-header');\n\t            this.$title = this.$('.f-title');\n\t            this.$content = this.$('.f-content');\n\t            this.render();\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t        },\n\t\n\t        render: function render() {\n\t            var self = this;\n\t            var options = this.model.attributes;\n\t            this.$title.html(options.title || '');\n\t            this.$header.find('.f-icon-left').remove();\n\t            _.each(options.menu, function (option) {\n\t                var $option = $('<div/>').addClass('f-icon-left').addClass(option.icon);\n\t                if (_.isFunction(option.disabled) && option.disabled()) {\n\t                    $option.attr('disabled', true);\n\t                } else {\n\t                    $option.on('click', function () {\n\t                        option.onclick(self);\n\t                    }).tooltip({ title: option.tooltip, placement: 'bottom' });\n\t                }\n\t                self.$header.append($option);\n\t            });\n\t            if (options.url) {\n\t                this.$content.html($('<iframe/>').addClass('f-iframe').attr('scrolling', 'auto').attr('src', options.url + (options.url.indexOf('?') === -1 ? '?' : '&') + 'widget=True'));\n\t            } else if (options.content) {\n\t                _.isFunction(options.content) ? options.content(self.$content) : self.$content.html(options.content);\n\t            }\n\t        }\n\t    });\n\t\n\t    /** Scratchbook viewer */\n\t    var View = Backbone.View.extend({\n\t        defaultOptions: {\n\t            frame: { // default frame size in cells\n\t                cols: 6,\n\t                rows: 3\n\t            },\n\t            rows: 1000, // maximum number of rows\n\t            cell: 130, // cell size in px\n\t            margin: 5, // margin between frames\n\t            scroll: 5, // scroll speed\n\t            top_min: 40, // top margin\n\t            frame_max: 9, // maximum number of frames\n\t            visible: true },\n\t\n\t        cols: 0, // number of columns\n\t        top: 0, // scroll/element top\n\t        top_max: 0, // viewport scrolling state\n\t        frame_z: 0, // frame z-index\n\t        frame_counter: 0, // frame counter\n\t        frame_uid: 0, // unique frame id counter\n\t        frame_list: {}, // list of all frames\n\t        frame_shadow: null, // frame shown as placeholder when moving active frames\n\t        visible: false, // flag indicating if scratchbook viewer is visible or not\n\t        event: {}, // dictionary keeping track of current event\n\t\n\t        initialize: function initialize(options) {\n\t            var self = this;\n\t            this.options = _.defaults(options || {}, this.defaultOptions);\n\t            this.visible = this.options.visible;\n\t            this.top = this.top_max = this.options.top_min;\n\t            this.setElement($('<div/>').addClass('galaxy-frame').append($('<div/>').addClass('frame-background')).append($('<div/>').addClass('frame-menu frame-scroll-up fa fa-chevron-up fa-2x')).append($('<div/>').addClass('frame-menu frame-scroll-down fa fa-chevron-down fa-2x')));\n\t\n\t            // initialize shadow to guiding drag/resize events\n\t            this.frame_shadow = new Backbone.View({ el: $('<div/>').addClass('corner frame-shadow') });\n\t            this.$el.append(this.frame_shadow.$el);\n\t            this._frameInit(this.frame_shadow, '#frame-shadow');\n\t            this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n\t            this.frame_list['#frame-shadow'] = this.frame_shadow;\n\t\n\t            // initialize panel\n\t            this.visible ? this.show() : this.hide();\n\t            this._panelRefresh();\n\t            $(window).resize(function () {\n\t                self.visible && self._panelRefresh();\n\t            });\n\t        },\n\t\n\t        /** Render */\n\t        render: function render() {\n\t            this.$('.frame-scroll-up')[this.top != this.options.top_min && 'show' || 'hide']();\n\t            this.$('.frame-scroll-down')[this.top != this.top_max && 'show' || 'hide']();\n\t        },\n\t\n\t        /**\n\t         * Adds and displays a new frame.\n\t         *\n\t         * options:\n\t         *  url     : loaded into an iframe\n\t         *  content : content is treated as a function or raw HTML, function is passed a single\n\t         *              argument that is the frame's content DOM element\n\t         */\n\t        add: function add(options) {\n\t            if (this.frame_counter >= this.options.frame_max) {\n\t                Galaxy.modal.show({\n\t                    title: 'Warning',\n\t                    body: 'You have reached the maximum number of allowed frames (' + this.options.frame_max + ').',\n\t                    buttons: { 'Close': function Close() {\n\t                            Galaxy.modal.hide();\n\t                        } }\n\t                });\n\t            } else {\n\t                var frame_id = '#frame-' + this.frame_uid++;\n\t                if ($(frame_id).length !== 0) {\n\t                    Galaxy.modal.show({\n\t                        title: 'Error',\n\t                        body: 'This frame already exists. This page might contain multiple frame managers.',\n\t                        buttons: { 'Close': function Close() {\n\t                                Galaxy.modal.hide();\n\t                            } }\n\t                    });\n\t                } else {\n\t                    // initialize new frame elements\n\t                    this.top = this.options.top_min;\n\t                    var frame = new FrameView(options);\n\t                    this.$el.append(frame.$el);\n\t\n\t                    // set dimensions\n\t                    options.width = this._toPixelCoord('width', this.options.frame.cols);\n\t                    options.height = this._toPixelCoord('height', this.options.frame.rows);\n\t\n\t                    // set default z-index and add to ui and frame list\n\t                    this.frame_z = parseInt(frame.$el.css('z-index'));\n\t                    this.frame_list[frame_id] = frame;\n\t                    this.frame_counter++;\n\t                    this._frameInit(frame, frame_id);\n\t                    this._frameResize(frame, { width: options.width, height: options.height });\n\t                    this._frameInsert(frame, { top: 0, left: 0 }, true);\n\t                    !this.visible && this.show();\n\t                    this.trigger('add');\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Remove a frame */\n\t        del: function del(frame) {\n\t            var self = this;\n\t            var $frame = frame.$el;\n\t            $frame.fadeOut('fast', function () {\n\t                $frame.remove();\n\t                delete self.frame_list[frame.id];\n\t                self.frame_counter--;\n\t                self._panelRefresh(true);\n\t                self._panelAnimationComplete();\n\t                self.trigger('remove');\n\t            });\n\t        },\n\t\n\t        /** Show panel */\n\t        show: function show() {\n\t            this.visible = true;\n\t            this.$el.fadeIn('fast');\n\t            this.trigger('show');\n\t        },\n\t\n\t        /** Hide panel */\n\t        hide: function hide() {\n\t            if (!this.event.type) {\n\t                this.visible = false;\n\t                this.$el.fadeOut('fast', function () {\n\t                    $(this).hide();\n\t                });\n\t                this.trigger('hide');\n\t            }\n\t        },\n\t\n\t        /** Returns the number of frames */\n\t        length: function length() {\n\t            return this.frame_counter;\n\t        },\n\t\n\t        /*\n\t            EVENT HANDLING\n\t        */\n\t        events: {\n\t            // global frame events\n\t            'mousemove': '_eventFrameMouseMove',\n\t            'mouseup': '_eventFrameMouseUp',\n\t            'mouseleave': '_eventFrameMouseUp',\n\t            'mousewheel': '_eventPanelScroll',\n\t            'DOMMouseScroll': '_eventPanelScroll',\n\t\n\t            // events fixed to elements\n\t            'mousedown .frame': '_eventFrameMouseDown',\n\t            'mousedown .frame-background': '_eventHide',\n\t            'mousedown .frame-scroll-up': '_eventPanelScroll_up',\n\t            'mousedown .frame-scroll-down': '_eventPanelScroll_down',\n\t            'mousedown .f-close': '_eventFrameClose'\n\t        },\n\t\n\t        /** Start drag/resize event */\n\t        _eventFrameMouseDown: function _eventFrameMouseDown(e) {\n\t            $('.tooltip').hide();\n\t            if (!this.event.type) {\n\t                if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n\t                    this.event.type = 'drag';\n\t                }\n\t                if ($(e.target).hasClass('f-resize')) {\n\t                    this.event.type = 'resize';\n\t                }\n\t                if (this.event.type) {\n\t                    e.preventDefault();\n\t                    this.event.target = this._frameIdentify(e.target);\n\t                    this.event.xy = {\n\t                        x: e.originalEvent.pageX,\n\t                        y: e.originalEvent.pageY\n\t                    };\n\t                    this._frameDragStart(this.event.target);\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Processes drag/resize events */\n\t        _eventFrameMouseMove: function _eventFrameMouseMove(e) {\n\t            if (this.event.type) {\n\t                // get mouse motion and delta\n\t                var event_xy_new = {\n\t                    x: e.originalEvent.pageX,\n\t                    y: e.originalEvent.pageY\n\t                };\n\t                var event_xy_delta = {\n\t                    x: event_xy_new.x - this.event.xy.x,\n\t                    y: event_xy_new.y - this.event.xy.y\n\t                };\n\t                this.event.xy = event_xy_new;\n\t\n\t                // get current screen position and size of frame\n\t                var p = this._frameScreen(this.event.target);\n\t\n\t                // drag/resize event\n\t                if (this.event.type == 'resize') {\n\t                    p.width += event_xy_delta.x;\n\t                    p.height += event_xy_delta.y;\n\t                    var min_dim = this.options.cell - this.options.margin - 1;\n\t                    p.width = Math.max(p.width, min_dim);\n\t                    p.height = Math.max(p.height, min_dim);\n\t                    this._frameResize(this.event.target, p);\n\t                    p.width = this._toGridCoord('width', p.width) + 1;\n\t                    p.height = this._toGridCoord('height', p.height) + 1;\n\t                    p.width = this._toPixelCoord('width', p.width);\n\t                    p.height = this._toPixelCoord('height', p.height);\n\t                    this._frameResize(this.frame_shadow, p);\n\t                    this._frameInsert(this.frame_shadow, {\n\t                        top: this._toGridCoord('top', p.top),\n\t                        left: this._toGridCoord('left', p.left)\n\t                    });\n\t                } else if (this.event.type == 'drag') {\n\t                    p.left += event_xy_delta.x;\n\t                    p.top += event_xy_delta.y;\n\t                    this._frameOffset(this.event.target, p);\n\t                    var l = {\n\t                        top: this._toGridCoord('top', p.top),\n\t                        left: this._toGridCoord('left', p.left)\n\t                    };\n\t                    l.left !== 0 && l.left++;\n\t                    this._frameInsert(this.frame_shadow, l);\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Stop drag/resize events */\n\t        _eventFrameMouseUp: function _eventFrameMouseUp(e) {\n\t            if (this.event.type) {\n\t                this._frameDragStop(this.event.target);\n\t                this.event.type = null;\n\t            }\n\t        },\n\t\n\t        /** Destroy a frame */\n\t        _eventFrameClose: function _eventFrameClose(e) {\n\t            if (!this.event.type) {\n\t                e.preventDefault();\n\t                this.del(this._frameIdentify(e.target));\n\t            }\n\t        },\n\t\n\t        /** Hide all frames */\n\t        _eventHide: function _eventHide(e) {\n\t            !this.event.type && this.hide();\n\t        },\n\t\n\t        /** Fired when scrolling occurs on panel */\n\t        _eventPanelScroll: function _eventPanelScroll(e) {\n\t            if (!this.event.type && this.visible) {\n\t                // Stop propagation if scrolling is happening inside a frame.\n\t                // TODO: could propagate scrolling if at top/bottom of frame.\n\t                var frames = $(e.srcElement).parents('.frame');\n\t                if (frames.length !== 0) {\n\t                    e.stopPropagation();\n\t                } else {\n\t                    e.preventDefault();\n\t                    this._panelScroll(e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3);\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Handle scroll up event */\n\t        _eventPanelScroll_up: function _eventPanelScroll_up(e) {\n\t            if (!this.event.type) {\n\t                e.preventDefault();\n\t                this._panelScroll(-this.options.scroll);\n\t            }\n\t        },\n\t\n\t        /** Handle scroll down */\n\t        _eventPanelScroll_down: function _eventPanelScroll_down(e) {\n\t            if (!this.event.type) {\n\t                e.preventDefault();\n\t                this._panelScroll(this.options.scroll);\n\t            }\n\t        },\n\t\n\t        /*\n\t            FRAME EVENTS SUPPORT\n\t        */\n\t\n\t        /** Identify the target frame */\n\t        _frameIdentify: function _frameIdentify(target) {\n\t            return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n\t        },\n\t\n\t        /** Provides drag support */\n\t        _frameDragStart: function _frameDragStart(frame) {\n\t            this._frameFocus(frame, true);\n\t            var p = this._frameScreen(frame);\n\t            this._frameResize(this.frame_shadow, p);\n\t            this._frameGrid(this.frame_shadow, frame.grid_location);\n\t            frame.grid_location = null;\n\t            this.frame_shadow.$el.show();\n\t            $('.f-cover').show();\n\t        },\n\t\n\t        /** Removes drag support */\n\t        _frameDragStop: function _frameDragStop(frame) {\n\t            this._frameFocus(frame, false);\n\t            var p = this._frameScreen(this.frame_shadow);\n\t            this._frameResize(frame, p);\n\t            this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\t            this.frame_shadow.grid_location = null;\n\t            this.frame_shadow.$el.hide();\n\t            $('.f-cover').hide();\n\t            this._panelAnimationComplete();\n\t        },\n\t\n\t        /*\n\t            GRID/PIXEL CONVERTER\n\t        */\n\t\n\t        /** Converts a pixel to a grid dimension */\n\t        _toGridCoord: function _toGridCoord(type, px) {\n\t            var sign = type == 'width' || type == 'height' ? 1 : -1;\n\t            type == 'top' && (px -= this.top);\n\t            return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n\t        },\n\t\n\t        /** Converts a grid to a pixels dimension */\n\t        _toPixelCoord: function _toPixelCoord(type, g) {\n\t            var sign = type == 'width' || type == 'height' ? 1 : -1;\n\t            var px = g * this.options.cell - sign * this.options.margin;\n\t            type == 'top' && (px += this.top);\n\t            return px;\n\t        },\n\t\n\t        /** Converts a pixel to a grid coordinate set */\n\t        _toGrid: function _toGrid(px) {\n\t            return {\n\t                top: this._toGridCoord('top', px.top),\n\t                left: this._toGridCoord('left', px.left),\n\t                width: this._toGridCoord('width', px.width),\n\t                height: this._toGridCoord('height', px.height)\n\t            };\n\t        },\n\t\n\t        /** Converts a pixel to a grid coordinate set */\n\t        _toPixel: function _toPixel(g) {\n\t            return {\n\t                top: this._toPixelCoord('top', g.top),\n\t                left: this._toPixelCoord('left', g.left),\n\t                width: this._toPixelCoord('width', g.width),\n\t                height: this._toPixelCoord('height', g.height)\n\t            };\n\t        },\n\t\n\t        /* \n\t            COLLISION DETECTION\n\t        */\n\t\n\t        /** Check collisions for a grid coordinate set */\n\t        _isCollision: function _isCollision(g) {\n\t            function is_collision_pair(a, b) {\n\t                return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left || a.top > b.top + b.height - 1 || a.top + a.height - 1 < b.top);\n\t            }\n\t            for (var i in this.frame_list) {\n\t                var frame = this.frame_list[i];\n\t                if (frame.grid_location !== null && is_collision_pair(g, frame.grid_location)) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        },\n\t\n\t        /** Return location/grid rank */\n\t        _locationRank: function _locationRank(loc) {\n\t            return loc.top * this.cols + loc.left;\n\t        },\n\t\n\t        /*\n\t            PANEL/WINDOW FUNCTIONS\n\t        */\n\t\n\t        /** Refresh panel */\n\t        _panelRefresh: function _panelRefresh(animate) {\n\t            this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\t            this._frameInsert(null, null, animate);\n\t        },\n\t\n\t        /** Complete panel animation / frames not moving */\n\t        _panelAnimationComplete: function _panelAnimationComplete() {\n\t            var self = this;\n\t            $('.frame').promise().done(function () {\n\t                self._panelScroll(0, true);\n\t            });\n\t        },\n\t\n\t        /** Scroll panel */\n\t        _panelScroll: function _panelScroll(delta, animate) {\n\t            var top_new = this.top - this.options.scroll * delta;\n\t            top_new = Math.max(top_new, this.top_max);\n\t            top_new = Math.min(top_new, this.options.top_min);\n\t            if (this.top != top_new) {\n\t                for (var i in this.frame_list) {\n\t                    var frame = this.frame_list[i];\n\t                    if (frame.grid_location !== null) {\n\t                        var screen_location = {\n\t                            top: frame.screen_location.top - (this.top - top_new),\n\t                            left: frame.screen_location.left\n\t                        };\n\t                        this._frameOffset(frame, screen_location, animate);\n\t                    }\n\t                }\n\t                this.top = top_new;\n\t            }\n\t            this.render();\n\t        },\n\t\n\t        /*\n\t            FRAME FUNCTIONS\n\t        */\n\t\n\t        /** Initialize a new frame */\n\t        _frameInit: function _frameInit(frame, id) {\n\t            frame.id = id;\n\t            frame.screen_location = {};\n\t            frame.grid_location = {};\n\t            frame.grid_rank = null;\n\t            frame.$el.attr('id', id.substring(1));\n\t        },\n\t\n\t        /** Insert frame at given location */\n\t        _frameInsert: function _frameInsert(frame, new_loc, animate) {\n\t            var self = this;\n\t            var place_list = [];\n\t            if (frame) {\n\t                frame.grid_location = null;\n\t                place_list.push([frame, this._locationRank(new_loc)]);\n\t            }\n\t            _.each(this.frame_list, function (f) {\n\t                if (f.grid_location !== null) {\n\t                    f.grid_location = null;\n\t                    place_list.push([f, f.grid_rank]);\n\t                }\n\t            });\n\t            place_list.sort(function (a, b) {\n\t                return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\n\t            });\n\t            _.each(place_list, function (place) {\n\t                self._framePlace(place[0], animate);\n\t            });\n\t            this.top_max = 0;\n\t            _.each(this.frame_list, function (f) {\n\t                if (f.grid_location !== null) {\n\t                    self.top_max = Math.max(self.top_max, f.grid_location.top + f.grid_location.height);\n\t                }\n\t            });\n\t            this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\t            this.top_max = Math.min(this.top_max, this.options.top_min);\n\t            this.render();\n\t        },\n\t\n\t        /** Naive frame placement */\n\t        _framePlace: function _framePlace(frame, animate) {\n\t            frame.grid_location = null;\n\t            var g = this._toGrid(this._frameScreen(frame));\n\t            var done = false;\n\t            for (var i = 0; i < this.options.rows; i++) {\n\t                for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n\t                    g.top = i;\n\t                    g.left = j;\n\t                    if (!this._isCollision(g)) {\n\t                        done = true;\n\t                        break;\n\t                    }\n\t                }\n\t                if (done) {\n\t                    break;\n\t                }\n\t            }\n\t            if (done) {\n\t                this._frameGrid(frame, g, animate);\n\t            } else {\n\t                console.log('Grid dimensions exceeded.');\n\t            }\n\t        },\n\t\n\t        /** Handle frame focussing */\n\t        _frameFocus: function _frameFocus(frame, has_focus) {\n\t            frame.$el.css('z-index', this.frame_z + (has_focus ? 1 : 0));\n\t        },\n\t\n\t        /** New left/top position frame */\n\t        _frameOffset: function _frameOffset(frame, p, animate) {\n\t            frame.screen_location.left = p.left;\n\t            frame.screen_location.top = p.top;\n\t            if (animate) {\n\t                this._frameFocus(frame, true);\n\t                var self = this;\n\t                frame.$el.animate({ top: p.top, left: p.left }, 'fast', function () {\n\t                    self._frameFocus(frame, false);\n\t                });\n\t            } else {\n\t                frame.$el.css({ top: p.top, left: p.left });\n\t            }\n\t        },\n\t\n\t        /** Resize frame */\n\t        _frameResize: function _frameResize(frame, p) {\n\t            frame.$el.css({ width: p.width, height: p.height });\n\t            frame.screen_location.width = p.width;\n\t            frame.screen_location.height = p.height;\n\t        },\n\t\n\t        /** Push frame to new grid location */\n\t        _frameGrid: function _frameGrid(frame, l, animate) {\n\t            frame.grid_location = l;\n\t            this._frameOffset(frame, this._toPixel(l), animate);\n\t            frame.grid_rank = this._locationRank(l);\n\t        },\n\t\n\t        /** Get frame dimensions */\n\t        _frameScreen: function _frameScreen(frame) {\n\t            var p = frame.screen_location;\n\t            return { top: p.top, left: p.left, width: p.width, height: p.height };\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(3), __webpack_require__(6), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (_, Backbone, baseMVC, _l) {\n\t    'use strict';\n\t\n\t    var logNamespace = 'user';\n\t    //==============================================================================\n\t    /** @class Model for a Galaxy user (including anonymous users).\n\t     *  @name User\n\t     */\n\t    var User = Backbone.Model.extend(baseMVC.LoggableMixin).extend(\n\t    /** @lends User.prototype */{\n\t        _logNamespace: logNamespace,\n\t\n\t        /** API location for this resource */\n\t        urlRoot: function urlRoot() {\n\t            return Galaxy.root + 'api/users';\n\t        },\n\t\n\t        /** Model defaults\n\t         *  Note: don't check for anon-users with the username as the default is '(anonymous user)'\n\t         *      a safer method is if( !user.get( 'email' ) ) -> anon user\n\t         */\n\t        defaults: /** @lends User.prototype */{\n\t            id: null,\n\t            username: '(' + _l(\"anonymous user\") + ')',\n\t            email: \"\",\n\t            total_disk_usage: 0,\n\t            nice_total_disk_usage: \"\",\n\t            quota_percent: null,\n\t            is_admin: false\n\t        },\n\t\n\t        /** Set up and bind events\n\t         *  @param {Object} data Initial model data.\n\t         */\n\t        initialize: function initialize(data) {\n\t            this.log('User.initialize:', data);\n\t\n\t            this.on('loaded', function (model, resp) {\n\t                this.log(this + ' has loaded:', model, resp);\n\t            });\n\t            this.on('change', function (model, data) {\n\t                this.log(this + ' has changed:', model, data.changes);\n\t            });\n\t        },\n\t\n\t        isAnonymous: function isAnonymous() {\n\t            return !this.get('email');\n\t        },\n\t\n\t        isAdmin: function isAdmin() {\n\t            return this.get('is_admin');\n\t        },\n\t\n\t        /** Load a user with the API using an id.\n\t         *      If getting an anonymous user or no access to a user id, pass the User.CURRENT_ID_STR\n\t         *      (e.g. 'current') and the API will return the current transaction's user data.\n\t         *  @param {String} idOrCurrent encoded user id or the User.CURRENT_ID_STR\n\t         *  @param {Object} options hash to pass to Backbone.Model.fetch. Can contain success, error fns.\n\t         *  @fires loaded when the model has been loaded from the API, passing the newModel and AJAX response.\n\t         */\n\t        loadFromApi: function loadFromApi(idOrCurrent, options) {\n\t            idOrCurrent = idOrCurrent || User.CURRENT_ID_STR;\n\t\n\t            options = options || {};\n\t            var model = this,\n\t                userFn = options.success;\n\t\n\t            /** @ignore */\n\t            options.success = function (newModel, response) {\n\t                model.trigger('loaded', newModel, response);\n\t                if (userFn) {\n\t                    userFn(newModel, response);\n\t                }\n\t            };\n\t\n\t            // requests for the current user must have a sep. constructed url (fetch don't work, ma)\n\t            if (idOrCurrent === User.CURRENT_ID_STR) {\n\t                options.url = this.urlRoot + '/' + User.CURRENT_ID_STR;\n\t            }\n\t            return Backbone.Model.prototype.fetch.call(this, options);\n\t        },\n\t\n\t        /** Clears all data from the sessionStorage.\n\t         */\n\t        clearSessionStorage: function clearSessionStorage() {\n\t            for (var key in sessionStorage) {\n\t                //TODO: store these under the user key so we don't have to do this\n\t                // currently only history\n\t                if (key.indexOf('history:') === 0) {\n\t                    sessionStorage.removeItem(key);\n\t                } else if (key === 'history-panel') {\n\t                    sessionStorage.removeItem(key);\n\t                }\n\t            }\n\t        },\n\t\n\t        /** string representation */\n\t        toString: function toString() {\n\t            var userInfo = [this.get('username')];\n\t            if (this.get('id')) {\n\t                userInfo.unshift(this.get('id'));\n\t                userInfo.push(this.get('email'));\n\t            }\n\t            return 'User(' + userInfo.join(':') + ')';\n\t        }\n\t    });\n\t\n\t    // string to send to tell server to return this transaction's user (see api/users.py)\n\t    User.CURRENT_ID_STR = 'current';\n\t\n\t    // class method to load the current user via the api and return that model\n\t    User.getCurrentUserFromApi = function (options) {\n\t        var currentUser = new User();\n\t        currentUser.loadFromApi(User.CURRENT_ID_STR, options);\n\t        return currentUser;\n\t    };\n\t\n\t    // (stub) collection for users (shouldn't be common unless admin UI)\n\t    var UserCollection = Backbone.Collection.extend(baseMVC.LoggableMixin).extend({\n\t        model: User,\n\t        urlRoot: function urlRoot() {\n\t            return Galaxy.root + 'api/users';\n\t        }\n\t    });\n\t\n\t    //==============================================================================\n\t    return {\n\t        User: User\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(3), __webpack_require__(6), __webpack_require__(29), __webpack_require__(66), __webpack_require__(63), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (_, Backbone, BASE_MVC, userModel, metricsLogger, addLogging, localize) {\n\t\n\t    // TODO: move into a singleton pattern and have dependents import Galaxy\n\t    // ============================================================================\n\t    /** Base galaxy client-side application.\n\t     *      Iniitializes:\n\t     *          logger      : the logger/metrics-logger\n\t     *          localize    : the string localizer\n\t     *          config      : the current configuration (any k/v in\n\t     *              galaxy.ini available from the configuration API)\n\t     *          user        : the current user (as a mvc/user/user-model)\n\t     */\n\t    function GalaxyApp(options, bootstrapped) {\n\t        var self = this;\n\t        return self._init(options || {}, bootstrapped || {});\n\t    }\n\t\n\t    // add logging shortcuts for this object\n\t    addLogging(GalaxyApp, 'GalaxyApp');\n\t\n\t    // a debug flag can be set via local storage and made available during script/page loading\n\t    var DEBUGGING_KEY = 'galaxy:debug',\n\t        NAMESPACE_KEY = DEBUGGING_KEY + ':namespaces',\n\t        localDebugging = false;\n\t    try {\n\t        localDebugging = localStorage.getItem(DEBUGGING_KEY) == 'true';\n\t    } catch (storageErr) {\n\t        console.log(localize('localStorage not available for debug flag retrieval'));\n\t    }\n\t\n\t    /** initalize options and sub-components */\n\t    GalaxyApp.prototype._init = function __init(options, bootstrapped) {\n\t        var self = this;\n\t        _.extend(self, Backbone.Events);\n\t        if (localDebugging) {\n\t            self.logger = console;\n\t            console.debug('debugging galaxy:', 'options:', options, 'bootstrapped:', bootstrapped);\n\t        }\n\t\n\t        self._processOptions(options);\n\t        // special case for root\n\t        self.root = options.root || '/';\n\t\n\t        self._initConfig(options.config || {});\n\t        self._patchGalaxy(window.Galaxy);\n\t\n\t        self._initLogger(self.options.loggerOptions || {});\n\t        // at this point, either logging or not and namespaces are enabled - chat it up\n\t        self.debug('GalaxyApp.options: ', self.options);\n\t        self.debug('GalaxyApp.config: ', self.config);\n\t        self.debug('GalaxyApp.logger: ', self.logger);\n\t\n\t        self._initLocale();\n\t        self.debug('GalaxyApp.localize: ', self.localize);\n\t\n\t        self.config = options.config || {};\n\t        self.debug('GalaxyApp.config: ', self.config);\n\t\n\t        self._initUser(options.user || {});\n\t        self.debug('GalaxyApp.user: ', self.user);\n\t\n\t        self._setUpListeners();\n\t        self.trigger('ready', self);\n\t\n\t        return self;\n\t    };\n\t\n\t    /** default options */\n\t    GalaxyApp.prototype.defaultOptions = {\n\t        /** monkey patch attributes from existing window.Galaxy object? */\n\t        patchExisting: true,\n\t        /** root url of this app */\n\t        root: '/'\n\t    };\n\t\n\t    /** filter to options present in defaultOptions (and default to them) */\n\t    GalaxyApp.prototype._processOptions = function _processOptions(options) {\n\t        var self = this,\n\t            defaults = self.defaultOptions;\n\t\n\t        self.options = {};\n\t        for (var k in defaults) {\n\t            if (defaults.hasOwnProperty(k)) {\n\t                self.options[k] = options.hasOwnProperty(k) ? options[k] : defaults[k];\n\t            }\n\t        }\n\t        return self;\n\t    };\n\t\n\t    /** parse the config and any extra info derived from it */\n\t    GalaxyApp.prototype._initConfig = function _initConfig(config) {\n\t        var self = this;\n\t        self.config = config;\n\t\n\t        // give precendence to localdebugging for this setting\n\t        self.config.debug = localDebugging || self.config.debug;\n\t\n\t        return self;\n\t    };\n\t\n\t    /** add an option from options if the key matches an option in defaultOptions */\n\t    GalaxyApp.prototype._patchGalaxy = function _patchGalaxy(patchWith) {\n\t        var self = this;\n\t        // in case req or plain script tag order has created a prev. version of the Galaxy obj...\n\t        if (self.options.patchExisting && patchWith) {\n\t            // self.debug( 'found existing Galaxy object:', patchWith );\n\t            // ...(for now) monkey patch any added attributes that the previous Galaxy may have had\n\t            //TODO: move those attributes to more formal assignment in GalaxyApp\n\t            for (var k in patchWith) {\n\t                if (patchWith.hasOwnProperty(k)) {\n\t                    // self.debug( '\\t patching in ' + k + ' to Galaxy:', self[ k ] );\n\t                    self[k] = patchWith[k];\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    /** set up the metrics logger (utils/metrics-logger) and pass loggerOptions */\n\t    GalaxyApp.prototype._initLogger = function _initLogger(loggerOptions) {\n\t        var self = this;\n\t\n\t        // default to console logging at the debug level if the debug flag is set\n\t        if (self.config.debug) {\n\t            loggerOptions.consoleLogger = loggerOptions.consoleLogger || console;\n\t            loggerOptions.consoleLevel = loggerOptions.consoleLevel || metricsLogger.MetricsLogger.ALL;\n\t            // load any logging namespaces from localStorage if we can\n\t            try {\n\t                loggerOptions.consoleNamespaceWhitelist = localStorage.getItem(NAMESPACE_KEY).split(',');\n\t            } catch (storageErr) {}\n\t        }\n\t\n\t        self.logger = new metricsLogger.MetricsLogger(loggerOptions);\n\t        self.emit = {};\n\t        ['log', 'debug', 'info', 'warn', 'error', 'metric'].map(function (i) {\n\t            self.emit[i] = function (data) {\n\t                self.logger.emit(i, arguments[0], Array.prototype.slice.call(arguments, 1));\n\t            };\n\t        });\n\t\n\t        if (self.config.debug) {\n\t            // add this logger to mvc's loggable mixin so that all models can use the logger\n\t            BASE_MVC.LoggableMixin.logger = self.logger;\n\t        }\n\t        return self;\n\t    };\n\t\n\t    /** add the localize fn to this object and the window namespace (as '_l') */\n\t    GalaxyApp.prototype._initLocale = function _initLocale(options) {\n\t        var self = this;\n\t        self.debug('_initLocale:', options);\n\t        self.localize = localize;\n\t        // add to window as global shortened alias\n\t        // TODO: temporary - remove when can require for plugins\n\t        window._l = self.localize;\n\t        return self;\n\t    };\n\t\n\t    /** set up the current user as a Backbone model (mvc/user/user-model) */\n\t    GalaxyApp.prototype._initUser = function _initUser(userJSON) {\n\t        var self = this;\n\t        self.debug('_initUser:', userJSON);\n\t        self.user = new userModel.User(userJSON);\n\t        self.user.logger = self.logger;\n\t        return self;\n\t    };\n\t\n\t    /** Set up DOM/jQuery/Backbone event listeners enabled for all pages */\n\t    GalaxyApp.prototype._setUpListeners = function _setUpListeners() {\n\t        var self = this;\n\t\n\t        // hook to jq beforeSend to record the most recent ajax call and cache some data about it\n\t        /** cached info about the last ajax call made through jQuery */\n\t        self.lastAjax = {};\n\t        $(document).bind('ajaxSend', function (ev, xhr, options) {\n\t            var data = options.data;\n\t            try {\n\t                data = JSON.parse(data);\n\t            } catch (err) {}\n\t\n\t            self.lastAjax = {\n\t                url: location.href.slice(0, -1) + options.url,\n\t                data: data\n\t            };\n\t            //TODO:?? we might somehow manage to *retry* ajax using either this hook or Backbone.sync\n\t        });\n\t        return self;\n\t    };\n\t\n\t    /** Turn debugging/console-output on/off by passing boolean. Pass nothing to get current setting. */\n\t    GalaxyApp.prototype.debugging = function _debugging(setting) {\n\t        var self = this;\n\t        try {\n\t            if (setting === undefined) {\n\t                return localStorage.getItem(DEBUGGING_KEY) === 'true';\n\t            }\n\t            if (setting) {\n\t                localStorage.setItem(DEBUGGING_KEY, true);\n\t                return true;\n\t            }\n\t\n\t            localStorage.removeItem(DEBUGGING_KEY);\n\t            // also remove all namespaces\n\t            self.debuggingNamespaces(null);\n\t        } catch (storageErr) {\n\t            console.log(localize('localStorage not available for debug flag retrieval'));\n\t        }\n\t        return false;\n\t    };\n\t\n\t    /** Add, remove, or clear namespaces from the debugging filters\n\t     *  Pass no arguments to retrieve the existing namespaces as an array.\n\t     *  Pass in null to clear all namespaces (all logging messages will show now).\n\t     *  Pass in an array of strings or single string of the namespaces to filter to.\n\t     *  Returns the new/current namespaces as an array;\n\t     */\n\t    GalaxyApp.prototype.debuggingNamespaces = function _debuggingNamespaces(namespaces) {\n\t        var self = this;\n\t        try {\n\t            if (namespaces === undefined) {\n\t                var csv = localStorage.getItem(NAMESPACE_KEY);\n\t                return typeof csv === 'string' ? csv.split(',') : [];\n\t            } else if (namespaces === null) {\n\t                localStorage.removeItem(NAMESPACE_KEY);\n\t            } else {\n\t                localStorage.setItem(NAMESPACE_KEY, namespaces);\n\t            }\n\t            var newSettings = self.debuggingNamespaces();\n\t            if (self.logger) {\n\t                self.logger.options.consoleNamespaceWhitelist = newSettings;\n\t            }\n\t            return newSettings;\n\t        } catch (storageErr) {\n\t            console.log(localize('localStorage not available for debug namespace retrieval'));\n\t        }\n\t    };\n\t\n\t    /** string rep */\n\t    GalaxyApp.prototype.toString = function toString() {\n\t        var userEmail = this.user ? this.user.get('email') || '(anonymous)' : 'uninitialized';\n\t        return 'GalaxyApp(' + userEmail + ')';\n\t    };\n\t\n\t    // ============================================================================\n\t    return {\n\t        GalaxyApp: GalaxyApp\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {\"use strict\";\n\t\n\t/** Real-time Communication feature **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(8)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Modal) {\n\t\n\t    var GenericNavView = Backbone.View.extend({\n\t\n\t        initialize: function initialize() {\n\t            this.modal = null;\n\t        },\n\t\n\t        /** makes bootstrap modal and iframe inside it */\n\t        makeModalIframe: function makeModalIframe(e) {\n\t            // make modal\n\t            var host = window.Galaxy.config.communication_server_host,\n\t                port = window.Galaxy.config.communication_server_port,\n\t                username = escape(window.Galaxy.user.attributes.username),\n\t                persistent_communication_rooms = escape(window.Galaxy.config.persistent_communication_rooms),\n\t                query_string = \"?username=\" + username + \"&persistent_communication_rooms=\" + persistent_communication_rooms,\n\t                src = host + \":\" + port + query_string,\n\t                $el_chat_modal_header = null,\n\t                $el_chat_modal_body = null,\n\t                iframe_template = '<iframe class=\"f-iframe fade in communication-iframe\" src=\"' + src + '\"> </iframe>',\n\t                header_template = '<i class=\"fa fa-comment\" aria-hidden=\"true\" title=\"Communicate with other users\"></i>' + '<i class=\"fa fa-expand expand-compress-modal\" aria-hidden=\"true\" title=\"Maximize\"></i>' + '<i class=\"fa fa-times close-modal\" aria-hidden=\"true\" title=\"Close\"></i>',\n\t                frame_height = 350,\n\t                frame_width = 600,\n\t                class_names = 'ui-modal chat-modal';\n\t\n\t            // deletes the chat modal if already present and create one\n\t            if ($('.chat-modal').length > 0) {\n\t                $('.chat-modal').remove();\n\t            }\n\t            // creates a modal\n\t            GenericNavView.modal = new Modal.View({\n\t                body: iframe_template,\n\t                height: frame_height,\n\t                width: frame_width,\n\t                closing_events: true,\n\t                title_separator: false,\n\t                cls: class_names\n\t            });\n\t\n\t            // shows modal\n\t            GenericNavView.modal.show();\n\t            $el_chat_modal_header = $('.chat-modal .modal-header');\n\t            $el_chat_modal_body = $('.chat-modal .modal-body');\n\t            // adjusts the css of bootstrap modal for chat\n\t            $el_chat_modal_header.addClass('modal-header-body');\n\t            $el_chat_modal_body.addClass('modal-header-body');\n\t            $el_chat_modal_header.find('h4').remove();\n\t            $el_chat_modal_header.removeAttr('min-height padding border');\n\t            $el_chat_modal_header.append(header_template);\n\t            // click event of the close button for chat\n\t            $('.close-modal').click(function (e) {\n\t                $('.chat-modal').css('display', 'none');\n\t            });\n\t            // click event of expand and compress icon\n\t            $('.expand-compress-modal').click(function (e) {\n\t                if ($('.expand-compress-modal').hasClass('fa-expand')) {\n\t                    $('.chat-modal .modal-dialog').width('1000px');\n\t                    $('.chat-modal .modal-body').height('575px');\n\t                    $('.expand-compress-modal').removeClass('fa-expand').addClass('fa-compress');\n\t                    $('.expand-compress-modal').attr('title', 'Minimize');\n\t                    $('.expand-compress-modal').css('margin-left', '96.2%');\n\t                } else {\n\t                    $('.chat-modal .modal-dialog').width(frame_width + 'px');\n\t                    $('.chat-modal .modal-body').height(frame_height + 'px');\n\t                    $('.expand-compress-modal').removeClass('fa-compress').addClass('fa-expand');\n\t                    $('.expand-compress-modal').attr('title', 'Maximize');\n\t                    $('.expand-compress-modal').css('margin-left', '93.2%');\n\t                }\n\t            });\n\t            return this;\n\t        },\n\t\n\t        /**renders the chat icon as a nav item*/\n\t        render: function render() {\n\t            var self = this,\n\t                navItem = {};\n\t            navItem = {\n\t                id: 'show-chat-online',\n\t                icon: 'fa-comment-o',\n\t                tooltip: 'Chat online',\n\t                visible: false,\n\t                onclick: self.makeModalIframe\n\t            };\n\t            return navItem;\n\t        }\n\t    });\n\t\n\t    return {\n\t        GenericNavView: GenericNavView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(33), __webpack_require__(35), __webpack_require__(62)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Menu, Scratchbook, QuotaMeter) {\n\t\n\t    /** Masthead **/\n\t    var View = Backbone.View.extend({\n\t        initialize: function initialize(options) {\n\t            var self = this;\n\t            this.options = options;\n\t            this.setElement(this._template());\n\t            this.$navbarBrandLink = this.$('.navbar-brand-link');\n\t            this.$navbarBrandImage = this.$('.navbar-brand-image');\n\t            this.$navbarBrandTitle = this.$('.navbar-brand-title');\n\t            this.$navbarTabs = this.$('.navbar-tabs');\n\t            this.$quoteMeter = this.$('.quota-meter-container');\n\t\n\t            // build tabs\n\t            this.collection = new Menu.Collection();\n\t            this.collection.on('add', function (model) {\n\t                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n\t            }).on('reset', function () {\n\t                self.$navbarTabs.empty();\n\t            }).on('dispatch', function (callback) {\n\t                self.collection.each(function (m) {\n\t                    callback(m);\n\t                });\n\t            }).fetch(this.options);\n\t\n\t            // scratchbook\n\t            Galaxy.frame = this.frame = new Scratchbook({ collection: this.collection });\n\t\n\t            // set up the quota meter (And fetch the current user data from trans)\n\t            // add quota meter to masthead\n\t            Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n\t                model: Galaxy.user,\n\t                el: this.$quoteMeter\n\t            });\n\t\n\t            // loop through beforeunload functions if the user attempts to unload the page\n\t            $(window).on('click', function (e) {\n\t                var $download_link = $(e.target).closest('a[download]');\n\t                if ($download_link.length == 1) {\n\t                    if ($('iframe[id=download]').length === 0) {\n\t                        $('body').append($('<iframe/>').attr('id', 'download').hide());\n\t                    }\n\t                    $('iframe[id=download]').attr('src', $download_link.attr('href'));\n\t                    e.preventDefault();\n\t                }\n\t            }).on('beforeunload', function () {\n\t                var text = '';\n\t                self.collection.each(function (model) {\n\t                    var q = model.get('onbeforeunload') && model.get('onbeforeunload')();\n\t                    q && (text += q + ' ');\n\t                });\n\t                if (text !== '') {\n\t                    return text;\n\t                }\n\t            });\n\t        },\n\t\n\t        render: function render() {\n\t            this.$navbarBrandTitle.html('Galaxy ' + (this.options.brand && '/ ' + this.options.brand || ''));\n\t            this.$navbarBrandLink.attr('href', this.options.logo_url);\n\t            this.$navbarBrandImage.attr('src', this.options.logo_src);\n\t            this.quotaMeter.render();\n\t            return this;\n\t        },\n\t\n\t        /** body template */\n\t        _template: function _template() {\n\t            return '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' + '<div class=\"navbar-header\">' + '<div class=\"navbar-tabs\"/>' + '</div>' + '<div class=\"navbar-brand\">' + '<a class=\"navbar-brand-link\">' + '<img class=\"navbar-brand-image\"/>' + '<span class=\"navbar-brand-title\"/>' + '</a>' + '</div>' + '<div class=\"quota-meter-container\"/>' + '<div class=\"navbar-icons\"/>' + '</div>';\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, jQuery, $, _) {'use strict';\n\t\n\t/** Masthead Collection **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(26), __webpack_require__(31)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Tours, GenericNav) {\n\t    var Collection = Backbone.Collection.extend({\n\t        model: Backbone.Model.extend({\n\t            defaults: {\n\t                visible: true,\n\t                target: '_parent'\n\t            }\n\t        }),\n\t        fetch: function fetch(options) {\n\t            options = options || {};\n\t            this.reset();\n\t\n\t            //\n\t            // Chat server tab\n\t            //\n\t            var extendedNavItem = new GenericNav.GenericNavView();\n\t            this.add(extendedNavItem.render());\n\t\n\t            //\n\t            // Analyze data tab.\n\t            //\n\t            this.add({\n\t                id: 'analysis',\n\t                title: 'Analyze Data',\n\t                url: '',\n\t                tooltip: 'Analysis home view'\n\t            });\n\t\n\t            //\n\t            // Workflow tab.\n\t            //\n\t            this.add({\n\t                id: 'workflow',\n\t                title: 'Workflow',\n\t                url: 'workflow',\n\t                tooltip: 'Chain tools into workflows',\n\t                disabled: !Galaxy.user.id\n\t            });\n\t\n\t            //\n\t            // 'Shared Items' or Libraries tab.\n\t            //\n\t            this.add({\n\t                id: 'shared',\n\t                title: 'Shared Data',\n\t                url: 'library/index',\n\t                tooltip: 'Access published resources',\n\t                menu: [{\n\t                    title: 'Data Libraries',\n\t                    url: 'library/list'\n\t                }, {\n\t                    title: 'Histories',\n\t                    url: 'history/list_published'\n\t                }, {\n\t                    title: 'Workflows',\n\t                    url: 'workflow/list_published'\n\t                }, {\n\t                    title: 'Visualizations',\n\t                    url: 'visualization/list_published'\n\t                }, {\n\t                    title: 'Pages',\n\t                    url: 'page/list_published'\n\t                }]\n\t            });\n\t\n\t            //\n\t            // Lab menu.\n\t            //\n\t            options.user_requests && this.add({\n\t                id: 'lab',\n\t                title: 'Lab',\n\t                menu: [{\n\t                    title: 'Sequencing Requests',\n\t                    url: 'requests/index'\n\t                }, {\n\t                    title: 'Find Samples',\n\t                    url: 'requests/find_samples_index'\n\t                }, {\n\t                    title: 'Help',\n\t                    url: options.lims_doc_url\n\t                }]\n\t            });\n\t\n\t            //\n\t            // Visualization tab.\n\t            //\n\t            this.add({\n\t                id: 'visualization',\n\t                title: 'Visualization',\n\t                url: 'visualization/list',\n\t                tooltip: 'Visualize datasets',\n\t                disabled: !Galaxy.user.id,\n\t                menu: [{\n\t                    title: 'New Track Browser',\n\t                    url: 'visualization/trackster',\n\t                    target: '_frame'\n\t                }, {\n\t                    title: 'Saved Visualizations',\n\t                    url: 'visualization/list',\n\t                    target: '_frame'\n\t                }, {\n\t                    title: 'Interactive Environments',\n\t                    url: 'visualization/gie_list',\n\t                    target: 'galaxy_main'\n\t                }]\n\t            });\n\t\n\t            //\n\t            // Admin.\n\t            //\n\t            Galaxy.user.get('is_admin') && this.add({\n\t                id: 'admin',\n\t                title: 'Admin',\n\t                url: 'admin',\n\t                tooltip: 'Administer this Galaxy',\n\t                cls: 'admin-only'\n\t            });\n\t\n\t            //\n\t            // Help tab.\n\t            //\n\t            var helpTab = {\n\t                id: 'help',\n\t                title: 'Help',\n\t                tooltip: 'Support, contact, and community hubs',\n\t                menu: [{\n\t                    title: 'Support',\n\t                    url: options.support_url,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'Search',\n\t                    url: options.search_url,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'Mailing Lists',\n\t                    url: options.mailing_lists,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'Videos',\n\t                    url: options.screencasts_url,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'Wiki',\n\t                    url: options.wiki_url,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'How to Cite Galaxy',\n\t                    url: options.citation_url,\n\t                    target: '_blank'\n\t                }, {\n\t                    title: 'Interactive Tours',\n\t                    url: 'tours',\n\t                    onclick: function onclick() {\n\t                        if (Galaxy.app) {\n\t                            Galaxy.app.display(new Tours.ToursView());\n\t                        } else {\n\t                            // Redirect and use clientside routing to go to tour index\n\t                            window.location = Galaxy.root + \"tours\";\n\t                        }\n\t                    }\n\t                }]\n\t            };\n\t            options.terms_url && helpTab.menu.push({\n\t                title: 'Terms and Conditions',\n\t                url: options.terms_url,\n\t                target: '_blank'\n\t            });\n\t            options.biostar_url && helpTab.menu.unshift({\n\t                title: 'Ask a question',\n\t                url: 'biostar/biostar_question_redirect',\n\t                target: '_blank'\n\t            });\n\t            options.biostar_url && helpTab.menu.unshift({\n\t                title: 'Galaxy Biostar',\n\t                url: options.biostar_url_redirect,\n\t                target: '_blank'\n\t            });\n\t            this.add(helpTab);\n\t\n\t            //\n\t            // User tab.\n\t            //\n\t            if (!Galaxy.user.id) {\n\t                var userTab = {\n\t                    id: 'user',\n\t                    title: 'User',\n\t                    cls: 'loggedout-only',\n\t                    tooltip: 'Account registration or login',\n\t                    menu: [{\n\t                        title: 'Login',\n\t                        url: 'user/login',\n\t                        target: 'galaxy_main',\n\t                        noscratchbook: true\n\t                    }]\n\t                };\n\t                options.allow_user_creation && userTab.menu.push({\n\t                    title: 'Register',\n\t                    url: 'user/create',\n\t                    target: 'galaxy_main',\n\t                    noscratchbook: true\n\t                });\n\t                this.add(userTab);\n\t            } else {\n\t                var userTab = {\n\t                    id: 'user',\n\t                    title: 'User',\n\t                    cls: 'loggedin-only',\n\t                    tooltip: 'Account preferences and saved data',\n\t                    menu: [{\n\t                        title: 'Logged in as ' + Galaxy.user.get('email')\n\t                    }, {\n\t                        title: 'Preferences',\n\t                        url: 'user?cntrller=user',\n\t                        target: 'galaxy_main'\n\t                    }, {\n\t                        title: 'Custom Builds',\n\t                        url: 'user/dbkeys',\n\t                        target: 'galaxy_main'\n\t                    }, {\n\t                        title: 'Logout',\n\t                        url: 'user/logout',\n\t                        target: '_top',\n\t                        divider: true\n\t                    }, {\n\t                        title: 'Saved Histories',\n\t                        url: 'history/list',\n\t                        target: 'galaxy_main'\n\t                    }, {\n\t                        title: 'Saved Datasets',\n\t                        url: 'dataset/list',\n\t                        target: 'galaxy_main'\n\t                    }, {\n\t                        title: 'Saved Pages',\n\t                        url: 'page/list',\n\t                        target: '_top'\n\t                    }, {\n\t                        title: 'API Keys',\n\t                        url: 'user/api_keys?cntrller=user',\n\t                        target: 'galaxy_main'\n\t                    }]\n\t                };\n\t                options.use_remote_user && userTab.menu.push({\n\t                    title: 'Public Name',\n\t                    url: 'user/edit_username?cntrller=user',\n\t                    target: 'galaxy_main'\n\t                });\n\t                this.add(userTab);\n\t            }\n\t            var activeView = this.get(options.active_view);\n\t            activeView && activeView.set('active', true);\n\t            return new jQuery.Deferred().resolve().promise();\n\t        }\n\t    });\n\t\n\t    /** Masthead tab **/\n\t    var Tab = Backbone.View.extend({\n\t        initialize: function initialize(options) {\n\t            this.model = options.model;\n\t            this.setElement(this._template());\n\t            this.$dropdown = this.$('.dropdown');\n\t            this.$toggle = this.$('.dropdown-toggle');\n\t            this.$menu = this.$('.dropdown-menu');\n\t            this.$note = this.$('.dropdown-note');\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t        },\n\t\n\t        events: {\n\t            'click .dropdown-toggle': '_toggleClick'\n\t        },\n\t\n\t        render: function render() {\n\t            var self = this;\n\t            $('.tooltip').remove();\n\t            this.$el.attr('id', this.model.id).css({ visibility: this.model.get('visible') && 'visible' || 'hidden' });\n\t            this.model.set('url', this._formatUrl(this.model.get('url')));\n\t            this.$note.html(this.model.get('note') || '').removeClass().addClass('dropdown-note').addClass(this.model.get('note_cls')).css({ 'display': this.model.get('show_note') && 'block' || 'none' });\n\t            this.$toggle.html(this.model.get('title') || '').removeClass().addClass('dropdown-toggle').addClass(this.model.get('cls')).addClass(this.model.get('icon') && 'dropdown-icon fa ' + this.model.get('icon')).addClass(this.model.get('toggle') && 'toggle').attr('target', this.model.get('target')).attr('href', this.model.get('url')).attr('title', this.model.get('tooltip')).tooltip('destroy');\n\t            this.model.get('tooltip') && this.$toggle.tooltip({ placement: 'bottom' });\n\t            this.$dropdown.removeClass().addClass('dropdown').addClass(this.model.get('disabled') && 'disabled').addClass(this.model.get('active') && 'active');\n\t            if (this.model.get('menu') && this.model.get('show_menu')) {\n\t                this.$menu.show();\n\t                $('#dd-helper').show().off().on('click', function () {\n\t                    $('#dd-helper').hide();\n\t                    self.model.set('show_menu', false);\n\t                });\n\t            } else {\n\t                self.$menu.hide();\n\t                $('#dd-helper').hide();\n\t            }\n\t            this.$menu.empty().removeClass('dropdown-menu');\n\t            if (this.model.get('menu')) {\n\t                _.each(this.model.get('menu'), function (menuItem) {\n\t                    self.$menu.append(self._buildMenuItem(menuItem));\n\t                    menuItem.divider && self.$menu.append($('<li/>').addClass('divider'));\n\t                });\n\t                self.$menu.addClass('dropdown-menu');\n\t                self.$toggle.append($('<b/>').addClass('caret'));\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /** Add new menu item */\n\t        _buildMenuItem: function _buildMenuItem(options) {\n\t            var self = this;\n\t            options = _.defaults(options || {}, {\n\t                title: '',\n\t                url: '',\n\t                target: '_parent',\n\t                noscratchbook: false\n\t            });\n\t            options.url = self._formatUrl(options.url);\n\t            return $('<li/>').append($('<a/>').attr('href', options.url).attr('target', options.target).html(options.title).on('click', function (e) {\n\t                e.preventDefault();\n\t                self.model.set('show_menu', false);\n\t                if (options.onclick) {\n\t                    options.onclick();\n\t                } else {\n\t                    Galaxy.frame.add(options);\n\t                }\n\t            }));\n\t        },\n\t\n\t        /** Handle click event */\n\t        _toggleClick: function _toggleClick(e) {\n\t            var self = this;\n\t            var model = this.model;\n\t            e.preventDefault();\n\t            $('.tooltip').hide();\n\t            model.trigger('dispatch', function (m) {\n\t                model.id !== m.id && m.get('menu') && m.set('show_menu', false);\n\t            });\n\t            if (!model.get('disabled')) {\n\t                if (!model.get('menu')) {\n\t                    model.get('onclick') ? model.get('onclick')() : Galaxy.frame.add(model.attributes);\n\t                } else {\n\t                    model.set('show_menu', true);\n\t                }\n\t            } else {\n\t                var buildLink = function buildLink(label, url) {\n\t                    return $('<div/>').append($('<a/>').attr('href', Galaxy.root + url).html(label)).html();\n\t                };\n\t\n\t                this.$toggle.popover && this.$toggle.popover('destroy');\n\t                this.$toggle.popover({\n\t                    html: true,\n\t                    placement: 'bottom',\n\t                    content: 'Please ' + buildLink('login', 'user/login?use_panels=True') + ' or ' + buildLink('register', 'user/create?use_panels=True') + ' to use this feature.'\n\t                }).popover('show');\n\t                setTimeout(function () {\n\t                    self.$toggle.popover('destroy');\n\t                }, 5000);\n\t            }\n\t        },\n\t\n\t        /** Url formatting */\n\t        _formatUrl: function _formatUrl(url) {\n\t            return typeof url == 'string' && url.indexOf('//') === -1 && url.charAt(0) != '/' ? Galaxy.root + url : url;\n\t        },\n\t\n\t        /** body tempate */\n\t        _template: function _template() {\n\t            return '<ul class=\"nav navbar-nav\">' + '<li class=\"dropdown\">' + '<a class=\"dropdown-toggle\"/>' + '<ul class=\"dropdown-menu\"/>' + '<div class=\"dropdown-note\"/>' + '</li>' + '</ul>';\n\t        }\n\t    });\n\t\n\t    return {\n\t        Collection: Collection,\n\t        Tab: Tab\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(32), __webpack_require__(10), __webpack_require__(8), __webpack_require__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Masthead, Panel, Modal, BaseMVC) {\n\t\n\t    // ============================================================================\n\t    var PageLayoutView = Backbone.View.extend(BaseMVC.LoggableMixin).extend({\n\t        _logNamespace: 'layout',\n\t\n\t        el: 'body',\n\t        className: 'full-content',\n\t\n\t        _panelIds: ['left', 'center', 'right'],\n\t\n\t        defaultOptions: {\n\t            message_box_visible: false,\n\t            message_box_content: '',\n\t            message_box_class: 'info',\n\t            show_inactivity_warning: false,\n\t            inactivity_box_content: ''\n\t        },\n\t\n\t        initialize: function initialize(options) {\n\t            // TODO: remove globals\n\t            this.log(this + '.initialize:', options);\n\t            _.extend(this, _.pick(options, this._panelIds));\n\t            this.options = _.defaults(_.omit(options.config, this._panelIds), this.defaultOptions);\n\t            Galaxy.modal = this.modal = new Modal.View();\n\t            this.masthead = new Masthead.View(this.options);\n\t            this.$el.attr('scroll', 'no');\n\t            this.$el.html(this._template());\n\t            this.$el.append(this.masthead.frame.$el);\n\t            this.$('#masthead').replaceWith(this.masthead.$el);\n\t            this.$el.append(this.modal.$el);\n\t            this.$messagebox = this.$('#messagebox');\n\t            this.$inactivebox = this.$('#inactivebox');\n\t        },\n\t\n\t        render: function render() {\n\t            // TODO: Remove this line after select2 update\n\t            $('.select2-hidden-accessible').remove();\n\t            this.log(this + '.render:');\n\t            this.masthead.render();\n\t            this.renderMessageBox();\n\t            this.renderInactivityBox();\n\t            this.renderPanels();\n\t            this._checkCommunicationServerOnline();\n\t            return this;\n\t        },\n\t\n\t        /** Render message box */\n\t        renderMessageBox: function renderMessageBox() {\n\t            if (this.options.message_box_visible) {\n\t                var content = this.options.message_box_content || '';\n\t                var level = this.options.message_box_class || 'info';\n\t                this.$el.addClass('has-message-box');\n\t                this.$messagebox.attr('class', 'panel-' + level + '-message').html(content).toggle(!!content).show();\n\t            } else {\n\t                this.$el.removeClass('has-message-box');\n\t                this.$messagebox.hide();\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /** Render inactivity warning */\n\t        renderInactivityBox: function renderInactivityBox() {\n\t            if (this.options.show_inactivity_warning) {\n\t                var content = this.options.inactivity_box_content || '';\n\t                var verificationLink = $('<a/>').attr('href', Galaxy.root + 'user/resend_verification').text('Resend verification');\n\t                this.$el.addClass('has-inactivity-box');\n\t                this.$inactivebox.html(content + ' ').append(verificationLink).toggle(!!content).show();\n\t            } else {\n\t                this.$el.removeClass('has-inactivity-box');\n\t                this.$inactivebox.hide();\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /** Render panels */\n\t        renderPanels: function renderPanels() {\n\t            var page = this;\n\t            this._panelIds.forEach(function (panelId) {\n\t                if (_.has(page, panelId)) {\n\t                    page[panelId].setElement('#' + panelId);\n\t                    page[panelId].render();\n\t                }\n\t            });\n\t            if (!this.left) {\n\t                this.center.$el.css('left', 0);\n\t            }\n\t            if (!this.right) {\n\t                this.center.$el.css('right', 0);\n\t            }\n\t            return this;\n\t        },\n\t\n\t        /** body template */\n\t        _template: function _template() {\n\t            return ['<div id=\"everything\">', '<div id=\"background\"/>', '<div id=\"masthead\"/>', '<div id=\"messagebox\"/>', '<div id=\"inactivebox\" class=\"panel-warning-message\" />', this.left ? '<div id=\"left\" />' : '', this.center ? '<div id=\"center\" class=\"inbound\" />' : '', this.right ? '<div id=\"right\" />' : '', '</div>', '<div id=\"dd-helper\" />'].join('');\n\t        },\n\t\n\t        /** hide both side panels if previously shown */\n\t        hideSidePanels: function hideSidePanels() {\n\t            if (this.left) {\n\t                this.left.hide();\n\t            }\n\t            if (this.right) {\n\t                this.right.hide();\n\t            }\n\t        },\n\t\n\t        toString: function toString() {\n\t            return 'PageLayoutView';\n\t        },\n\t\n\t        /** Check if the communication server is online and show the icon otherwise hide the icon */\n\t        _checkCommunicationServerOnline: function _checkCommunicationServerOnline() {\n\t            var host = window.Galaxy.config.communication_server_host,\n\t                port = window.Galaxy.config.communication_server_port,\n\t                $chat_icon_element = $(\"#show-chat-online\");\n\t            /** Check if the user has deactivated the communication in it's personal settings */\n\t            if (window.Galaxy.user.attributes.preferences !== undefined && window.Galaxy.user.attributes.preferences.communication_server === '1') {\n\t                // See if the configured communication server is available\n\t                $.ajax({\n\t                    url: host + \":\" + port\n\t                }).success(function (data) {\n\t                    // enable communication only when a user is logged in\n\t                    if (window.Galaxy.user.id !== null) {\n\t                        if ($chat_icon_element.css(\"visibility\") === \"hidden\") {\n\t                            $chat_icon_element.css(\"visibility\", \"visible\");\n\t                        }\n\t                    }\n\t                }).error(function (data) {\n\t                    // hide the communication icon if the communication server is not available\n\t                    $chat_icon_element.css(\"visibility\", \"hidden\");\n\t                });\n\t            } else {\n\t                $chat_icon_element.css(\"visibility\", \"hidden\");\n\t            }\n\t        }\n\t    });\n\t\n\t    // ============================================================================\n\t    return {\n\t        PageLayoutView: PageLayoutView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {'use strict';\n\t\n\t/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(15)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Frames) {\n\t    return Backbone.View.extend({\n\t        initialize: function initialize(options) {\n\t            var self = this;\n\t            options = options || {};\n\t            this.frames = new Frames.View({ visible: false });\n\t            this.setElement(this.frames.$el);\n\t            this.buttonActive = options.collection.add({\n\t                id: 'enable-scratchbook',\n\t                icon: 'fa-th',\n\t                tooltip: 'Enable/Disable Scratchbook',\n\t                onclick: function onclick() {\n\t                    self.active = !self.active;\n\t                    self.buttonActive.set({\n\t                        toggle: self.active,\n\t                        show_note: self.active,\n\t                        note_cls: self.active && 'fa fa-check'\n\t                    });\n\t                    !self.active && self.frames.hide();\n\t                },\n\t                onbeforeunload: function onbeforeunload() {\n\t                    if (self.frames.length() > 0) {\n\t                        return 'You opened ' + self.frames.length() + ' frame(s) which will be lost.';\n\t                    }\n\t                }\n\t            });\n\t            this.buttonLoad = options.collection.add({\n\t                id: 'show-scratchbook',\n\t                icon: 'fa-eye',\n\t                tooltip: 'Show/Hide Scratchbook',\n\t                show_note: true,\n\t                visible: false,\n\t                onclick: function onclick(e) {\n\t                    self.frames.visible ? self.frames.hide() : self.frames.show();\n\t                }\n\t            });\n\t            this.frames.on('add remove', function () {\n\t                this.visible && this.length() == 0 && this.hide();\n\t                self.buttonLoad.set({ 'note': this.length(), 'visible': this.length() > 0 });\n\t            }).on('show hide ', function () {\n\t                self.buttonLoad.set({ 'toggle': this.visible, 'icon': this.visible && 'fa-eye' || 'fa-eye-slash' });\n\t            });\n\t            this.history_cache = {};\n\t        },\n\t\n\t        /** Add a dataset to the frames */\n\t        addDataset: function addDataset(dataset_id) {\n\t            var self = this;\n\t            var current_dataset = null;\n\t            if (Galaxy && Galaxy.currHistoryPanel) {\n\t                var history_id = Galaxy.currHistoryPanel.collection.historyId;\n\t                this.history_cache[history_id] = { name: Galaxy.currHistoryPanel.model.get('name'), dataset_ids: [] };\n\t                Galaxy.currHistoryPanel.collection.each(function (model) {\n\t                    !model.get('deleted') && model.get('visible') && self.history_cache[history_id].dataset_ids.push(model.get('id'));\n\t                });\n\t            }\n\t            var _findDataset = function _findDataset(dataset, offset) {\n\t                if (dataset) {\n\t                    var history_details = self.history_cache[dataset.get('history_id')];\n\t                    if (history_details && history_details.dataset_ids) {\n\t                        var dataset_list = history_details.dataset_ids;\n\t                        var pos = dataset_list.indexOf(dataset.get('id'));\n\t                        if (pos !== -1 && pos + offset >= 0 && pos + offset < dataset_list.length) {\n\t                            return dataset_list[pos + offset];\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t            var _loadDatasetOffset = function _loadDatasetOffset(dataset, offset, frame) {\n\t                var new_dataset_id = _findDataset(dataset, offset);\n\t                if (new_dataset_id) {\n\t                    self._loadDataset(new_dataset_id, function (new_dataset, config) {\n\t                        current_dataset = new_dataset;\n\t                        frame.model.set(config);\n\t                    });\n\t                } else {\n\t                    frame.model.trigger('change');\n\t                }\n\t            };\n\t            this._loadDataset(dataset_id, function (dataset, config) {\n\t                current_dataset = dataset;\n\t                self.add(_.extend({ menu: [{ icon: 'fa fa-chevron-circle-left',\n\t                        tooltip: 'Previous in History',\n\t                        onclick: function onclick(frame) {\n\t                            _loadDatasetOffset(current_dataset, -1, frame);\n\t                        },\n\t                        disabled: function disabled() {\n\t                            return !_findDataset(current_dataset, -1);\n\t                        } }, { icon: 'fa fa-chevron-circle-right',\n\t                        tooltip: 'Next in History',\n\t                        onclick: function onclick(frame) {\n\t                            _loadDatasetOffset(current_dataset, 1, frame);\n\t                        },\n\t                        disabled: function disabled() {\n\t                            return !_findDataset(current_dataset, 1);\n\t                        } }] }, config));\n\t            });\n\t        },\n\t\n\t        _loadDataset: function _loadDataset(dataset_id, callback) {\n\t            var self = this;\n\t            __webpack_require__.e/* require */(1, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(11)]; (function (DATA) {\n\t                var dataset = new DATA.Dataset({ id: dataset_id });\n\t                $.when(dataset.fetch()).then(function () {\n\t                    var is_tabular = _.find(['tabular', 'interval'], function (data_type) {\n\t                        return dataset.get('data_type').indexOf(data_type) !== -1;\n\t                    });\n\t                    var title = dataset.get('name');\n\t                    var history_details = self.history_cache[dataset.get('history_id')];\n\t                    if (history_details) {\n\t                        title = history_details.name + ': ' + title;\n\t                    }\n\t                    callback(dataset, is_tabular ? {\n\t                        title: title,\n\t                        url: null,\n\t                        content: DATA.createTabularDatasetChunkedView({\n\t                            model: new DATA.TabularDataset(dataset.toJSON()),\n\t                            embedded: true,\n\t                            height: '100%'\n\t                        }).$el\n\t                    } : {\n\t                        title: title,\n\t                        url: Galaxy.root + 'datasets/' + dataset_id + '/display/?preview=True',\n\t                        content: null\n\t                    });\n\t                });\n\t            }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(2)))});\n\t        },\n\t\n\t        /** Add a trackster visualization to the frames. */\n\t        addTrackster: function addTrackster(viz_id) {\n\t            var self = this;\n\t            __webpack_require__.e/* require */(0, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(24), __webpack_require__(96)]; (function (visualization, trackster) {\n\t                var viz = new visualization.Visualization({ id: viz_id });\n\t                $.when(viz.fetch()).then(function () {\n\t                    var ui = new trackster.TracksterUI(Galaxy.root);\n\t\n\t                    // Construct frame config based on dataset's type.\n\t                    var frame_config = {\n\t                        title: viz.get('name'),\n\t                        type: 'other',\n\t                        content: function content(parent_elt) {\n\t                            // Create view config.\n\t                            var view_config = {\n\t                                container: parent_elt,\n\t                                name: viz.get('title'),\n\t                                id: viz.id,\n\t                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n\t                                dbkey: viz.get('dbkey'),\n\t                                stand_alone: false\n\t                            },\n\t                                latest_revision = viz.get('latest_revision'),\n\t                                drawables = latest_revision.config.view.drawables;\n\t\n\t                            // Set up datasets in drawables.\n\t                            _.each(drawables, function (d) {\n\t                                d.dataset = {\n\t                                    hda_ldda: d.hda_ldda,\n\t                                    id: d.dataset_id\n\t                                };\n\t                            });\n\t                            view = ui.create_visualization(view_config, latest_revision.config.viewport, latest_revision.config.view.drawables, latest_revision.config.bookmarks, false);\n\t                        }\n\t                    };\n\t                    self.add(frame_config);\n\t                });\n\t            }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(2)))});\n\t        },\n\t\n\t        /** Add and display a new frame/window based on options. */\n\t        add: function add(options) {\n\t            if (options.target == '_blank') {\n\t                window.open(options.url);\n\t            } else if (options.target == '_top' || options.target == '_parent' || options.target == '_self') {\n\t                window.location = options.url;\n\t            } else if (!this.active || options.noscratchbook) {\n\t                var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n\t                if (options.target == 'galaxy_main' || options.target == 'center') {\n\t                    if ($galaxy_main.length === 0) {\n\t                        window.location = options.url + (options.url.indexOf('?') == -1 ? '?' : '&') + 'use_panels=True';\n\t                    } else {\n\t                        $galaxy_main.attr('src', options.url);\n\t                    }\n\t                } else window.location = options.url;\n\t            } else {\n\t                this.frames.add(options);\n\t            }\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 62:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\"use strict\";\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(6), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (baseMVC, _l) {\n\t    'use strict';\n\t\n\t    var logNamespace = 'user';\n\t    //==============================================================================\n\t    /** @class View to display a user's disk/storage usage\n\t     *      either as a progress bar representing the percentage of a quota used\n\t     *      or a simple text element displaying the human readable size used.\n\t     *  @name UserQuotaMeter\n\t     *  @augments Backbone.View\n\t     */\n\t    var UserQuotaMeter = Backbone.View.extend(baseMVC.LoggableMixin).extend(\n\t    /** @lends UserQuotaMeter.prototype */{\n\t        _logNamespace: logNamespace,\n\t\n\t        /** Defaults for optional settings passed to initialize */\n\t        options: {\n\t            warnAtPercent: 85,\n\t            errorAtPercent: 100\n\t        },\n\t\n\t        /** Set up, accept options, and bind events */\n\t        initialize: function initialize(options) {\n\t            this.log(this + '.initialize:', options);\n\t            _.extend(this.options, options);\n\t\n\t            //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n\t            this.listenTo(this.model, 'change:quota_percent change:total_disk_usage', this.render);\n\t        },\n\t\n\t        /** Re-load user model data from the api */\n\t        update: function update(options) {\n\t            this.log(this + ' updating user data...', options);\n\t            this.model.loadFromApi(this.model.get('id'), options);\n\t            return this;\n\t        },\n\t\n\t        /** Is the user over their quota (if there is one)?\n\t         * @returns {Boolean} true if over quota, false if no quota or under quota\n\t         */\n\t        isOverQuota: function isOverQuota() {\n\t            return this.model.get('quota_percent') !== null && this.model.get('quota_percent') >= this.options.errorAtPercent;\n\t        },\n\t\n\t        /** Render the meter when they have an applicable quota. Will render as a progress bar\n\t         *      with their percentage of that quota in text over the bar.\n\t         *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n\t         *  @fires quota:under when user is under quota\n\t         *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n\t         *  @fires quota:under:ok when user is below this.warnAtPercent\n\t         *  @returns {jQuery} the rendered meter\n\t         */\n\t        _render_quota: function _render_quota() {\n\t            var modelJson = this.model.toJSON(),\n\t\n\t            //prevPercent = this.model.previous( 'quota_percent' ),\n\t            percent = modelJson.quota_percent,\n\t\n\t            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n\t            $meter = $(this._templateQuotaMeter(modelJson)),\n\t                $bar = $meter.find('.progress-bar');\n\t            //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\t\n\t            // OVER QUOTA: color the quota bar and show the quota error message\n\t            if (this.isOverQuota()) {\n\t                //this.log( '\\t over quota' );\n\t                $bar.attr('class', 'progress-bar progress-bar-danger');\n\t                $meter.find('.quota-meter-text').css('color', 'white');\n\t                //TODO: only trigger event if state has changed\n\t                this.trigger('quota:over', modelJson);\n\t\n\t                // APPROACHING QUOTA: color the quota bar\n\t            } else if (percent >= this.options.warnAtPercent) {\n\t                //this.log( '\\t approaching quota' );\n\t                $bar.attr('class', 'progress-bar progress-bar-warning');\n\t                //TODO: only trigger event if state has changed\n\t                this.trigger('quota:under quota:under:approaching', modelJson);\n\t\n\t                // otherwise, hide/don't use the msg box\n\t            } else {\n\t                $bar.attr('class', 'progress-bar progress-bar-success');\n\t                //TODO: only trigger event if state has changed\n\t                this.trigger('quota:under quota:under:ok', modelJson);\n\t            }\n\t            return $meter;\n\t        },\n\t\n\t        /** Render the meter when the user has NO applicable quota. Will render as text\n\t         *      showing the human readable sum storage their data is using.\n\t         *  @returns {jQuery} the rendered text\n\t         */\n\t        _render_usage: function _render_usage() {\n\t            //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n\t            var usage = $(this._templateUsage(this.model.toJSON()));\n\t            this.log(this + '.rendering usage:', usage);\n\t            return usage;\n\t        },\n\t\n\t        /** Render either the quota percentage meter or the human readable disk usage\n\t         *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n\t         *  @returns {Object} this UserQuotaMeter\n\t         */\n\t        render: function render() {\n\t            //this.log( this + '.rendering' );\n\t            var meterHtml = null;\n\t\n\t            // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n\t            this.log(this + '.model.quota_percent:', this.model.get('quota_percent'));\n\t            if (this.model.get('quota_percent') === null || this.model.get('quota_percent') === undefined) {\n\t                meterHtml = this._render_usage();\n\t\n\t                // otherwise, render percent of quota (and warning, error)\n\t            } else {\n\t                meterHtml = this._render_quota();\n\t                //TODO: add the original text for unregistered quotas\n\t                //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n\t            }\n\t\n\t            this.$el.html(meterHtml);\n\t            this.$el.find('.quota-meter-text').tooltip();\n\t            return this;\n\t        },\n\t\n\t        _templateQuotaMeter: function _templateQuotaMeter(data) {\n\t            return ['<div id=\"quota-meter\" class=\"quota-meter progress\">', '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>', '<div class=\"quota-meter-text\" style=\"top: 6px\"', data.nice_total_disk_usage ? ' title=\"Using ' + data.nice_total_disk_usage + '\">' : '>', _l('Using'), ' ', data.quota_percent, '%', '</div>', '</div>'].join('');\n\t        },\n\t\n\t        _templateUsage: function _templateUsage(data) {\n\t            return ['<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">', '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">', data.nice_total_disk_usage ? _l('Using ') + data.nice_total_disk_usage : '', '</div>', '</div>'].join('');\n\t        },\n\t\n\t        toString: function toString() {\n\t            return 'UserQuotaMeter(' + this.model + ')';\n\t        }\n\t    });\n\t\n\t    //==============================================================================\n\t    return {\n\t        UserQuotaMeter: UserQuotaMeter\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery) {'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t    /*global window, jQuery, console */\n\t    /*=============================================================================\n\t    TODO:\n\t        while anon: logs saved to 'logs-null' - this will never post\n\t            unless we manually do so at/after login\n\t            OR prepend when userId and localStorage has 'logs-null'\n\t        wire up _delayPost and test\n\t    \n\t    =============================================================================*/\n\t    /** @class MetricsLogger\n\t     *\n\t     *  Object to cache, output, and post log/metric messages to the server.\n\t     *  Meant to be attached to the Galaxy object.\n\t     *\n\t     *  Log from objects by either attaching logger directly:\n\t     *      panel.logger.metric( 'user dataset deletion', panel.user.id, hda.toJSON() )\n\t     *  or using the LoggableMixin or addLogging function:\n\t     *      MyBackboneModel.extend( LoggableMixin ).extend({ ... })\n\t     *      addLogging( MyBackboneModel, 'my-backbone-model' )\n\t     *\n\t     *  Log from templates by calling directly from Galaxy object:\n\t     *      Galaxy.logger.metric( 'template loaded', { ownedByUser : true });\n\t     *\n\t     *  If you attempt to log an un-serializable object (circular reference, window, etc.),\n\t     *  that entry will not be cached (or sent). If you set consoleLevel and consoleLogger\n\t     *  appropriately, a warning will be shown when this happens:\n\t     *      > panel.metric( 'something weird with window', { window : window })\n\t     *      !'Metrics logger could not stringify logArguments: ...'\n\t     */\n\t    function MetricsLogger(options) {\n\t        options = options || {};\n\t        var self = this;\n\t\n\t        ///** get the current user's id from bootstrapped data or options */\n\t        self.userId = window.bootstrapped && window.bootstrapped.user ? window.bootstrapped.user.id : null;\n\t        self.userId = self.userId || options.userId || null;\n\t\n\t        /** the (optional) console to emit logs to */\n\t        self.consoleLogger = options.consoleLogger || null;\n\t\n\t        self._init(options);\n\t        return self;\n\t    }\n\t\n\t    //----------------------------------------------------------------------------- defaults and constants\n\t    // see: python std lib, logging\n\t    MetricsLogger.ALL = 0;\n\t    MetricsLogger.LOG = 0;\n\t    MetricsLogger.DEBUG = 10;\n\t    MetricsLogger.INFO = 20;\n\t    MetricsLogger.WARN = 30;\n\t    MetricsLogger.ERROR = 40;\n\t    // metrics levels here?\n\t    //MetricsLogger.MinorEvent  = 45;\n\t    //MetricsLogger.MajorEvent  = 50;\n\t    MetricsLogger.METRIC = 50;\n\t    MetricsLogger.NONE = 100;\n\t\n\t    /** default options - override these through the constructor */\n\t    MetricsLogger.defaultOptions = {\n\t        /** if an incoming message has a level >= this, it will be cached - can also be a string (e.g. 'debug') */\n\t        logLevel: MetricsLogger.NONE,\n\t        /** if an incoming message has a level >= this, it will be output to the console */\n\t        consoleLevel: MetricsLogger.NONE,\n\t        /** the default 'namespace' or label associated with an incoming message (if none is passed) */\n\t        defaultNamespace: 'Galaxy',\n\t        /** the namespaces output to the console (all namespaces will be output if this is falsy)\n\t         *  note: applies only to the console (not the event/metrics log/cache)\n\t         */\n\t        consoleNamespaceWhitelist: null,\n\t        /** the prefix attached to client-side logs to distinguish them in the metrics db */\n\t        clientPrefix: 'client.',\n\t\n\t        /** the maximum number of messages the cache should hold; if exceeded older messages are removed first */\n\t        maxCacheSize: 3000,\n\t        /** the number of messages accumulate before posting to the server; should be <= maxCacheSize */\n\t        postSize: 1000,\n\t        /** T/F whether to add a timestamp to incoming cached messages */\n\t        addTime: true,\n\t        /** string to prefix to userid for cache web storage */\n\t        cacheKeyPrefix: 'logs-',\n\t\n\t        /** the relative url to post messages to */\n\t        postUrl: '/api/metrics',\n\t        /** delay before trying post again after two failures */\n\t        delayPostInMs: 1000 * 60 * 10,\n\t\n\t        /** an (optional) function that should return an object; used to send additional data with the metrics */\n\t        getPingData: undefined,\n\t        /** an (optional) function that will handle the servers response after successfully posting messages */\n\t        onServerResponse: undefined\n\t    };\n\t\n\t    //----------------------------------------------------------------------------- set up\n\t    /** initialize the logger with options, set up instance vars and cache, and add onpageunload to window */\n\t    MetricsLogger.prototype._init = function _init(options) {\n\t        var self = this;\n\t        self.options = {};\n\t        for (var k in MetricsLogger.defaultOptions) {\n\t            if (MetricsLogger.defaultOptions.hasOwnProperty(k)) {\n\t                self.options[k] = options.hasOwnProperty(k) ? options[k] : MetricsLogger.defaultOptions[k];\n\t            }\n\t        }\n\t        self.options.logLevel = self._parseLevel(self.options.logLevel);\n\t        self.options.consoleLevel = self._parseLevel(self.options.consoleLevel);\n\t        //self._emitToConsole( 'debug', 'MetricsLogger', 'MetricsLogger.options:', self.options );\n\t\n\t        /** is the logger currently sending? */\n\t        self._sending = false;\n\t        /** the setTimeout id if the logger POST has failed more than once */\n\t        self._waiting = null;\n\t        /** the current number of entries to send in a POST */\n\t        self._postSize = self.options.postSize;\n\t\n\t        self._initCache();\n\t\n\t        return self;\n\t    };\n\t\n\t    /** initialize the cache */\n\t    MetricsLogger.prototype._initCache = function _initCache() {\n\t        try {\n\t            this.cache = new LoggingCache({\n\t                maxSize: this.options.maxCacheSize,\n\t                key: this.options.cacheKeyPrefix + this.userId\n\t            });\n\t        } catch (err) {\n\t            this._emitToConsole('warn', 'MetricsLogger', ['Could not intitialize logging cache:', err]);\n\t            this.options.logLevel = MetricsLogger.NONE;\n\t        }\n\t    };\n\t\n\t    /** return the numeric log level if level in 'none, debug, log, info, warn, error' */\n\t    MetricsLogger.prototype._parseLevel = function _parseLevel(level) {\n\t        var type = typeof level === 'undefined' ? 'undefined' : _typeof(level);\n\t        if (type === 'number') {\n\t            return level;\n\t        }\n\t        if (type === 'string') {\n\t            var upper = level.toUpperCase();\n\t            if (MetricsLogger.hasOwnProperty(upper)) {\n\t                return MetricsLogger[upper];\n\t            }\n\t        }\n\t        throw new Error('Unknown log level: ' + level);\n\t    };\n\t\n\t    //----------------------------------------------------------------------------- main entry point\n\t    /** record a log/message's arguments to the cache and/or the console based on level and namespace */\n\t    MetricsLogger.prototype.emit = function emit(level, namespace, logArguments) {\n\t        //this._emitToConsole( 'debug', 'MetricsLogger', [ 'emit:', level, namespace, logArguments ]);\n\t        var self = this;\n\t        namespace = namespace || self.options.defaultNamespace;\n\t        if (!level || !logArguments) {\n\t            return self;\n\t        }\n\t        // add to cache if proper level\n\t        //TODO: respect do not track?\n\t        //if( !navigator.doNotTrack && level >= self.options.logLevel ){\n\t        level = self._parseLevel(level);\n\t        if (level >= self.options.logLevel) {\n\t            self._addToCache(level, namespace, logArguments);\n\t        }\n\t        // also emit to consoleLogger if proper level for that\n\t        if (self.consoleLogger && level >= self.options.consoleLevel) {\n\t            self._emitToConsole(level, namespace, logArguments);\n\t        }\n\t        return self;\n\t    };\n\t\n\t    //----------------------------------------------------------------------------- cache\n\t    /** add a message to the cache and if messages.length is high enough post them to the server */\n\t    MetricsLogger.prototype._addToCache = function _addToCache(level, namespace, logArguments) {\n\t        this._emitToConsole('debug', 'MetricsLogger', ['_addToCache:', arguments, this.options.addTime, this.cache.length()]);\n\t        //this._emitToConsole( 'debug', 'MetricsLogger', [ '\\t logArguments:', logArguments ]);\n\t        var self = this;\n\t        // try add to the cache and if we've got _postSize number of entries, attempt to post them to the server\n\t        try {\n\t            var newLength = self.cache.add(self._buildEntry(level, namespace, logArguments));\n\t            if (newLength >= self._postSize) {\n\t                self._postCache();\n\t            }\n\t            // discard entry if an error occurs, but warn if level set to do so\n\t        } catch (err) {\n\t            self._emitToConsole('warn', 'MetricsLogger', ['Metrics logger could not stringify logArguments:', namespace, logArguments]);\n\t            self._emitToConsole('error', 'MetricsLogger', [err]);\n\t        }\n\t        return self;\n\t    };\n\t\n\t    /** build a log cache entry object from the given level, namespace, and arguments (optionally adding timestamp */\n\t    MetricsLogger.prototype._buildEntry = function _buildEntry(level, namespace, logArguments) {\n\t        this._emitToConsole('debug', 'MetricsLogger', ['_buildEntry:', arguments]);\n\t        var entry = {\n\t            level: level,\n\t            namespace: this.options.clientPrefix + namespace,\n\t            args: logArguments\n\t        };\n\t        if (this.options.addTime) {\n\t            entry.time = new Date().toISOString();\n\t        }\n\t        return entry;\n\t    };\n\t\n\t    /** post _postSize messages from the cache to the server, removing them if successful\n\t     *      if the post fails, wait until maxCacheSize is accumulated instead and try again then\n\t     *      in addition to the messages from the cache ('metrics'), any info from getPingData (if set) will be sent\n\t     *      onServerResponse will be called (if set) with any response from the server\n\t     */\n\t    MetricsLogger.prototype._postCache = function _postCache(options) {\n\t        options = options || {};\n\t        this._emitToConsole('info', 'MetricsLogger', ['_postCache', options, this._postSize]);\n\t\n\t        // short circuit if we're already sending\n\t        if (!this.options.postUrl || this._sending) {\n\t            return jQuery.when({});\n\t        }\n\t\n\t        var self = this,\n\t            postSize = options.count || self._postSize,\n\t\n\t        // do not splice - remove after *successful* post\n\t        entries = self.cache.get(postSize),\n\t            entriesLength = entries.length,\n\t\n\t        // use the optional getPingData to add any extra info we may want to send\n\t        postData = typeof self.options.getPingData === 'function' ? self.options.getPingData() : {};\n\t        //console.debug( postSize, entriesLength );\n\t\n\t        // add the metrics and send\n\t        postData.metrics = JSON.stringify(entries);\n\t        //console.debug( postData.metrics );\n\t        self._sending = true;\n\t        return jQuery.post(self.options.postUrl, postData).always(function () {\n\t            self._sending = false;\n\t        }).fail(function (xhr, status, message) {\n\t            // if we failed the previous time, set the next post target to the max num of entries\n\t            self._postSize = self.options.maxCacheSize;\n\t            //TODO:??\n\t            // log this failure to explain any gap in metrics\n\t            self.emit('error', 'MetricsLogger', ['_postCache error:', xhr.readyState, xhr.status, xhr.responseJSON || xhr.responseText]);\n\t            //TODO: still doesn't solve the problem that when cache == max, post will be tried on every emit\n\t            //TODO: see _delayPost\n\t        }).done(function (response) {\n\t            if (typeof self.options.onServerResponse === 'function') {\n\t                self.options.onServerResponse(response);\n\t            }\n\t            // only remove if post successful\n\t            self.cache.remove(entriesLength);\n\t            //console.debug( 'removed entries:', entriesLength, 'size now:', self.cache.length() );\n\t            // if we succeeded, reset the post target to the normal num of entries\n\t            self._postSize = self.options.postSize;\n\t        });\n\t        // return the xhr promise\n\t    };\n\t\n\t    /** set _waiting to true and, after delayPostInMs, set it back to false */\n\t    MetricsLogger.prototype._delayPost = function _delayPost() {\n\t        //TODO: this won't work between pages\n\t        var self = this;\n\t        self._waiting = setTimeout(function () {\n\t            self._waiting = null;\n\t        }, self.options.delayPostInMs);\n\t    };\n\t\n\t    //----------------------------------------------------------------------------- console\n\t    /** output message to console based on level and consoleLogger type */\n\t    MetricsLogger.prototype._emitToConsole = function _emitToConsole(level, namespace, logArguments) {\n\t        //console.debug( '_emitToConsole:', level, namespace, logArguments );\n\t        var self = this,\n\t            whitelist = self.options.consoleNamespaceWhitelist;\n\t        if (!self.consoleLogger) {\n\t            return self;\n\t        }\n\t        // if a whitelist for namespaces is set, bail if this namespace is not in the list\n\t        if (whitelist && whitelist.indexOf(namespace) === -1) {\n\t            return self;\n\t        }\n\t\n\t        var args = Array.prototype.slice.call(logArguments, 0);\n\t        args.unshift(namespace);\n\t        //TODO: script location and/or source maps?\n\t        //TODO: branch on navigator.userAgent == AIIEEE - it only has log\n\t        if (level >= MetricsLogger.METRIC && typeof self.consoleLogger.info === 'function') {\n\t            return self.consoleLogger.info.apply(self.consoleLogger, args);\n\t        } else if (level >= MetricsLogger.ERROR && typeof self.consoleLogger.error === 'function') {\n\t            return self.consoleLogger.error.apply(self.consoleLogger, args);\n\t        } else if (level >= MetricsLogger.WARN && typeof self.consoleLogger.warn === 'function') {\n\t            self.consoleLogger.warn.apply(self.consoleLogger, args);\n\t        } else if (level >= MetricsLogger.INFO && typeof self.consoleLogger.info === 'function') {\n\t            self.consoleLogger.info.apply(self.consoleLogger, args);\n\t        } else if (level >= MetricsLogger.DEBUG && typeof self.consoleLogger.debug === 'function') {\n\t            self.consoleLogger.debug.apply(self.consoleLogger, args);\n\t        } else if (typeof self.consoleLogger.log === 'function') {\n\t            self.consoleLogger.log.apply(self.consoleLogger, args);\n\t        }\n\t        return self;\n\t    };\n\t\n\t    //----------------------------------------------------------------------------- shortcuts\n\t    // generic functions when logging from non-namespaced object (e.g. templates)\n\t    /** log to default namespace */\n\t    MetricsLogger.prototype.log = function log() {\n\t        this.emit(1, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /** debug to default namespace */\n\t    MetricsLogger.prototype.debug = function debug() {\n\t        this.emit(MetricsLogger.DEBUG, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /** info to default namespace */\n\t    MetricsLogger.prototype.info = function info() {\n\t        this.emit(MetricsLogger.INFO, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /** warn to default namespace */\n\t    MetricsLogger.prototype.warn = function warn() {\n\t        this.emit(MetricsLogger.WARN, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /** error to default namespace */\n\t    MetricsLogger.prototype.error = function error() {\n\t        this.emit(MetricsLogger.ERROR, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /** metric to default namespace */\n\t    MetricsLogger.prototype.metric = function metric() {\n\t        this.emit(MetricsLogger.METRIC, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n\t    };\n\t\n\t    /* ============================================================================\n\t    TODO:\n\t        need a performance pass - the JSON un/parsing is a bit much\n\t    \n\t    ============================================================================ */\n\t    /** @class LoggingCache\n\t     *  Simple implementation of cache wrapping an array.\n\t     *\n\t     *  Formats an entry before it's cached and only keeps options.maxSize number\n\t     *  of entries. Older entries are deleted first.\n\t     */\n\t    function LoggingCache(options) {\n\t        var self = this;\n\t        return self._init(options || {});\n\t    }\n\t\n\t    /** default options */\n\t    LoggingCache.defaultOptions = {\n\t        /** maximum number of entries to keep before discarding oldest */\n\t        maxSize: 5000\n\t    };\n\t\n\t    /** initialize with options */\n\t    LoggingCache.prototype._init = function _init(options) {\n\t        if (!this._hasStorage()) {\n\t            //TODO: fall back to jstorage\n\t            throw new Error('LoggingCache needs localStorage');\n\t        }\n\t        if (!options.key) {\n\t            throw new Error('LoggingCache needs key for localStorage');\n\t        }\n\t        this.key = options.key;\n\t        this._initStorage();\n\t\n\t        this.maxSize = options.maxSize || LoggingCache.defaultOptions.maxSize;\n\t        return this;\n\t    };\n\t\n\t    /** tests for localStorage fns */\n\t    LoggingCache.prototype._hasStorage = function _hasStorage() {\n\t        //TODO: modernizr\n\t        var test = 'test';\n\t        try {\n\t            localStorage.setItem(test, test);\n\t            localStorage.removeItem(test);\n\t            return true;\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    };\n\t\n\t    /** if no localStorage set for key, initialize to empty array */\n\t    LoggingCache.prototype._initStorage = function _initStorage() {\n\t        if (localStorage.getItem(this.key) === null) {\n\t            return this.empty();\n\t        }\n\t        return this;\n\t    };\n\t\n\t    /** add an entry to the cache, removing the oldest beforehand if size >= maxSize */\n\t    LoggingCache.prototype.add = function add(entry) {\n\t        var self = this,\n\t            _cache = self._fetchAndParse(),\n\t            overage = _cache.length + 1 - self.maxSize;\n\t        if (overage > 0) {\n\t            _cache.splice(0, overage);\n\t        }\n\t        _cache.push(entry);\n\t        self._unparseAndStore(_cache);\n\t        return _cache.length;\n\t    };\n\t\n\t    /** get the entries from localStorage and parse them */\n\t    LoggingCache.prototype._fetchAndParse = function _fetchAndParse() {\n\t        var self = this;\n\t        return JSON.parse(localStorage.getItem(self.key));\n\t    };\n\t\n\t    /** stringify the entries and put them in localStorage */\n\t    LoggingCache.prototype._unparseAndStore = function _unparseAndStore(entries) {\n\t        var self = this;\n\t        return localStorage.setItem(self.key, JSON.stringify(entries));\n\t    };\n\t\n\t    ///** process the entry before caching */\n\t    //LoggingCache.prototype._preprocessEntry = function _preprocessEntry( entry ){\n\t    //    return JSON.stringify( entry );\n\t    //};\n\t\n\t    /** return the length --- oh, getters where are you? */\n\t    LoggingCache.prototype.length = function length() {\n\t        return this._fetchAndParse().length;\n\t    };\n\t\n\t    /** get count number of entries starting with the oldest */\n\t    LoggingCache.prototype.get = function get(count) {\n\t        return this._fetchAndParse().slice(0, count);\n\t    };\n\t\n\t    /** remove count number of entries starting with the oldest */\n\t    LoggingCache.prototype.remove = function remove(count) {\n\t        var _cache = this._fetchAndParse(),\n\t            removed = _cache.splice(0, count);\n\t        this._unparseAndStore(_cache);\n\t        return removed;\n\t    };\n\t\n\t    /** empty/clear the entire cache */\n\t    LoggingCache.prototype.empty = function empty() {\n\t        localStorage.setItem(this.key, '[]');\n\t        return this;\n\t    };\n\t\n\t    /** stringify count number of entries (but do not remove) */\n\t    LoggingCache.prototype.stringify = function stringify(count) {\n\t        return JSON.stringify(this.get(count));\n\t    };\n\t\n\t    /** outputs entire cache to console */\n\t    LoggingCache.prototype.print = function print() {\n\t        // popup? (really, carl? a popup?) - easier to copy/paste\n\t        console.log(JSON.stringify(this._fetchAndParse(), null, '  '));\n\t    };\n\t\n\t    //=============================================================================\n\t    return {\n\t        MetricsLogger: MetricsLogger,\n\t        LoggingCache: LoggingCache\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** login.bundled.js\n **/","\nvar jQuery = require( 'jquery' ),\n    $ = jQuery,\n    GalaxyApp = require( 'galaxy' ).GalaxyApp,\n    PANEL = require( 'layout/panel' ),\n    _l = require( 'utils/localization' ),\n    PAGE = require( 'layout/page' );\n\nwindow.app = function app( options, bootstrapped ){\n    window.Galaxy = new GalaxyApp( options, bootstrapped );\n    Galaxy.debug( 'login app' );\n    var redirect = encodeURI( options.redirect );\n\n    // TODO: remove iframe for user login (at least) and render login page from here\n    // then remove this redirect\n    if( !options.show_welcome_with_login ){\n        var params = jQuery.param({ use_panels : 'True', redirect : redirect });\n        window.location.href = Galaxy.root + 'user/login?' + params;\n        return;\n    }\n\n    var loginPage = new PAGE.PageLayoutView( _.extend( options, {\n        el      : 'body',\n        center  : new PANEL.CenterPanel({ el : '#center' }),\n        right   : new PANEL.RightPanel({\n            title : _l( 'Login required' ),\n            el : '#right'\n        }),\n    }));\n\n    $(function(){\n        // TODO: incorporate *actual* referrer/redirect info as the original page does\n        var params = jQuery.param({ redirect : redirect }),\n            loginUrl = Galaxy.root + 'user/login?' + params;\n        loginPage.render();\n\n        // welcome page (probably) needs to remain sandboxed\n        loginPage.center.$( '#galaxy_main' ).prop( 'src', options.welcome_url );\n\n        loginPage.right.$( '.unified-panel-body' )\n            .css( 'overflow', 'hidden' )\n            .html( '<iframe src=\"' + loginUrl + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/apps/login.js\n **/","/**\n * Galaxy utilities comprises small functions, which at this point\n * do not require their own classes/files\n*/\n\n// dependencies\ndefine([], function() {\n\n/** Builds a basic iframe\n*/\nfunction iframe( src ) {\n    return '<iframe src=\"' + src + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>';\n}\n\n/** Traverse through json\n*/\nfunction deepeach( dict, callback ) {\n    for( var i in dict ) {\n        var d = dict[ i ];\n        if( _.isObject( d ) ) {\n            var new_dict = callback( d );\n            new_dict && ( dict[ i ] = new_dict );\n            deepeach( d, callback );\n        }\n    }\n}\n\n/** Clone */\nfunction clone( obj ) {\n    return JSON.parse( JSON.stringify( obj ) || null );\n}\n\n/**\n * Check if a string is a json string\n * @param{String}   text - Content to be validated\n */\nfunction isJSON(text) {\n    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n};\n\n/**\n * Sanitize/escape a string\n * @param{String}   content - Content to be sanitized\n */\nfunction sanitize(content) {\n    return $('<div/>').text(content).html();\n};\n\n/**\n * Checks if a value or list of values is `empty`\n * usually used for selectable options\n * @param{String}   value - Value or list to be validated\n */\nfunction isEmpty ( value ) {\n    if ( !( value instanceof Array ) ) {\n        value = [ value ];\n    }\n    if ( value.length === 0 ) {\n        return true;\n    }\n    for( var i in value ) {\n        if ( [ '__null__', '__undefined__', null, undefined ].indexOf( value[ i ] ) > -1 ) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * Convert list to pretty string\n * @param{String}   lst - List of strings to be converted in human readable list sentence\n */\nfunction textify( lst ) {\n    if ( $.isArray( lst ) ) {\n        var lst = lst.toString().replace( /,/g, ', ' );\n        var pos = lst.lastIndexOf( ', ' );\n        if ( pos != -1 ) {\n            lst = lst.substr( 0, pos ) + ' or ' + lst.substr( pos + 2 );\n        }\n        return lst;\n    }\n    return '';\n};\n\n/**\n * Request handler for GET\n * @param{String}   url     - Url request is made to\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n * @param{Boolean}  cache   - Use cached data if available\n */\nfunction get (options) {\n    top.__utils__get__ = top.__utils__get__ || {};\n    var cache_key = JSON.stringify( options );\n    if (options.cache && top.__utils__get__[cache_key]) {\n        options.success && options.success(top.__utils__get__[cache_key]);\n        window.console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n    } else {\n        request({\n            url     : options.url,\n            data    : options.data,\n            success : function(response) {\n                top.__utils__get__[cache_key] = response;\n                options.success && options.success(response);\n            },\n            error : function(response, status) {\n                options.error && options.error(response, status);\n            }\n        });\n    }\n};\n\n/**\n * Request handler\n * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n * @param{String}   url     - Url request is made to\n * @param{Object}   data    - Data send to url\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n */\nfunction request (options) {\n    // prepare ajax\n    var ajaxConfig = {\n        contentType : 'application/json',\n        type        : options.type || 'GET',\n        data        : options.data || {},\n        url         : options.url\n    }\n    // encode data into url\n    if ( ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE' ) {\n        if ( !$.isEmptyObject(ajaxConfig.data) ) {\n            ajaxConfig.url += ajaxConfig.url.indexOf('?') == -1 ? '?' : '&';\n            ajaxConfig.url += $.param(ajaxConfig.data, true);\n        }\n        ajaxConfig.data = null;\n    } else {\n        ajaxConfig.dataType = 'json';\n        ajaxConfig.url      = ajaxConfig.url;\n        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n    }\n\n    // make request\n    $.ajax(ajaxConfig).done(function(response) {\n        if (typeof response === 'string') {\n            try {\n                response = response.replace('Infinity,', '\"Infinity\",');\n                response = jQuery.parseJSON(response);\n            } catch (e) {\n                console.debug(e);\n            }\n        }\n        options.success && options.success(response);\n    }).fail(function(response) {\n        var response_text = null;\n        try {\n            response_text = jQuery.parseJSON(response.responseText);\n        } catch (e) {\n            response_text = response.responseText;\n        }\n        options.error && options.error(response_text, response.status);\n    }).always(function() {\n        options.complete && options.complete();\n    });\n};\n\n/**\n * Read a property value from CSS\n * @param{String}   classname   - CSS class\n * @param{String}   name        - CSS property\n */\nfunction cssGetAttribute (classname, name) {\n    var el = $('<div class=\"' + classname + '\"></div>');\n    el.appendTo(':eq(0)');\n    var value = el.css(name);\n    el.remove();\n    return value;\n};\n\n/**\n * Load a CSS file\n * @param{String}   url - Url of CSS file\n */\nfunction cssLoadFile (url) {\n    if (!$('link[href^=\"' + url + '\"]').length) {\n        $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n    }\n};\n\n/**\n * Safely merge to dictionaries\n * @param{Object}   options         - Target dictionary\n * @param{Object}   optionsDefault  - Source dictionary\n */\nfunction merge (options, optionsDefault) {\n    if (options) {\n        return _.defaults(options, optionsDefault);\n    } else {\n        return optionsDefault;\n    }\n};\n\n\n/**\n * Round floaing point 'number' to 'numPlaces' number of decimal places.\n * @param{Object}   number      a floaing point number\n * @param{Object}   numPlaces   number of decimal places\n */\nfunction roundToDecimalPlaces( number, numPlaces ){\n    var placesMultiplier = 1;\n    for( var i=0; i<numPlaces; i++ ){\n        placesMultiplier *= 10;\n    }\n    return Math.round( number * placesMultiplier ) / placesMultiplier;\n}\n\n// calculate on import\nvar kb = 1024,\n    mb = kb * kb,\n    gb = mb * kb,\n    tb = gb * kb;\n/**\n * Format byte size to string with units\n * @param{Integer}   size           - Size in bytes\n * @param{Boolean}   normal_font    - Switches font between normal and bold\n */\nfunction bytesToString (size, normal_font, numberPlaces) {\n    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n    // identify unit\n    var unit = \"\";\n    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n    if (size >  0){ unit = 'b'; }\n    else { return normal_font? '0 b': '<strong>-</strong>'; }\n    // return formatted string\n    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n    if (normal_font) {\n       return  rounded + ' ' + unit;\n    } else {\n        return '<strong>' + rounded + '</strong> ' + unit;\n    }\n};\n\n/**\n * Create a unique id\n */\nfunction uid(){\n    top.__utils__uid__ = top.__utils__uid__ || 0;\n    return 'uid-' + top.__utils__uid__++;\n};\n\n/**\n * Create a time stamp\n */\nfunction time() {\n    var d = new Date();\n    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n    return datetime = d.getDate() + \"/\"\n                + (d.getMonth() + 1)  + \"/\"\n                + d.getFullYear() + \", \"\n                + hours + \":\"\n                + minutes;\n};\n\nreturn {\n    cssLoadFile: cssLoadFile,\n    cssGetAttribute: cssGetAttribute,\n    get: get,\n    merge: merge,\n    iframe: iframe,\n    bytesToString: bytesToString,\n    uid: uid,\n    time: time,\n    request: request,\n    sanitize: sanitize,\n    textify: textify,\n    isEmpty: isEmpty,\n    deepeach: deepeach,\n    isJSON: isJSON,\n    clone: clone\n};\n\n});\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/utils/utils.js\n **/","define([], function() {\nvar View = Backbone.View.extend({\n\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault  : {\n        container        : 'body',\n        title            : 'ui-modal',\n        cls              : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function( options ) {\n        this.options = _.defaults( options || {}, this.optionsDefault );\n        $( this.options.container ).prepend( this.el );\n        // optional render\n        options && this.render();\n    },\n\n    /**\n     * Displays modal\n    */\n    show: function( options ) {\n        if ( options ) {\n            this.options = _.defaults( options, this.optionsDefault );\n            this.render();\n        }\n        if ( !this.visible ) {\n            this.visible = true;\n            this.$el.fadeIn( 'fast' );\n            if ( this.options.closing_events ) {\n                var self = this;\n                $( document ).on( 'keyup.ui-modal', function( e ) { e.keyCode == 27 && self.hide( true ) });\n                this.$backdrop.on( 'click', function() { self.hide( true ) } );\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n    */\n    hide: function( canceled ) {\n        this.visible = false;\n        this.$el.fadeOut( 'fast' );\n        this.options.closing_callback && this.options.closing_callback( canceled );\n        $( document ).off( 'keyup.ui-modal' );\n        this.$backdrop.off( 'click' );\n    },\n\n    /**\n     * Render modal\n    */\n    render: function() {\n        var self = this;\n        this.$el.html( this._template() );\n\n        // link elements\n        this.$header    = this.$( '.modal-header' );\n        this.$dialog    = this.$( '.modal-dialog' );\n        this.$body      = this.$( '.modal-body' );\n        this.$footer    = this.$( '.modal-footer' );\n        this.$backdrop  = this.$( '.modal-backdrop' );\n        this.$buttons   = this.$( '.buttons' );\n\n        if (this.options.body == 'progress') {\n            this.options.body = $(  '<div class=\"progress progress-striped active\">' +\n                                        '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                                    '</div>' );\n        }\n\n        // fix main content\n        this.$el.removeClass().addClass( 'modal' ).addClass( this.options.cls );\n        this.$header.find( '.title' ).html( this.options.title );\n        this.$body.html( this.options.body );\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if ( this.options.buttons ) {\n            var counter = 0;\n            $.each( this.options.buttons, function( name, callback ) {\n                var $button = $( '<button/>' ).attr( 'id', 'button-' + counter++ ).text( name ).click( callback );\n                self.$buttons.append( $button ).append( '&nbsp;' );\n                self.buttonList[ name ] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[ this.options.backdrop && 'addClass' || 'removeClass' ]( 'in' );\n        this.$header[ !this.options.title_separator && 'addClass' || 'removeClass' ]( 'no-separator' );\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr( 'style' );\n        if ( this.options.height ) {\n            this.$body.css( 'height', this.options.height );\n            this.$body.css( 'overflow', 'hidden' );\n        } else {\n            this.$body.css( 'max-height', $( window ).height() / 2 );\n        }\n        if ( this.options.width ) {\n            this.$dialog.css( 'width', this.options.width );\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n    */\n    getButton: function( name ) {\n        return this.buttonList[ name ];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n    */\n    enableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', false );\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n    */\n    disableButton: function( name ) {\n        this.getButton( name ).prop( 'disabled', true );\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n    */\n    showButton: function( name ) {\n        this.getButton( name ).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n    */\n    hideButton: function( name ) {\n        this.getButton( name ).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n    */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n    */\n    _template: function() {\n        return  '<div class=\"modal-backdrop fade\"/>' +\n                '<div class=\"modal-dialog\">' +\n                    '<div class=\"modal-content\">' +\n                        '<div class=\"modal-header\">' +\n                            '<h4 class=\"title\"/>' +\n                        '</div>' +\n                        '<div class=\"modal-body\"/>' +\n                        '<div class=\"modal-footer\">' +\n                            '<div class=\"buttons\"/>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/mvc/ui/ui-modal.js\n **/","define([], function() {\n\n/** Frame view */\nvar FrameView = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model( options );\n        this.setElement( $( '<div/>' ).addClass( 'corner frame' ) );\n        this.$el.append( $( '<div/>' ).addClass( 'f-header corner' )\n                                      .append( $( '<div/>' ).addClass( 'f-title' ) )\n                                      .append( $( '<div/>' ).addClass( 'f-icon f-close fa fa-close' )\n                                                            .tooltip( { title: 'Close', placement: 'bottom' } ) ) )\n                .append( $( '<div/>' ).addClass( 'f-content' ) )\n                .append( $( '<div/>' ).addClass( 'f-resize f-icon corner fa fa-expand' ).tooltip( { title: 'Resize' } ) )\n                .append( $( '<div/>' ).addClass( 'f-cover' ) );\n        this.$header  = this.$( '.f-header' );\n        this.$title   = this.$( '.f-title' );\n        this.$content = this.$( '.f-content' );\n        this.render();\n        this.listenTo( this.model, 'change', this.render, this );\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$title.html( options.title || '' );\n        this.$header.find( '.f-icon-left' ).remove();\n        _.each( options.menu, function( option ) {\n            var $option = $( '<div/>' ).addClass( 'f-icon-left' ).addClass( option.icon );\n            if ( _.isFunction( option.disabled ) && option.disabled() ) {\n                $option.attr( 'disabled', true );\n            } else {\n                $option.on( 'click', function() { option.onclick( self ) } )\n                       .tooltip( { title: option.tooltip, placement: 'bottom' } );\n            }\n            self.$header.append( $option );\n        } );\n        if ( options.url ) {\n            this.$content.html( $ ( '<iframe/>' ).addClass( 'f-iframe' )\n                                                 .attr( 'scrolling', 'auto' )\n                                                 .attr( 'src', options.url + ( options.url.indexOf( '?' ) === -1 ? '?' : '&' ) + 'widget=True' ) );\n        } else if ( options.content ) {\n            _.isFunction( options.content ) ? options.content( self.$content ) : self.$content.html( options.content );\n        }\n    }\n});\n\n/** Scratchbook viewer */\nvar View = Backbone.View.extend({\n    defaultOptions: {\n        frame: {             // default frame size in cells\n            cols : 6,\n            rows : 3\n        },\n        rows        : 1000,  // maximum number of rows\n        cell        : 130,   // cell size in px\n        margin      : 5,     // margin between frames\n        scroll      : 5,     // scroll speed\n        top_min     : 40,    // top margin\n        frame_max   : 9,     // maximum number of frames\n        visible     : true,  // initial visibility\n    },\n\n    cols            : 0,     // number of columns\n    top             : 0,     // scroll/element top\n    top_max         : 0,     // viewport scrolling state\n    frame_z         : 0,     // frame z-index\n    frame_counter   : 0,     // frame counter\n    frame_uid       : 0,     // unique frame id counter\n    frame_list      : {},    // list of all frames\n    frame_shadow    : null,  // frame shown as placeholder when moving active frames\n    visible         : false, // flag indicating if scratchbook viewer is visible or not\n    event           : {},    // dictionary keeping track of current event\n\n    initialize : function( options ) {\n        var self = this;\n        this.options = _.defaults( options || {}, this.defaultOptions );\n        this.visible = this.options.visible;\n        this.top = this.top_max = this.options.top_min;\n        this.setElement( $( '<div/>' ).addClass( 'galaxy-frame' )\n                            .append( $( '<div/>' ).addClass( 'frame-background' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-up fa fa-chevron-up fa-2x' ) )\n                            .append( $( '<div/>' ).addClass( 'frame-menu frame-scroll-down fa fa-chevron-down fa-2x' ) ) );\n\n        // initialize shadow to guiding drag/resize events\n        this.frame_shadow = new Backbone.View({ el: $( '<div/>' ).addClass( 'corner frame-shadow' ) } );\n        this.$el.append( this.frame_shadow.$el );\n        this._frameInit( this.frame_shadow, '#frame-shadow' );\n        this._frameResize( this.frame_shadow, { width: 0, height: 0 } );\n        this.frame_list[ '#frame-shadow' ] = this.frame_shadow;\n\n        // initialize panel\n        this.visible ? this.show() : this.hide();\n        this._panelRefresh();\n        $( window ).resize( function() { self.visible && self._panelRefresh() } );\n    },\n\n    /** Render */\n    render: function() {\n        this.$( '.frame-scroll-up' ) [ this.top != this.options.top_min && 'show' || 'hide' ]();\n        this.$( '.frame-scroll-down')[ this.top != this.top_max && 'show' || 'hide' ]();\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n    add: function( options ) {\n        if ( this.frame_counter >= this.options.frame_max ) {\n            Galaxy.modal.show( {\n                title   : 'Warning',\n                body    : 'You have reached the maximum number of allowed frames (' + this.options.frame_max + ').',\n                buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n            });\n\n        } else {\n            var frame_id = '#frame-' + ( this.frame_uid++ );\n            if ( $ ( frame_id ).length !== 0 ) {\n                Galaxy.modal.show( {\n                    title   : 'Error',\n                    body    : 'This frame already exists. This page might contain multiple frame managers.',\n                    buttons : { 'Close' : function() { Galaxy.modal.hide() } }\n                });\n            } else {\n                // initialize new frame elements\n                this.top = this.options.top_min;\n                var frame = new FrameView( options );\n                this.$el.append( frame.$el );\n\n                // set dimensions\n                options.width   = this._toPixelCoord( 'width', this.options.frame.cols );\n                options.height  = this._toPixelCoord( 'height', this.options.frame.rows );\n\n                // set default z-index and add to ui and frame list\n                this.frame_z = parseInt( frame.$el.css( 'z-index' ) );\n                this.frame_list[ frame_id ] = frame;\n                this.frame_counter++;\n                this._frameInit( frame, frame_id );\n                this._frameResize( frame, { width: options.width, height: options.height } );\n                this._frameInsert( frame, { top: 0, left: 0 }, true );\n                !this.visible && this.show();\n                this.trigger( 'add' );\n            }\n        }\n    },\n\n    /** Remove a frame */\n    del: function( frame ) {\n        var self = this;\n        var $frame = frame.$el;\n        $frame.fadeOut( 'fast', function() {\n            $frame.remove();\n            delete self.frame_list[ frame.id ];\n            self.frame_counter--;\n            self._panelRefresh( true );\n            self._panelAnimationComplete();\n            self.trigger( 'remove' );\n        });\n    },\n\n    /** Show panel */\n    show: function() {\n        this.visible = true;\n        this.$el.fadeIn( 'fast' );\n        this.trigger( 'show' );\n    },\n\n    /** Hide panel */\n    hide: function() {\n        if ( !this.event.type ) {\n            this.visible = false;\n            this.$el.fadeOut('fast', function() { $( this ).hide() });\n            this.trigger( 'hide' );\n        }\n    },\n\n    /** Returns the number of frames */\n    length: function() {\n        return this.frame_counter;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose'\n    },\n\n    /** Start drag/resize event */\n    _eventFrameMouseDown: function ( e ) {\n        $( '.tooltip' ).hide();\n        if ( !this.event.type ) {\n            if ( $( e.target ).hasClass( 'f-header' ) || $( e.target ).hasClass( 'f-title' ) ) {\n                this.event.type = 'drag';\n            }\n            if ( $( e.target ).hasClass( 'f-resize' ) ) {\n                this.event.type = 'resize';\n            }\n            if ( this.event.type ) {\n                e.preventDefault();\n                this.event.target = this._frameIdentify( e.target );\n                this.event.xy = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                this._frameDragStart( this.event.target );\n            }\n        }\n    },\n\n    /** Processes drag/resize events */\n    _eventFrameMouseMove: function ( e ) {\n        if ( this.event.type ) {\n            // get mouse motion and delta\n            var event_xy_new = {\n                x : e.originalEvent.pageX,\n                y : e.originalEvent.pageY\n            };\n            var event_xy_delta = {\n                x : event_xy_new.x - this.event.xy.x,\n                y : event_xy_new.y - this.event.xy.y\n            };\n            this.event.xy = event_xy_new;\n\n            // get current screen position and size of frame\n            var p = this._frameScreen ( this.event.target );\n\n            // drag/resize event\n            if ( this.event.type == 'resize' ) {\n                p.width  += event_xy_delta.x;\n                p.height += event_xy_delta.y;\n                var min_dim = this.options.cell - this.options.margin - 1;\n                p.width = Math.max( p.width, min_dim );\n                p.height = Math.max( p.height, min_dim );\n                this._frameResize( this.event.target, p );\n                p.width = this._toGridCoord( 'width', p.width ) + 1;\n                p.height = this._toGridCoord( 'height', p.height ) + 1;\n                p.width = this._toPixelCoord( 'width', p.width );\n                p.height = this._toPixelCoord( 'height', p.height );\n                this._frameResize( this.frame_shadow, p );\n                this._frameInsert( this.frame_shadow, {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                });\n            } else if ( this.event.type == 'drag' ) {\n                p.left  += event_xy_delta.x;\n                p.top   += event_xy_delta.y;\n                this._frameOffset( this.event.target, p );\n                var l = {\n                    top     : this._toGridCoord( 'top', p.top ),\n                    left    : this._toGridCoord( 'left', p.left )\n                };\n                l.left !== 0 && l.left++;\n                this._frameInsert( this.frame_shadow, l );\n            }\n        }\n    },\n\n    /** Stop drag/resize events */\n    _eventFrameMouseUp: function ( e ) {\n        if ( this.event.type ) {\n            this._frameDragStop( this.event.target );\n            this.event.type = null;\n        }\n    },\n\n    /** Destroy a frame */\n    _eventFrameClose: function ( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this.del( this._frameIdentify( e.target ) );\n        }\n    },\n\n    /** Hide all frames */\n    _eventHide: function ( e ) {\n        !this.event.type && this.hide();\n    },\n\n    /** Fired when scrolling occurs on panel */\n    _eventPanelScroll: function( e ) {\n        if ( !this.event.type && this.visible ) {\n            // Stop propagation if scrolling is happening inside a frame.\n            // TODO: could propagate scrolling if at top/bottom of frame.\n            var frames = $( e.srcElement ).parents( '.frame' );\n            if ( frames.length !== 0 ) {\n                e.stopPropagation();\n            } else {\n                e.preventDefault();\n                this._panelScroll( e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3 );\n            }\n        }\n    },\n\n    /** Handle scroll up event */\n    _eventPanelScroll_up: function( e ) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( -this.options.scroll );\n        }\n    },\n\n    /** Handle scroll down */\n    _eventPanelScroll_down: function(e) {\n        if ( !this.event.type ) {\n            e.preventDefault();\n            this._panelScroll( this.options.scroll );\n        }\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    /** Identify the target frame */\n    _frameIdentify: function( target ) {\n        return this.frame_list[ '#' + $( target ).closest( '.frame' ).attr( 'id' ) ];\n    },\n\n    /** Provides drag support */\n    _frameDragStart : function ( frame ) {\n        this._frameFocus( frame, true );\n        var p = this._frameScreen( frame );\n        this._frameResize( this.frame_shadow, p );\n        this._frameGrid( this.frame_shadow, frame.grid_location );\n        frame.grid_location = null;\n        this.frame_shadow.$el.show();\n        $( '.f-cover' ).show();\n    },\n\n    /** Removes drag support */\n    _frameDragStop : function ( frame ) {\n        this._frameFocus( frame, false );\n        var p = this._frameScreen( this.frame_shadow );\n        this._frameResize( frame, p );\n        this._frameGrid( frame, this.frame_shadow.grid_location, true );\n        this.frame_shadow.grid_location = null;\n        this.frame_shadow.$el.hide();\n        $( '.f-cover' ).hide();\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    /** Converts a pixel to a grid dimension */\n    _toGridCoord: function ( type, px ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        type == 'top' && ( px -= this.top );\n        return parseInt( ( px + sign * this.options.margin ) / this.options.cell, 10 );\n    },\n    \n    /** Converts a grid to a pixels dimension */\n    _toPixelCoord: function ( type, g ) {\n        var sign = ( type == 'width' || type == 'height' ) ? 1 : -1;\n        var px = ( g * this.options.cell ) - sign * this.options.margin;\n        type == 'top' && ( px += this.top );\n        return px;\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toGrid: function ( px ) {\n        return {\n            top     : this._toGridCoord( 'top', px.top ),\n            left    : this._toGridCoord( 'left', px.left ),\n            width   : this._toGridCoord( 'width', px.width ),\n            height  : this._toGridCoord( 'height', px.height )\n        };\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toPixel: function( g ) {\n        return {\n            top     : this._toPixelCoord( 'top', g.top ),\n            left    : this._toPixelCoord( 'left', g.left ),\n            width   : this._toPixelCoord( 'width', g.width ),\n            height  : this._toPixelCoord( 'height', g.height )\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    /** Check collisions for a grid coordinate set */\n    _isCollision: function( g ) {\n        function is_collision_pair ( a, b ) {\n            return !( a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                      a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top );\n        }\n        for ( var i in this.frame_list ) {\n            var frame = this.frame_list[ i ];\n            if ( frame.grid_location !== null && is_collision_pair ( g, frame.grid_location ) ) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Return location/grid rank */\n    _locationRank: function( loc ) {\n        return ( loc.top * this.cols ) + loc.left;\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    /** Refresh panel */\n    _panelRefresh: function( animate ) {\n        this.cols = parseInt( $( window ).width() / this.options.cell, 10 ) + 1;\n        this._frameInsert( null, null, animate );\n    },\n\n    /** Complete panel animation / frames not moving */\n    _panelAnimationComplete: function() {\n        var self = this;\n        $( '.frame' ).promise().done( function() { self._panelScroll( 0, true ) } );\n    },\n\n    /** Scroll panel */\n    _panelScroll: function( delta, animate ) {\n        var top_new = this.top - this.options.scroll * delta;\n        top_new = Math.max( top_new, this.top_max );\n        top_new = Math.min( top_new, this.options.top_min );\n        if ( this.top != top_new ) {\n            for ( var i in this.frame_list ) {\n                var frame = this.frame_list[ i ];\n                if ( frame.grid_location !== null ) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - ( this.top - top_new ),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset( frame, screen_location, animate );\n                }\n            }\n            this.top = top_new;\n        }\n        this.render();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    /** Initialize a new frame */\n    _frameInit: function( frame, id ) {\n        frame.id              = id\n        frame.screen_location = {};\n        frame.grid_location   = {};\n        frame.grid_rank       = null;\n        frame.$el.attr( 'id', id.substring( 1 ) );\n    },\n\n    /** Insert frame at given location */\n    _frameInsert: function( frame, new_loc, animate ) {\n        var self = this;\n        var place_list = [];\n        if ( frame ) {\n            frame.grid_location = null;\n            place_list.push( [ frame, this._locationRank( new_loc ) ] );\n        }\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                f.grid_location = null;\n                place_list.push( [ f, f.grid_rank ] );\n            }\n        });\n        place_list.sort( function( a, b ) {\n            return a[ 1 ] < b[ 1 ] ? -1 : ( a[ 1 ] > b[ 1 ] ? 1 : 0 );\n        });\n        _.each( place_list, function( place ) {\n            self._framePlace( place[ 0 ], animate );\n        });\n        this.top_max = 0;\n        _.each( this.frame_list, function( f ) {\n            if ( f.grid_location !== null ) {\n                self.top_max = Math.max( self.top_max, f.grid_location.top + f.grid_location.height );\n            }\n        });\n        this.top_max = $( window ).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n        this.top_max = Math.min( this.top_max, this.options.top_min );\n        this.render();\n    },\n\n    /** Naive frame placement */\n    _framePlace: function( frame, animate ) {\n        frame.grid_location = null;\n        var g = this._toGrid( this._frameScreen( frame ) );\n        var done = false;\n        for ( var i = 0; i < this.options.rows; i++ ) {\n            for ( var j = 0; j < Math.max(1, this.cols - g.width ); j++ ) {\n                g.top   = i;\n                g.left  = j;\n                if ( !this._isCollision( g ) ) {\n                    done = true;\n                    break;\n                }\n            }\n            if ( done ) {\n                break;\n            }\n        }\n        if ( done ) {\n            this._frameGrid( frame, g, animate );\n        } else {\n            console.log( 'Grid dimensions exceeded.' );\n        }\n    },\n\n    /** Handle frame focussing */\n    _frameFocus: function( frame, has_focus ) {\n        frame.$el.css( 'z-index', this.frame_z + ( has_focus ? 1 : 0 ) );\n    },\n\n    /** New left/top position frame */\n    _frameOffset: function( frame, p, animate ) {\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n        if ( animate ) {\n            this._frameFocus( frame, true );\n            var self = this;\n            frame.$el.animate({ top: p.top, left: p.left }, 'fast', function() {\n                self._frameFocus( frame, false );\n            });\n        } else {\n            frame.$el.css( { top: p.top, left: p.left } );\n        }\n    },\n\n    /** Resize frame */\n    _frameResize: function( frame, p ) {\n        frame.$el.css( { width: p.width, height: p.height } );\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    /** Push frame to new grid location */\n    _frameGrid: function ( frame, l, animate ) {\n        frame.grid_location = l;\n        this._frameOffset( frame, this._toPixel( l ), animate );\n        frame.grid_rank = this._locationRank( l );\n    },\n\n    /** Get frame dimensions */\n    _frameScreen: function( frame ) {\n        var p = frame.screen_location;\n        return { top: p.top, left: p.left, width: p.width, height: p.height };\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/mvc/ui/ui-frames.js\n **/","define([\n    'libs/underscore',\n    'libs/backbone',\n    'mvc/base-mvc',\n    'utils/localization'\n], function( _, Backbone, baseMVC, _l ){\n'use strict';\n\nvar logNamespace = 'user';\n//==============================================================================\n/** @class Model for a Galaxy user (including anonymous users).\n *  @name User\n */\nvar User = Backbone.Model.extend( baseMVC.LoggableMixin ).extend(\n/** @lends User.prototype */{\n    _logNamespace : logNamespace,\n\n    /** API location for this resource */\n    urlRoot : function(){ return Galaxy.root + 'api/users'; },\n\n    /** Model defaults\n     *  Note: don't check for anon-users with the username as the default is '(anonymous user)'\n     *      a safer method is if( !user.get( 'email' ) ) -> anon user\n     */\n    defaults : /** @lends User.prototype */{\n        id                      : null,\n        username                : '(' + _l( \"anonymous user\" ) + ')',\n        email                   : \"\",\n        total_disk_usage        : 0,\n        nice_total_disk_usage   : \"\",\n        quota_percent           : null,\n        is_admin                : false\n    },\n\n    /** Set up and bind events\n     *  @param {Object} data Initial model data.\n     */\n    initialize : function( data ){\n        this.log( 'User.initialize:', data );\n\n        this.on( 'loaded', function( model, resp ){ this.log( this + ' has loaded:', model, resp ); });\n        this.on( 'change', function( model, data ){ this.log( this + ' has changed:', model, data.changes ); });\n    },\n\n    isAnonymous : function(){\n        return ( !this.get( 'email' ) );\n    },\n\n    isAdmin : function(){\n        return ( this.get( 'is_admin' ) );\n    },\n\n    /** Load a user with the API using an id.\n     *      If getting an anonymous user or no access to a user id, pass the User.CURRENT_ID_STR\n     *      (e.g. 'current') and the API will return the current transaction's user data.\n     *  @param {String} idOrCurrent encoded user id or the User.CURRENT_ID_STR\n     *  @param {Object} options hash to pass to Backbone.Model.fetch. Can contain success, error fns.\n     *  @fires loaded when the model has been loaded from the API, passing the newModel and AJAX response.\n     */\n    loadFromApi : function( idOrCurrent, options ){\n        idOrCurrent = idOrCurrent || User.CURRENT_ID_STR;\n\n        options = options || {};\n        var model = this,\n            userFn = options.success;\n\n        /** @ignore */\n        options.success = function( newModel, response ){\n            model.trigger( 'loaded', newModel, response );\n            if( userFn ){ userFn( newModel, response ); }\n        };\n\n        // requests for the current user must have a sep. constructed url (fetch don't work, ma)\n        if( idOrCurrent === User.CURRENT_ID_STR ){\n            options.url = this.urlRoot + '/' + User.CURRENT_ID_STR;\n        }\n        return Backbone.Model.prototype.fetch.call( this, options );\n    },\n\n    /** Clears all data from the sessionStorage.\n     */\n    clearSessionStorage : function(){\n        for( var key in sessionStorage ){\n            //TODO: store these under the user key so we don't have to do this\n            // currently only history\n            if( key.indexOf( 'history:' ) === 0 ){\n                sessionStorage.removeItem( key );\n\n            } else if( key === 'history-panel' ){\n                sessionStorage.removeItem( key );\n            }\n        }\n    },\n\n    /** string representation */\n    toString : function(){\n        var userInfo = [ this.get( 'username' ) ];\n        if( this.get( 'id' ) ){\n            userInfo.unshift( this.get( 'id' ) );\n            userInfo.push( this.get( 'email' ) );\n        }\n        return 'User(' + userInfo.join( ':' ) + ')';\n    }\n});\n\n// string to send to tell server to return this transaction's user (see api/users.py)\nUser.CURRENT_ID_STR = 'current';\n\n// class method to load the current user via the api and return that model\nUser.getCurrentUserFromApi = function( options ){\n    var currentUser = new User();\n    currentUser.loadFromApi( User.CURRENT_ID_STR, options );\n    return currentUser;\n};\n\n// (stub) collection for users (shouldn't be common unless admin UI)\nvar UserCollection = Backbone.Collection.extend( baseMVC.LoggableMixin ).extend({\n    model   : User,\n    urlRoot : function(){ return Galaxy.root + 'api/users'; },\n    //logger  : console,\n});\n\n\n//==============================================================================\nreturn {\n    User : User\n};});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/mvc/user/user-model.js\n **/","define([\n    'libs/underscore',\n    'libs/backbone',\n    'mvc/base-mvc',\n    'mvc/user/user-model',\n    'utils/metrics-logger',\n    'utils/add-logging',\n    'utils/localization'\n], function( _, Backbone, BASE_MVC, userModel, metricsLogger, addLogging, localize ){\n\n// TODO: move into a singleton pattern and have dependents import Galaxy\n// ============================================================================\n/** Base galaxy client-side application.\n *      Iniitializes:\n *          logger      : the logger/metrics-logger\n *          localize    : the string localizer\n *          config      : the current configuration (any k/v in\n *              galaxy.ini available from the configuration API)\n *          user        : the current user (as a mvc/user/user-model)\n */\nfunction GalaxyApp( options, bootstrapped ){\n    var self = this;\n    return self._init( options || {}, bootstrapped || {} );\n}\n\n// add logging shortcuts for this object\naddLogging( GalaxyApp, 'GalaxyApp' );\n\n// a debug flag can be set via local storage and made available during script/page loading\nvar DEBUGGING_KEY = 'galaxy:debug',\n    NAMESPACE_KEY = DEBUGGING_KEY + ':namespaces',\n    localDebugging = false;\ntry {\n    localDebugging = localStorage.getItem( DEBUGGING_KEY ) == 'true';\n} catch( storageErr ){\n    console.log( localize( 'localStorage not available for debug flag retrieval' ) );\n}\n\n/** initalize options and sub-components */\nGalaxyApp.prototype._init = function __init( options, bootstrapped ){\n    var self = this;\n    _.extend( self, Backbone.Events );\n    if( localDebugging ){\n        self.logger = console;\n        console.debug( 'debugging galaxy:', 'options:', options, 'bootstrapped:', bootstrapped );\n    }\n\n    self._processOptions( options );\n    // special case for root\n    self.root = options.root || '/';\n\n    self._initConfig( options.config || {} );\n    self._patchGalaxy( window.Galaxy );\n\n    self._initLogger( self.options.loggerOptions || {} );\n    // at this point, either logging or not and namespaces are enabled - chat it up\n    self.debug( 'GalaxyApp.options: ', self.options );\n    self.debug( 'GalaxyApp.config: ', self.config );\n    self.debug( 'GalaxyApp.logger: ', self.logger );\n\n    self._initLocale();\n    self.debug( 'GalaxyApp.localize: ', self.localize );\n\n    self.config = options.config || {};\n    self.debug( 'GalaxyApp.config: ', self.config );\n\n    self._initUser( options.user || {} );\n    self.debug( 'GalaxyApp.user: ', self.user );\n\n    self._setUpListeners();\n    self.trigger( 'ready', self );\n\n    return self;\n};\n\n/** default options */\nGalaxyApp.prototype.defaultOptions = {\n    /** monkey patch attributes from existing window.Galaxy object? */\n    patchExisting   : true,\n    /** root url of this app */\n    root            : '/'\n};\n\n/** filter to options present in defaultOptions (and default to them) */\nGalaxyApp.prototype._processOptions = function _processOptions( options ){\n    var self = this,\n        defaults = self.defaultOptions;\n\n    self.options = {};\n    for( var k in defaults ){\n        if( defaults.hasOwnProperty( k ) ){\n            self.options[ k ] = ( options.hasOwnProperty( k ) )?( options[ k ] ):( defaults[ k ] );\n        }\n    }\n    return self;\n};\n\n/** parse the config and any extra info derived from it */\nGalaxyApp.prototype._initConfig = function _initConfig( config ){\n    var self = this;\n    self.config = config;\n\n    // give precendence to localdebugging for this setting\n    self.config.debug = localDebugging || self.config.debug;\n\n    return self;\n};\n\n/** add an option from options if the key matches an option in defaultOptions */\nGalaxyApp.prototype._patchGalaxy = function _patchGalaxy( patchWith ){\n    var self = this;\n    // in case req or plain script tag order has created a prev. version of the Galaxy obj...\n    if( self.options.patchExisting && patchWith ){\n        // self.debug( 'found existing Galaxy object:', patchWith );\n        // ...(for now) monkey patch any added attributes that the previous Galaxy may have had\n        //TODO: move those attributes to more formal assignment in GalaxyApp\n        for( var k in patchWith ){\n            if( patchWith.hasOwnProperty( k ) ){\n                // self.debug( '\\t patching in ' + k + ' to Galaxy:', self[ k ] );\n                self[ k ] = patchWith[ k ];\n            }\n        }\n    }\n};\n\n/** set up the metrics logger (utils/metrics-logger) and pass loggerOptions */\nGalaxyApp.prototype._initLogger = function _initLogger( loggerOptions ){\n    var self = this;\n\n    // default to console logging at the debug level if the debug flag is set\n    if( self.config.debug ){\n        loggerOptions.consoleLogger = loggerOptions.consoleLogger || console;\n        loggerOptions.consoleLevel = loggerOptions.consoleLevel || metricsLogger.MetricsLogger.ALL;\n        // load any logging namespaces from localStorage if we can\n        try {\n            loggerOptions.consoleNamespaceWhitelist = localStorage.getItem( NAMESPACE_KEY ).split( ',' );\n        } catch( storageErr ){}\n    }\n\n    self.logger = new metricsLogger.MetricsLogger( loggerOptions );\n    self.emit = {};\n    [ 'log', 'debug', 'info', 'warn', 'error', 'metric' ].map(function( i ) {\n        self.emit[ i ] = function( data ){\n            self.logger.emit( i, arguments[ 0 ], Array.prototype.slice.call( arguments, 1 ) );\n        };\n    });\n\n    if( self.config.debug ){\n        // add this logger to mvc's loggable mixin so that all models can use the logger\n        BASE_MVC.LoggableMixin.logger = self.logger;\n    }\n    return self;\n};\n\n/** add the localize fn to this object and the window namespace (as '_l') */\nGalaxyApp.prototype._initLocale = function _initLocale( options ){\n    var self = this;\n    self.debug( '_initLocale:', options );\n    self.localize = localize;\n    // add to window as global shortened alias\n    // TODO: temporary - remove when can require for plugins\n    window._l = self.localize;\n    return self;\n};\n\n/** set up the current user as a Backbone model (mvc/user/user-model) */\nGalaxyApp.prototype._initUser = function _initUser( userJSON ){\n    var self = this;\n    self.debug( '_initUser:', userJSON );\n    self.user = new userModel.User( userJSON );\n    self.user.logger = self.logger;\n    return self;\n};\n\n/** Set up DOM/jQuery/Backbone event listeners enabled for all pages */\nGalaxyApp.prototype._setUpListeners = function _setUpListeners(){\n    var self = this;\n\n    // hook to jq beforeSend to record the most recent ajax call and cache some data about it\n    /** cached info about the last ajax call made through jQuery */\n    self.lastAjax = {};\n    $( document ).bind( 'ajaxSend', function( ev, xhr, options ){\n        var data = options.data;\n        try {\n            data = JSON.parse( data );\n        } catch( err ){}\n\n        self.lastAjax = {\n            url     : location.href.slice( 0, -1 ) + options.url,\n            data    : data\n        };\n        //TODO:?? we might somehow manage to *retry* ajax using either this hook or Backbone.sync\n    });\n    return self;\n};\n\n/** Turn debugging/console-output on/off by passing boolean. Pass nothing to get current setting. */\nGalaxyApp.prototype.debugging = function _debugging( setting ){\n    var self = this;\n    try {\n        if( setting === undefined ){\n            return localStorage.getItem( DEBUGGING_KEY ) === 'true';\n        }\n        if( setting ){\n            localStorage.setItem( DEBUGGING_KEY, true );\n            return true;\n        }\n\n        localStorage.removeItem( DEBUGGING_KEY );\n        // also remove all namespaces\n        self.debuggingNamespaces( null );\n\n    } catch( storageErr ){\n        console.log( localize( 'localStorage not available for debug flag retrieval' ) );\n    }\n    return false;\n};\n\n/** Add, remove, or clear namespaces from the debugging filters\n *  Pass no arguments to retrieve the existing namespaces as an array.\n *  Pass in null to clear all namespaces (all logging messages will show now).\n *  Pass in an array of strings or single string of the namespaces to filter to.\n *  Returns the new/current namespaces as an array;\n */\nGalaxyApp.prototype.debuggingNamespaces = function _debuggingNamespaces( namespaces ){\n    var self = this;\n    try {\n        if( namespaces === undefined ){\n            var csv = localStorage.getItem( NAMESPACE_KEY );\n            return typeof( csv ) === 'string'? csv.split( ',' ) : [];\n        } else if( namespaces === null ) {\n            localStorage.removeItem( NAMESPACE_KEY );\n        } else {\n            localStorage.setItem( NAMESPACE_KEY, namespaces );\n        }\n        var newSettings = self.debuggingNamespaces();\n        if( self.logger ){\n            self.logger.options.consoleNamespaceWhitelist = newSettings;\n        }\n        return newSettings;\n    } catch( storageErr ){\n        console.log( localize( 'localStorage not available for debug namespace retrieval' ) );\n    }\n};\n\n/** string rep */\nGalaxyApp.prototype.toString = function toString(){\n    var userEmail = this.user? ( this.user.get( 'email' ) || '(anonymous)' ) : 'uninitialized';\n    return 'GalaxyApp(' + userEmail + ')';\n};\n\n// ============================================================================\n    return {\n        GalaxyApp : GalaxyApp\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/galaxy.js\n **/","/** Real-time Communication feature **/\ndefine(['mvc/ui/ui-modal'], function( Modal ) {\n\nvar GenericNavView = Backbone.View.extend({\n\n    initialize: function ( ) {\n        this.modal = null;\n    },\n\n    /** makes bootstrap modal and iframe inside it */\n    makeModalIframe: function( e ) {\n\t// make modal\n\tvar host =  window.Galaxy.config.communication_server_host,\n\t    port = window.Galaxy.config.communication_server_port,\n\t    username = escape( window.Galaxy.user.attributes.username ),\n\t    persistent_communication_rooms = escape( window.Galaxy.config.persistent_communication_rooms ),\n\t    query_string = \"?username=\" + username + \"&persistent_communication_rooms=\" + persistent_communication_rooms,\n\t    src = host + \":\" + port + query_string,\n\t    $el_chat_modal_header = null,\n\t    $el_chat_modal_body = null,\n            iframe_template = '<iframe class=\"f-iframe fade in communication-iframe\" src=\"' + src + '\"> </iframe>',\n            header_template = '<i class=\"fa fa-comment\" aria-hidden=\"true\" title=\"Communicate with other users\"></i>' +\n                              '<i class=\"fa fa-expand expand-compress-modal\" aria-hidden=\"true\" title=\"Maximize\"></i>' + \n\t                      '<i class=\"fa fa-times close-modal\" aria-hidden=\"true\" title=\"Close\"></i>',\n            frame_height = 350,\n            frame_width = 600,\n            class_names = 'ui-modal chat-modal';\n        \n\t// deletes the chat modal if already present and create one\n        if( $( '.chat-modal' ).length > 0 ) {\n            $( '.chat-modal' ).remove();\n\t}\n        // creates a modal\n\tGenericNavView.modal = new Modal.View({\n\t    body            : iframe_template,\n\t    height          : frame_height,\n\t    width           : frame_width,\n\t    closing_events  : true,\n\t    title_separator : false,\n            cls             : class_names\n\t});\n\n\t// shows modal\n\tGenericNavView.modal.show();\n        $el_chat_modal_header = $( '.chat-modal .modal-header' );\n        $el_chat_modal_body = $( '.chat-modal .modal-body' );\n\t// adjusts the css of bootstrap modal for chat\n        $el_chat_modal_header.addClass('modal-header-body');\n        $el_chat_modal_body.addClass('modal-header-body');\n\t$el_chat_modal_header.find( 'h4' ).remove();\n        $el_chat_modal_header.removeAttr( 'min-height padding border' );\n\t$el_chat_modal_header.append( header_template );\n\t// click event of the close button for chat\n\t$( '.close-modal' ).click(function( e ) {\n\t    $( '.chat-modal' ).css( 'display', 'none' );\n\t});\n        // click event of expand and compress icon\n        $( '.expand-compress-modal' ).click(function( e ) {\n            if( $( '.expand-compress-modal' ).hasClass( 'fa-expand' ) ) {\n                $( '.chat-modal .modal-dialog' ).width( '1000px' );\n                $( '.chat-modal .modal-body' ).height( '575px' );\n                $( '.expand-compress-modal' ).removeClass( 'fa-expand' ).addClass( 'fa-compress' );\n                $( '.expand-compress-modal' ).attr('title', 'Minimize');\n                $( '.expand-compress-modal' ).css('margin-left', '96.2%');\n            }\n            else {\n                $( '.chat-modal .modal-dialog' ).width( frame_width + 'px' );\n                $( '.chat-modal .modal-body' ).height( frame_height + 'px' );\n                $( '.expand-compress-modal' ).removeClass( 'fa-compress' ).addClass( 'fa-expand' );\n                $( '.expand-compress-modal' ).attr('title', 'Maximize');\n                $( '.expand-compress-modal' ).css('margin-left', '93.2%');\n            }\n\t    \n\t});\n        return this;\n    },\n\n    /**renders the chat icon as a nav item*/\n    render: function() {\n        var self = this,\n            navItem = {};\n        navItem = {\n            id              : 'show-chat-online',\n            icon            : 'fa-comment-o',\n            tooltip         : 'Chat online',\n            visible         : false,\n            onclick         : self.makeModalIframe\n        }\n        return navItem;\n    }\n});\n\nreturn {\n    GenericNavView  : GenericNavView\n};\n\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/layout/generic-nav-view.js\n **/","define([\n    'utils/utils',\n    'layout/menu',\n    'layout/scratchbook',\n    'mvc/user/user-quotameter',\n], function( Utils, Menu, Scratchbook, QuotaMeter ) {\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        this.options = options;\n        this.setElement( this._template() );\n        this.$navbarBrandLink   = this.$( '.navbar-brand-link' );\n        this.$navbarBrandImage  = this.$( '.navbar-brand-image' );\n        this.$navbarBrandTitle  = this.$( '.navbar-brand-title' );\n        this.$navbarTabs        = this.$( '.navbar-tabs' );\n        this.$quoteMeter        = this.$( '.quota-meter-container' );\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection.on( 'add', function( model ) {\n            self.$navbarTabs.append( new Menu.Tab( { model : model } ).render().$el );\n        }).on( 'reset', function() {\n            self.$navbarTabs.empty();\n        }).on( 'dispatch', function( callback ) {\n            self.collection.each( function ( m ) { callback( m ) });\n        }).fetch( this.options );\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook( { collection: this.collection } );\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model   : Galaxy.user,\n            el      : this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $( window ).on( 'click', function( e ) {\n            var $download_link = $( e.target ).closest( 'a[download]' );\n            if ( $download_link.length == 1 ) {\n                if( $( 'iframe[id=download]' ).length === 0 ) {\n                    $( 'body' ).append( $( '<iframe/>' ).attr( 'id', 'download' ).hide() );\n                }\n                $( 'iframe[id=download]' ).attr( 'src', $download_link.attr( 'href' ) );\n                e.preventDefault();\n            }\n        }).on( 'beforeunload', function() {\n            var text = '';\n            self.collection.each( function( model ) {\n                var q = model.get( 'onbeforeunload' ) && model.get( 'onbeforeunload' )();\n                q && ( text += q + ' ' );\n            });\n            if ( text !== '' ) {\n                return text;\n            }\n        });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html( 'Galaxy ' + ( this.options.brand && '/ ' + this.options.brand || '' ) );\n        this.$navbarBrandLink.attr( 'href', this.options.logo_url );\n        this.$navbarBrandImage.attr( 'src', this.options.logo_src );\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return  '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div class=\"navbar-header\">' +\n                        '<div class=\"navbar-tabs\"/>' +\n                    '</div>' +\n                    '<div class=\"navbar-brand\">' +\n                        '<a class=\"navbar-brand-link\">' +\n                            '<img class=\"navbar-brand-image\"/>' +\n                            '<span class=\"navbar-brand-title\"/>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"/>' +\n                    '<div class=\"navbar-icons\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n};\n\n});\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/layout/masthead.js\n **/","/** Masthead Collection **/\ndefine(['mvc/tours', 'layout/generic-nav-view'], function( Tours, GenericNav ) {\nvar Collection = Backbone.Collection.extend({\n    model: Backbone.Model.extend({\n        defaults: {\n            visible         : true,\n            target          : '_parent'\n        }\n    }),\n    fetch: function( options ){\n        options = options || {};\n        this.reset();\n\n        //\n        // Chat server tab\n        //\n        var extendedNavItem = new GenericNav.GenericNavView();\n        this.add(extendedNavItem.render()); \n\n        //\n        // Analyze data tab.\n        //\n        this.add({\n            id              : 'analysis',\n            title           : 'Analyze Data',\n            url             : '',\n            tooltip         : 'Analysis home view'\n        });\n\n        //\n        // Workflow tab.\n        //\n        this.add({\n            id              : 'workflow',\n            title           : 'Workflow',\n            url             : 'workflow',\n            tooltip         : 'Chain tools into workflows',\n            disabled        : !Galaxy.user.id\n        });\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        this.add({\n            id              : 'shared',\n            title           : 'Shared Data',\n            url             : 'library/index',\n            tooltip         : 'Access published resources',\n            menu            : [{\n                    title   : 'Data Libraries',\n                    url     : 'library/list'\n                },{\n                    title   : 'Histories',\n                    url     : 'history/list_published'\n                },{\n                    title   : 'Workflows',\n                    url     : 'workflow/list_published'\n                },{\n                    title   : 'Visualizations',\n                    url     : 'visualization/list_published'\n                },{\n                    title   : 'Pages',\n                    url     : 'page/list_published'\n            }]\n        });\n\n        //\n        // Lab menu.\n        //\n        options.user_requests && this.add({\n            id              : 'lab',\n            title           : 'Lab',\n            menu            : [{\n                    title   : 'Sequencing Requests',\n                    url     : 'requests/index'\n                },{\n                    title   : 'Find Samples',\n                    url     : 'requests/find_samples_index'\n                },{\n                    title   : 'Help',\n                    url     : options.lims_doc_url\n            }]\n        });\n\n        //\n        // Visualization tab.\n        //\n        this.add({\n            id              : 'visualization',\n            title           : 'Visualization',\n            url             : 'visualization/list',\n            tooltip         : 'Visualize datasets',\n            disabled        : !Galaxy.user.id,\n            menu            : [{\n                    title   : 'New Track Browser',\n                    url     : 'visualization/trackster',\n                    target  : '_frame'\n                },{\n                    title   : 'Saved Visualizations',\n                    url     : 'visualization/list',\n                    target  : '_frame'\n                },{\n                    title   : 'Interactive Environments',\n                    url     : 'visualization/gie_list',\n                    target  : 'galaxy_main'\n                }\n            ]\n        });\n\n        //\n        // Admin.\n        //\n        Galaxy.user.get( 'is_admin' ) && this.add({\n            id              : 'admin',\n            title           : 'Admin',\n            url             : 'admin',\n            tooltip         : 'Administer this Galaxy',\n            cls             : 'admin-only'\n        });\n\n        //\n        // Help tab.\n        //\n        var helpTab = {\n            id              : 'help',\n            title           : 'Help',\n            tooltip         : 'Support, contact, and community hubs',\n            menu            : [{\n                    title   : 'Support',\n                    url     : options.support_url,\n                    target  : '_blank'\n                },{\n                    title   : 'Search',\n                    url     : options.search_url,\n                    target  : '_blank'\n                },{\n                    title   : 'Mailing Lists',\n                    url     : options.mailing_lists,\n                    target  : '_blank'\n                },{\n                    title   : 'Videos',\n                    url     : options.screencasts_url,\n                    target  : '_blank'\n                },{\n                    title   : 'Wiki',\n                    url     : options.wiki_url,\n                    target  : '_blank'\n                },{\n                    title   : 'How to Cite Galaxy',\n                    url     : options.citation_url,\n                    target  : '_blank'\n                },{\n                    title   : 'Interactive Tours',\n                    url     : 'tours',\n                    onclick : function(){\n                        if (Galaxy.app){\n                            Galaxy.app.display(new Tours.ToursView());\n                        } else {\n                            // Redirect and use clientside routing to go to tour index\n                            window.location = Galaxy.root + \"tours\";\n                        }\n                    }\n            }]\n        };\n        options.terms_url && helpTab.menu.push({\n            title   : 'Terms and Conditions',\n            url     : options.terms_url,\n            target  : '_blank'\n        });\n        options.biostar_url && helpTab.menu.unshift({\n            title   : 'Ask a question',\n            url     : 'biostar/biostar_question_redirect',\n            target  : '_blank'\n        });\n        options.biostar_url && helpTab.menu.unshift({\n            title   : 'Galaxy Biostar',\n            url     : options.biostar_url_redirect,\n            target  : '_blank'\n        });\n        this.add( helpTab );\n\n        //\n        // User tab.\n        //\n        if ( !Galaxy.user.id ){\n            var userTab = {\n                id              : 'user',\n                title           : 'User',\n                cls             : 'loggedout-only',\n                tooltip         : 'Account registration or login',\n                menu            : [{\n                    title           : 'Login',\n                    url             : 'user/login',\n                    target          : 'galaxy_main',\n                    noscratchbook   : true\n                }]\n            };\n            options.allow_user_creation && userTab.menu.push({\n                title           : 'Register',\n                url             : 'user/create',\n                target          : 'galaxy_main',\n                noscratchbook   : true\n            });\n            this.add( userTab );\n        } else {\n            var userTab = {\n                id              : 'user',\n                title           : 'User',\n                cls             : 'loggedin-only',\n                tooltip         : 'Account preferences and saved data',\n                menu            : [{\n                        title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n                    },{\n                        title   : 'Preferences',\n                        url     : 'user?cntrller=user',\n                        target  : 'galaxy_main'\n                    },{\n                        title   : 'Custom Builds',\n                        url     : 'user/dbkeys',\n                        target  : 'galaxy_main'\n                    },{\n                        title   : 'Logout',\n                        url     : 'user/logout',\n                        target  : '_top',\n                        divider : true\n                    },{\n                        title   : 'Saved Histories',\n                        url     : 'history/list',\n                        target  : 'galaxy_main'\n                    },{\n                        title   : 'Saved Datasets',\n                        url     : 'dataset/list',\n                        target  : 'galaxy_main'\n                    },{\n                        title   : 'Saved Pages',\n                        url     : 'page/list',\n                        target  : '_top'\n                    },{\n                        title   : 'API Keys',\n                        url     : 'user/api_keys?cntrller=user',\n                        target  : 'galaxy_main'\n                }]\n            };\n            options.use_remote_user && userTab.menu.push({\n                title   : 'Public Name',\n                url     : 'user/edit_username?cntrller=user',\n                target  : 'galaxy_main'\n            });\n            this.add( userTab );\n        }\n        var activeView = this.get( options.active_view );\n        activeView && activeView.set( 'active', true );\n        return new jQuery.Deferred().resolve().promise();\n    }\n});\n\n/** Masthead tab **/\nvar Tab = Backbone.View.extend({\n    initialize: function ( options ) {\n        this.model = options.model;\n        this.setElement( this._template() );\n        this.$dropdown  = this.$( '.dropdown' );\n        this.$toggle    = this.$( '.dropdown-toggle' );\n        this.$menu      = this.$( '.dropdown-menu' );\n        this.$note      = this.$( '.dropdown-note' );\n        this.listenTo( this.model, 'change', this.render, this );\n    },\n\n    events: {\n        'click .dropdown-toggle' : '_toggleClick'\n    },\n\n    render: function() {\n        var self = this;\n        $( '.tooltip' ).remove();\n        this.$el.attr( 'id', this.model.id )\n                .css( { visibility : this.model.get( 'visible' ) && 'visible' || 'hidden' } );\n        this.model.set( 'url', this._formatUrl( this.model.get( 'url' ) ) );\n        this.$note.html( this.model.get( 'note' ) || '' )\n                  .removeClass().addClass( 'dropdown-note' )\n                  .addClass( this.model.get( 'note_cls' ) )\n                  .css( { 'display' : this.model.get( 'show_note' ) && 'block' || 'none' } )\n        this.$toggle.html( this.model.get( 'title' ) || '' )\n                    .removeClass().addClass( 'dropdown-toggle' )\n                    .addClass( this.model.get( 'cls' ) )\n                    .addClass( this.model.get( 'icon' ) && 'dropdown-icon fa ' + this.model.get( 'icon' ) )\n                    .addClass( this.model.get( 'toggle' ) && 'toggle' )\n                    .attr( 'target', this.model.get( 'target' ) )\n                    .attr( 'href', this.model.get( 'url' ) )\n                    .attr( 'title', this.model.get( 'tooltip' ) )\n                    .tooltip( 'destroy' );\n        this.model.get( 'tooltip' ) && this.$toggle.tooltip( { placement: 'bottom' } );\n        this.$dropdown.removeClass().addClass( 'dropdown' )\n                      .addClass( this.model.get( 'disabled' ) && 'disabled' )\n                      .addClass( this.model.get( 'active' ) && 'active' );\n        if ( this.model.get( 'menu' ) && this.model.get( 'show_menu' ) ) {\n            this.$menu.show();\n            $( '#dd-helper' ).show().off().on( 'click',  function() {\n                $( '#dd-helper' ).hide();\n                self.model.set( 'show_menu', false );\n            });\n        } else {\n            self.$menu.hide();\n            $( '#dd-helper' ).hide();\n        }\n        this.$menu.empty().removeClass( 'dropdown-menu' );\n        if ( this.model.get( 'menu' ) ) {\n            _.each( this.model.get( 'menu' ), function( menuItem ) {\n                self.$menu.append( self._buildMenuItem( menuItem ) );\n                menuItem.divider && self.$menu.append( $( '<li/>' ).addClass( 'divider' ) );\n            });\n            self.$menu.addClass( 'dropdown-menu' );\n            self.$toggle.append( $( '<b/>' ).addClass( 'caret' ) );\n        }\n        return this;\n    },\n\n    /** Add new menu item */\n    _buildMenuItem: function ( options ) {\n        var self = this;\n        options = _.defaults( options || {}, {\n            title           : '',\n            url             : '',\n            target          : '_parent',\n            noscratchbook   : false\n        });\n        options.url = self._formatUrl( options.url );\n        return $( '<li/>' ).append(\n            $( '<a/>' ).attr( 'href', options.url )\n                       .attr( 'target', options.target )\n                       .html( options.title )\n                       .on( 'click', function( e ) {\n                            e.preventDefault();\n                            self.model.set( 'show_menu', false );\n                            if (options.onclick){\n                                options.onclick();\n                            } else {\n                                Galaxy.frame.add( options );\n                            }\n                       })\n        );\n    },\n\n    /** Handle click event */\n    _toggleClick: function( e ) {\n        var self = this;\n        var model = this.model;\n        e.preventDefault();\n        $( '.tooltip' ).hide();\n        model.trigger( 'dispatch', function( m ) {\n            model.id !== m.id && m.get( 'menu' ) && m.set( 'show_menu', false );\n        });\n        if ( !model.get( 'disabled' ) ) {\n            if ( !model.get( 'menu' ) ) {\n                model.get( 'onclick' ) ? model.get( 'onclick' )() : Galaxy.frame.add( model.attributes );\n            } else {\n                model.set( 'show_menu', true );\n            }\n        } else {\n            function buildLink( label, url ) {\n                return $( '<div/>' ).append( $( '<a/>' ).attr( 'href', Galaxy.root + url ).html( label ) ).html()\n            }\n            this.$toggle.popover && this.$toggle.popover( 'destroy' );\n            this.$toggle.popover({\n                html        : true,\n                placement   : 'bottom',\n                content     : 'Please ' + buildLink( 'login', 'user/login?use_panels=True' ) + ' or ' +\n                                          buildLink( 'register', 'user/create?use_panels=True' ) + ' to use this feature.'\n            }).popover( 'show' );\n            setTimeout( function() { self.$toggle.popover( 'destroy' ) }, 5000 );\n        }\n    },\n\n    /** Url formatting */\n    _formatUrl: function( url ) {\n        return typeof url == 'string' && url.indexOf( '//' ) === -1 && url.charAt( 0 ) != '/' ? Galaxy.root + url : url;\n    },\n\n    /** body tempate */\n    _template: function () {\n        return  '<ul class=\"nav navbar-nav\">' +\n                    '<li class=\"dropdown\">' +\n                        '<a class=\"dropdown-toggle\"/>' +\n                        '<ul class=\"dropdown-menu\"/>' +\n                        '<div class=\"dropdown-note\"/>' +\n                    '</li>' +\n                '</ul>';\n    }\n});\n\nreturn {\n    Collection  : Collection,\n    Tab         : Tab\n};\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/layout/menu.js\n **/","define([\n    'layout/masthead',\n    'layout/panel',\n    'mvc/ui/ui-modal',\n    'mvc/base-mvc'\n], function( Masthead, Panel, Modal, BaseMVC ) {\n\n// ============================================================================\nvar PageLayoutView = Backbone.View.extend( BaseMVC.LoggableMixin ).extend({\n    _logNamespace : 'layout',\n\n    el : 'body',\n    className : 'full-content',\n\n    _panelIds : [\n        'left', 'center', 'right'\n    ],\n\n    defaultOptions : {\n        message_box_visible     : false,\n        message_box_content     : '',\n        message_box_class       : 'info',\n        show_inactivity_warning : false,\n        inactivity_box_content  : ''\n    },\n\n    initialize : function( options ) {\n        // TODO: remove globals\n        this.log( this + '.initialize:', options );\n        _.extend( this, _.pick( options, this._panelIds ) );\n        this.options = _.defaults( _.omit( options.config, this._panelIds ), this.defaultOptions );\n        Galaxy.modal = this.modal = new Modal.View();\n        this.masthead = new Masthead.View( this.options );\n        this.$el.attr( 'scroll', 'no' );\n        this.$el.html( this._template() );\n        this.$el.append( this.masthead.frame.$el );\n        this.$( '#masthead' ).replaceWith( this.masthead.$el );\n        this.$el.append( this.modal.$el );\n        this.$messagebox = this.$( '#messagebox' );\n        this.$inactivebox = this.$( '#inactivebox' );\n    },\n\n    render : function() {\n        // TODO: Remove this line after select2 update\n        $( '.select2-hidden-accessible' ).remove();\n        this.log( this + '.render:' );\n        this.masthead.render();\n        this.renderMessageBox();\n        this.renderInactivityBox();\n        this.renderPanels();\n        this._checkCommunicationServerOnline();\n        return this;\n    },\n\n    /** Render message box */\n    renderMessageBox : function() {\n        if ( this.options.message_box_visible ){\n            var content = this.options.message_box_content || '';\n            var level = this.options.message_box_class || 'info';\n            this.$el.addClass( 'has-message-box' );\n            this.$messagebox\n                .attr( 'class', 'panel-' + level + '-message' )\n                .html( content )\n                .toggle( !!content )\n                .show();\n        } else {\n            this.$el.removeClass( 'has-message-box' );\n            this.$messagebox.hide();\n        }\n        return this;\n    },\n\n    /** Render inactivity warning */\n    renderInactivityBox : function() {\n        if( this.options.show_inactivity_warning ){\n            var content = this.options.inactivity_box_content || '';\n            var verificationLink = $( '<a/>' ).attr( 'href', Galaxy.root + 'user/resend_verification' ).text( 'Resend verification' );\n            this.$el.addClass( 'has-inactivity-box' );\n            this.$inactivebox\n                .html( content + ' ' )\n                .append( verificationLink )\n                .toggle( !!content )\n                .show();\n        } else {\n            this.$el.removeClass( 'has-inactivity-box' );\n            this.$inactivebox.hide();\n        }\n        return this;\n    },\n\n    /** Render panels */\n    renderPanels : function() {\n        var page = this;\n        this._panelIds.forEach( function( panelId ){\n            if( _.has( page, panelId ) ){\n                page[ panelId ].setElement( '#' + panelId );\n                page[ panelId ].render();\n            }\n        });\n        if( !this.left ){\n            this.center.$el.css( 'left', 0 );\n        }\n        if( !this.right ){\n            this.center.$el.css( 'right', 0 );\n        }\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return [\n            '<div id=\"everything\">',\n                '<div id=\"background\"/>',\n                '<div id=\"masthead\"/>',\n                '<div id=\"messagebox\"/>',\n                '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n                this.left?   '<div id=\"left\" />' : '',\n                this.center? '<div id=\"center\" class=\"inbound\" />' : '',\n                this.right?  '<div id=\"right\" />' : '',\n            '</div>',\n            '<div id=\"dd-helper\" />',\n        ].join('');\n    },\n\n    /** hide both side panels if previously shown */\n    hideSidePanels : function(){\n        if( this.left ){\n            this.left.hide();\n        }\n        if( this.right ){\n            this.right.hide();\n        }\n    },\n\n    toString : function() { return 'PageLayoutView'; },\n\n    /** Check if the communication server is online and show the icon otherwise hide the icon */\n    _checkCommunicationServerOnline: function(){\n        var host = window.Galaxy.config.communication_server_host,\n            port = window.Galaxy.config.communication_server_port,\n            $chat_icon_element = $( \"#show-chat-online\" );\n        /** Check if the user has deactivated the communication in it's personal settings */\n        if (window.Galaxy.user.attributes.preferences !== undefined && window.Galaxy.user.attributes.preferences.communication_server === '1') {\n            // See if the configured communication server is available\n            $.ajax({\n                url: host + \":\" + port,\n            })\n            .success( function( data ) { \n                    // enable communication only when a user is logged in\n                    if( window.Galaxy.user.id !== null ) {\n                        if( $chat_icon_element.css( \"visibility\")  === \"hidden\" ) {\n                            $chat_icon_element.css( \"visibility\", \"visible\" ); \n                        }\n                    }\n            })\n            .error( function( data ) { \n                // hide the communication icon if the communication server is not available\n                $chat_icon_element.css( \"visibility\", \"hidden\" ); \n            });\n        } else {\n            $chat_icon_element.css( \"visibility\", \"hidden\" ); \n        }\n    },\n});\n\n// ============================================================================\n    return {\n        PageLayoutView: PageLayoutView\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/layout/page.js\n **/","/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\ndefine([ 'mvc/ui/ui-frames' ], function( Frames ) {\nreturn Backbone.View.extend({\n    initialize : function( options ) {\n        var self = this;\n        options = options || {};\n        this.frames = new Frames.View({ visible : false });\n        this.setElement( this.frames.$el );\n        this.buttonActive = options.collection.add({\n            id              : 'enable-scratchbook',\n            icon            : 'fa-th',\n            tooltip         : 'Enable/Disable Scratchbook',\n            onclick         : function() {\n                self.active = !self.active;\n                self.buttonActive.set({\n                    toggle    : self.active,\n                    show_note : self.active,\n                    note_cls  : self.active && 'fa fa-check'\n                });\n                !self.active && self.frames.hide();\n            },\n            onbeforeunload  : function() {\n                if ( self.frames.length() > 0 ) {\n                    return 'You opened ' + self.frames.length() + ' frame(s) which will be lost.';\n                }\n            }\n        });\n        this.buttonLoad = options.collection.add({\n            id              : 'show-scratchbook',\n            icon            : 'fa-eye',\n            tooltip         : 'Show/Hide Scratchbook',\n            show_note       : true,\n            visible         : false,\n            onclick         : function( e ) {\n                self.frames.visible ? self.frames.hide() : self.frames.show();\n            }\n        });\n        this.frames.on( 'add remove', function() {\n            this.visible && this.length() == 0 && this.hide();\n            self.buttonLoad.set( { 'note': this.length(), 'visible': this.length() > 0 } );\n        }).on( 'show hide ', function() {\n            self.buttonLoad.set( { 'toggle': this.visible, 'icon': this.visible && 'fa-eye' || 'fa-eye-slash' } );\n        });\n        this.history_cache = {};\n    },\n\n    /** Add a dataset to the frames */\n    addDataset: function( dataset_id ) {\n        var self = this;\n        var current_dataset = null;\n        if ( Galaxy && Galaxy.currHistoryPanel ) {\n            var history_id = Galaxy.currHistoryPanel.collection.historyId;\n            this.history_cache[ history_id ] = { name: Galaxy.currHistoryPanel.model.get( 'name' ), dataset_ids: [] };\n            Galaxy.currHistoryPanel.collection.each( function( model ) {\n                !model.get( 'deleted' ) && model.get( 'visible' ) && self.history_cache[ history_id ].dataset_ids.push( model.get( 'id' ) );\n            });\n        }\n        var _findDataset = function( dataset, offset ) {\n            if ( dataset ) {\n                var history_details = self.history_cache[ dataset.get( 'history_id' ) ];\n                if ( history_details && history_details.dataset_ids ) {\n                    var dataset_list = history_details.dataset_ids;\n                    var pos = dataset_list.indexOf( dataset.get( 'id' ) );\n                    if ( pos !== -1 && pos + offset >= 0 && pos + offset < dataset_list.length ) {\n                        return dataset_list[ pos + offset ];\n                    }\n                }\n            }\n        };\n        var _loadDatasetOffset = function( dataset, offset, frame ) {\n            var new_dataset_id = _findDataset( dataset, offset );\n            if ( new_dataset_id ) {\n                self._loadDataset( new_dataset_id, function( new_dataset, config ) {\n                    current_dataset = new_dataset;\n                    frame.model.set( config );\n                });\n            } else {\n                frame.model.trigger( 'change' );\n            }\n        }\n        this._loadDataset( dataset_id, function( dataset, config ) {\n            current_dataset = dataset;\n            self.add( _.extend( { menu: [ { icon     : 'fa fa-chevron-circle-left',\n                                            tooltip  : 'Previous in History',\n                                            onclick  : function( frame ) { _loadDatasetOffset( current_dataset, -1, frame ) },\n                                            disabled : function() { return !_findDataset( current_dataset, -1 ) } },\n                                          { icon     : 'fa fa-chevron-circle-right',\n                                            tooltip  : 'Next in History',\n                                            onclick  : function( frame ) { _loadDatasetOffset( current_dataset, 1, frame ) },\n                                            disabled : function() { return !_findDataset( current_dataset, 1 ) } } ] }, config ) )\n        });\n    },\n\n    _loadDataset: function( dataset_id, callback ) {\n        var self = this;\n        require([ 'mvc/dataset/data' ], function( DATA ) {\n            var dataset = new DATA.Dataset( { id : dataset_id } );\n            $.when( dataset.fetch() ).then( function() {\n                var is_tabular = _.find( [ 'tabular', 'interval' ] , function( data_type ) {\n                    return dataset.get( 'data_type' ).indexOf( data_type ) !== -1;\n                });\n                var title = dataset.get( 'name' );\n                var history_details = self.history_cache[ dataset.get( 'history_id' ) ];\n                if ( history_details ) {\n                    title = history_details.name + ': ' + title;\n                }\n                callback( dataset, is_tabular ? {\n                    title   : title,\n                    url     : null,\n                    content : DATA.createTabularDatasetChunkedView({\n                        model       : new DATA.TabularDataset( dataset.toJSON() ),\n                        embedded    : true,\n                        height      : '100%'\n                    }).$el\n                } : {\n                    title   : title,\n                    url     : Galaxy.root + 'datasets/' + dataset_id + '/display/?preview=True',\n                    content : null\n                } );\n            });\n        });\n    },\n\n    /** Add a trackster visualization to the frames. */\n    addTrackster: function(viz_id) {\n        var self = this;\n        require(['viz/visualization', 'viz/trackster'], function(visualization, trackster) {\n            var viz = new visualization.Visualization({id: viz_id});\n            $.when( viz.fetch() ).then( function() {\n                var ui = new trackster.TracksterUI(Galaxy.root);\n\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: viz.get('name'),\n                        type: 'other',\n                        content: function(parent_elt) {\n                            // Create view config.\n                            var view_config = {\n                                container: parent_elt,\n                                name: viz.get('title'),\n                                id: viz.id,\n                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                                dbkey: viz.get('dbkey'),\n                                stand_alone: false\n                            },\n                            latest_revision = viz.get('latest_revision'),\n                            drawables = latest_revision.config.view.drawables;\n\n                            // Set up datasets in drawables.\n                            _.each(drawables, function(d) {\n                                d.dataset = {\n                                    hda_ldda: d.hda_ldda,\n                                    id: d.dataset_id\n                                };\n                            });\n                            view = ui.create_visualization(view_config,\n                                                           latest_revision.config.viewport,\n                                                           latest_revision.config.view.drawables,\n                                                           latest_revision.config.bookmarks,\n                                                           false);\n                        }\n                    };\n                self.add(frame_config);\n            });\n        });\n    },\n\n    /** Add and display a new frame/window based on options. */\n    add: function( options ) {\n        if ( options.target == '_blank' ) {\n            window.open( options.url );\n        } else if ( options.target == '_top' || options.target == '_parent' || options.target == '_self' ) {\n            window.location = options.url;\n        } else if ( !this.active || options.noscratchbook ) {\n            var $galaxy_main = $( window.parent.document ).find( '#galaxy_main' );\n            if ( options.target == 'galaxy_main' || options.target == 'center' ) {\n                if ( $galaxy_main.length === 0 ) {\n                    window.location = options.url + ( options.url.indexOf( '?' ) == -1 ? '?' : '&' ) + 'use_panels=True';\n                } else {\n                    $galaxy_main.attr( 'src', options.url );\n                }\n            } else\n                window.location = options.url;\n        } else {\n            this.frames.add( options );\n        }\n    }\n});\n\n});\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/layout/scratchbook.js\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n'use strict';\n\nvar logNamespace = 'user';\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n/** @lends UserQuotaMeter.prototype */{\n    _logNamespace : logNamespace,\n\n    /** Defaults for optional settings passed to initialize */\n    options : {\n        warnAtPercent   : 85,\n        errorAtPercent  : 100\n    },\n\n    /** Set up, accept options, and bind events */\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this.options, options );\n\n        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n        this.listenTo( this.model, 'change:quota_percent change:total_disk_usage', this.render );\n    },\n\n    /** Re-load user model data from the api */\n    update : function( options ){\n        this.log( this + ' updating user data...', options );\n        this.model.loadFromApi( this.model.get( 'id' ), options );\n        return this;\n    },\n\n    /** Is the user over their quota (if there is one)?\n     * @returns {Boolean} true if over quota, false if no quota or under quota\n     */\n    isOverQuota : function(){\n        return ( this.model.get( 'quota_percent' ) !== null\n              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n    },\n\n    /** Render the meter when they have an applicable quota. Will render as a progress bar\n     *      with their percentage of that quota in text over the bar.\n     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n     *  @fires quota:under when user is under quota\n     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n     *  @fires quota:under:ok when user is below this.warnAtPercent\n     *  @returns {jQuery} the rendered meter\n     */\n    _render_quota : function(){\n        var modelJson = this.model.toJSON(),\n            //prevPercent = this.model.previous( 'quota_percent' ),\n            percent = modelJson.quota_percent,\n            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n            $meter = $( this._templateQuotaMeter( modelJson ) ),\n            $bar = $meter.find( '.progress-bar' );\n        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n        // OVER QUOTA: color the quota bar and show the quota error message\n        if( this.isOverQuota() ){\n            //this.log( '\\t over quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:over', modelJson );\n\n        // APPROACHING QUOTA: color the quota bar\n        } else if( percent >= this.options.warnAtPercent ){\n            //this.log( '\\t approaching quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\n        // otherwise, hide/don't use the msg box\n        } else {\n            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:ok', modelJson );\n        }\n        return $meter;\n    },\n\n    /** Render the meter when the user has NO applicable quota. Will render as text\n     *      showing the human readable sum storage their data is using.\n     *  @returns {jQuery} the rendered text\n     */\n    _render_usage : function(){\n        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n        var usage = $( this._templateUsage( this.model.toJSON() ) );\n        this.log( this + '.rendering usage:', usage );\n        return usage;\n    },\n\n    /** Render either the quota percentage meter or the human readable disk usage\n     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n     *  @returns {Object} this UserQuotaMeter\n     */\n    render : function(){\n        //this.log( this + '.rendering' );\n        var meterHtml = null;\n\n        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n        if( ( this.model.get( 'quota_percent' ) === null )\n        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n            meterHtml = this._render_usage();\n\n        // otherwise, render percent of quota (and warning, error)\n        } else {\n            meterHtml = this._render_quota();\n            //TODO: add the original text for unregistered quotas\n            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n        }\n\n        this.$el.html( meterHtml );\n        this.$el.find( '.quota-meter-text' ).tooltip();\n        return this;\n    },\n\n    _templateQuotaMeter : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n                    _l( 'Using' ), ' ', data.quota_percent, '%',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    _templateUsage : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    toString : function(){\n        return 'UserQuotaMeter(' + this.model + ')';\n    }\n});\n\n\n//==============================================================================\nreturn {\n    UserQuotaMeter : UserQuotaMeter\n};});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/mvc/user/user-quotameter.js\n **/","define([\n], function(){\n/*global window, jQuery, console */\n/*=============================================================================\nTODO:\n    while anon: logs saved to 'logs-null' - this will never post\n        unless we manually do so at/after login\n        OR prepend when userId and localStorage has 'logs-null'\n    wire up _delayPost and test\n\n=============================================================================*/\n/** @class MetricsLogger\n *\n *  Object to cache, output, and post log/metric messages to the server.\n *  Meant to be attached to the Galaxy object.\n *\n *  Log from objects by either attaching logger directly:\n *      panel.logger.metric( 'user dataset deletion', panel.user.id, hda.toJSON() )\n *  or using the LoggableMixin or addLogging function:\n *      MyBackboneModel.extend( LoggableMixin ).extend({ ... })\n *      addLogging( MyBackboneModel, 'my-backbone-model' )\n *\n *  Log from templates by calling directly from Galaxy object:\n *      Galaxy.logger.metric( 'template loaded', { ownedByUser : true });\n *\n *  If you attempt to log an un-serializable object (circular reference, window, etc.),\n *  that entry will not be cached (or sent). If you set consoleLevel and consoleLogger\n *  appropriately, a warning will be shown when this happens:\n *      > panel.metric( 'something weird with window', { window : window })\n *      !'Metrics logger could not stringify logArguments: ...'\n */\nfunction MetricsLogger( options ){\n    options = options || {};\n    var self = this;\n\n    ///** get the current user's id from bootstrapped data or options */\n    self.userId = ( window.bootstrapped && window.bootstrapped.user )? window.bootstrapped.user.id: null;\n    self.userId = self.userId || options.userId || null;\n\n    /** the (optional) console to emit logs to */\n    self.consoleLogger = options.consoleLogger || null;\n\n    self._init( options );\n    return self;\n}\n\n//----------------------------------------------------------------------------- defaults and constants\n// see: python std lib, logging\nMetricsLogger.ALL   =  0;\nMetricsLogger.LOG   =  0;\nMetricsLogger.DEBUG = 10;\nMetricsLogger.INFO  = 20;\nMetricsLogger.WARN  = 30;\nMetricsLogger.ERROR = 40;\n// metrics levels here?\n//MetricsLogger.MinorEvent  = 45;\n//MetricsLogger.MajorEvent  = 50;\nMetricsLogger.METRIC = 50;\nMetricsLogger.NONE = 100;\n\n/** default options - override these through the constructor */\nMetricsLogger.defaultOptions = {\n    /** if an incoming message has a level >= this, it will be cached - can also be a string (e.g. 'debug') */\n    logLevel            : MetricsLogger.NONE,\n    /** if an incoming message has a level >= this, it will be output to the console */\n    consoleLevel        : MetricsLogger.NONE,\n    /** the default 'namespace' or label associated with an incoming message (if none is passed) */\n    defaultNamespace    : 'Galaxy',\n    /** the namespaces output to the console (all namespaces will be output if this is falsy)\n     *  note: applies only to the console (not the event/metrics log/cache)\n     */\n    consoleNamespaceWhitelist : null,\n    /** the prefix attached to client-side logs to distinguish them in the metrics db */\n    clientPrefix        : 'client.',\n\n    /** the maximum number of messages the cache should hold; if exceeded older messages are removed first */\n    maxCacheSize        : 3000,\n    /** the number of messages accumulate before posting to the server; should be <= maxCacheSize */\n    postSize            : 1000,\n    /** T/F whether to add a timestamp to incoming cached messages */\n    addTime             : true,\n    /** string to prefix to userid for cache web storage */\n    cacheKeyPrefix      : 'logs-',\n\n    /** the relative url to post messages to */\n    postUrl             : '/api/metrics',\n    /** delay before trying post again after two failures */\n    delayPostInMs       : 1000 * 60 * 10,\n\n    /** an (optional) function that should return an object; used to send additional data with the metrics */\n    getPingData         : undefined,\n    /** an (optional) function that will handle the servers response after successfully posting messages */\n    onServerResponse    : undefined\n};\n\n//----------------------------------------------------------------------------- set up\n/** initialize the logger with options, set up instance vars and cache, and add onpageunload to window */\nMetricsLogger.prototype._init = function _init( options ){\n    var self = this;\n    self.options = {};\n    for( var k in MetricsLogger.defaultOptions ){\n        if( MetricsLogger.defaultOptions.hasOwnProperty( k ) ){\n            self.options[ k ] = ( options.hasOwnProperty( k ) )?( options[ k ] ):( MetricsLogger.defaultOptions[ k ] );\n        }\n    }\n    self.options.logLevel = self._parseLevel( self.options.logLevel );\n    self.options.consoleLevel = self._parseLevel( self.options.consoleLevel );\n    //self._emitToConsole( 'debug', 'MetricsLogger', 'MetricsLogger.options:', self.options );\n\n    /** is the logger currently sending? */\n    self._sending = false;\n    /** the setTimeout id if the logger POST has failed more than once */\n    self._waiting = null;\n    /** the current number of entries to send in a POST */\n    self._postSize = self.options.postSize;\n\n    self._initCache();\n\n    return self;\n};\n\n/** initialize the cache */\nMetricsLogger.prototype._initCache = function _initCache(){\n    try {\n        this.cache = new LoggingCache({\n            maxSize : this.options.maxCacheSize,\n            key     : this.options.cacheKeyPrefix + this.userId\n        });\n    } catch( err ){\n        this._emitToConsole( 'warn', 'MetricsLogger', [ 'Could not intitialize logging cache:', err ] );\n        this.options.logLevel = MetricsLogger.NONE;\n    }\n};\n\n/** return the numeric log level if level in 'none, debug, log, info, warn, error' */\nMetricsLogger.prototype._parseLevel = function _parseLevel( level ){\n    var type = typeof level;\n    if( type === 'number' ){ return level; }\n    if( type === 'string' ){\n        var upper = level.toUpperCase();\n        if( MetricsLogger.hasOwnProperty( upper ) ){\n            return MetricsLogger[ upper ];\n        }\n    }\n    throw new Error( 'Unknown log level: ' + level );\n};\n\n\n//----------------------------------------------------------------------------- main entry point\n/** record a log/message's arguments to the cache and/or the console based on level and namespace */\nMetricsLogger.prototype.emit = function emit( level, namespace, logArguments ){\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ 'emit:', level, namespace, logArguments ]);\n    var self = this;\n    namespace = namespace || self.options.defaultNamespace;\n    if( !level || !logArguments ){\n        return self;\n    }\n    // add to cache if proper level\n    //TODO: respect do not track?\n    //if( !navigator.doNotTrack && level >= self.options.logLevel ){\n    level = self._parseLevel( level );\n    if( level >= self.options.logLevel ){\n        self._addToCache( level, namespace, logArguments );\n    }\n    // also emit to consoleLogger if proper level for that\n    if( self.consoleLogger && level >= self.options.consoleLevel ){\n        self._emitToConsole( level, namespace, logArguments );\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- cache\n/** add a message to the cache and if messages.length is high enough post them to the server */\nMetricsLogger.prototype._addToCache = function _addToCache( level, namespace, logArguments ){\n    this._emitToConsole( 'debug', 'MetricsLogger',\n        [ '_addToCache:', arguments, this.options.addTime, this.cache.length() ]);\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ '\\t logArguments:', logArguments ]);\n    var self = this;\n    // try add to the cache and if we've got _postSize number of entries, attempt to post them to the server\n    try {\n        var newLength = self.cache.add( self._buildEntry( level, namespace, logArguments ) );\n        if( newLength >= self._postSize ){\n            self._postCache();\n        }\n    // discard entry if an error occurs, but warn if level set to do so\n    } catch( err ){\n        self._emitToConsole( 'warn', 'MetricsLogger',\n            [ 'Metrics logger could not stringify logArguments:', namespace, logArguments ] );\n        self._emitToConsole( 'error', 'MetricsLogger', [ err ] );\n\n    }\n    return self;\n};\n\n/** build a log cache entry object from the given level, namespace, and arguments (optionally adding timestamp */\nMetricsLogger.prototype._buildEntry = function _buildEntry( level, namespace, logArguments ){\n    this._emitToConsole( 'debug', 'MetricsLogger', [ '_buildEntry:', arguments ]);\n    var entry = {\n            level       : level,\n            namespace   : this.options.clientPrefix + namespace,\n            args        : logArguments\n        };\n    if( this.options.addTime ){\n        entry.time = new Date().toISOString();\n    }\n    return entry;\n};\n\n/** post _postSize messages from the cache to the server, removing them if successful\n *      if the post fails, wait until maxCacheSize is accumulated instead and try again then\n *      in addition to the messages from the cache ('metrics'), any info from getPingData (if set) will be sent\n *      onServerResponse will be called (if set) with any response from the server\n */\nMetricsLogger.prototype._postCache = function _postCache( options ){\n    options = options || {};\n    this._emitToConsole( 'info', 'MetricsLogger', [ '_postCache', options, this._postSize ]);\n\n    // short circuit if we're already sending\n    if( !this.options.postUrl || this._sending ){\n        return jQuery.when({});\n    }\n\n    var self = this,\n        postSize = options.count || self._postSize,\n        // do not splice - remove after *successful* post\n        entries = self.cache.get( postSize ),\n        entriesLength = entries.length,\n        // use the optional getPingData to add any extra info we may want to send\n        postData = ( typeof self.options.getPingData === 'function' )?( self.options.getPingData() ):( {} );\n    //console.debug( postSize, entriesLength );\n\n    // add the metrics and send\n    postData.metrics = JSON.stringify( entries );\n    //console.debug( postData.metrics );\n    self._sending = true;\n    return jQuery.post( self.options.postUrl, postData )\n        .always( function(){\n            self._sending = false;\n        })\n        .fail( function( xhr, status, message ){\n            // if we failed the previous time, set the next post target to the max num of entries\n            self._postSize = self.options.maxCacheSize;\n//TODO:??\n            // log this failure to explain any gap in metrics\n            self.emit( 'error', 'MetricsLogger', [ '_postCache error:',\n                xhr.readyState, xhr.status, xhr.responseJSON || xhr.responseText ]);\n//TODO: still doesn't solve the problem that when cache == max, post will be tried on every emit\n//TODO: see _delayPost\n        })\n        .done( function( response ){\n            if( typeof self.options.onServerResponse === 'function' ){\n                self.options.onServerResponse( response );\n            }\n            // only remove if post successful\n            self.cache.remove( entriesLength );\n            //console.debug( 'removed entries:', entriesLength, 'size now:', self.cache.length() );\n            // if we succeeded, reset the post target to the normal num of entries\n            self._postSize = self.options.postSize;\n        });\n    // return the xhr promise\n};\n\n/** set _waiting to true and, after delayPostInMs, set it back to false */\nMetricsLogger.prototype._delayPost = function _delayPost(){\n//TODO: this won't work between pages\n    var self = this;\n    self._waiting = setTimeout( function(){\n        self._waiting = null;\n    }, self.options.delayPostInMs );\n};\n\n\n//----------------------------------------------------------------------------- console\n/** output message to console based on level and consoleLogger type */\nMetricsLogger.prototype._emitToConsole = function _emitToConsole( level, namespace, logArguments ){\n    //console.debug( '_emitToConsole:', level, namespace, logArguments );\n    var self = this,\n        whitelist = self.options.consoleNamespaceWhitelist;\n    if( !self.consoleLogger ){ return self; }\n    // if a whitelist for namespaces is set, bail if this namespace is not in the list\n    if( whitelist && whitelist.indexOf( namespace ) === -1 ){\n        return self;\n    }\n\n    var args = Array.prototype.slice.call( logArguments, 0 );\n    args.unshift( namespace );\n//TODO: script location and/or source maps?\n//TODO: branch on navigator.userAgent == AIIEEE - it only has log\n    if(        level >= MetricsLogger.METRIC && typeof( self.consoleLogger.info ) === 'function' ){\n        return self.consoleLogger.info.apply( self.consoleLogger, args );\n\n    } else if( level >= MetricsLogger.ERROR && typeof( self.consoleLogger.error ) === 'function' ){\n        return self.consoleLogger.error.apply( self.consoleLogger, args );\n    } else if( level >= MetricsLogger.WARN && typeof( self.consoleLogger.warn ) === 'function' ){\n        self.consoleLogger.warn.apply( self.consoleLogger, args );\n    } else if( level >= MetricsLogger.INFO && typeof( self.consoleLogger.info ) === 'function' ){\n        self.consoleLogger.info.apply( self.consoleLogger, args );\n    } else if( level >= MetricsLogger.DEBUG && typeof( self.consoleLogger.debug ) === 'function' ){\n        self.consoleLogger.debug.apply( self.consoleLogger, args );\n    } else if( typeof( self.consoleLogger.log ) === 'function' ){\n        self.consoleLogger.log.apply( self.consoleLogger, args );\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- shortcuts\n// generic functions when logging from non-namespaced object (e.g. templates)\n/** log to default namespace */\nMetricsLogger.prototype.log = function log(){\n    this.emit( 1, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n/** debug to default namespace */\nMetricsLogger.prototype.debug = function debug(){\n    this.emit( MetricsLogger.DEBUG, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n/** info to default namespace */\nMetricsLogger.prototype.info = function info(){\n    this.emit( MetricsLogger.INFO, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n/** warn to default namespace */\nMetricsLogger.prototype.warn = function warn(){\n    this.emit( MetricsLogger.WARN, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n/** error to default namespace */\nMetricsLogger.prototype.error = function error(){\n    this.emit( MetricsLogger.ERROR, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n/** metric to default namespace */\nMetricsLogger.prototype.metric = function metric(){\n    this.emit( MetricsLogger.METRIC, this.options.defaultNamespace,\n        Array.prototype.slice.call( arguments, 0 ) );\n};\n\n\n/* ============================================================================\nTODO:\n    need a performance pass - the JSON un/parsing is a bit much\n\n============================================================================ */\n/** @class LoggingCache\n *  Simple implementation of cache wrapping an array.\n *\n *  Formats an entry before it's cached and only keeps options.maxSize number\n *  of entries. Older entries are deleted first.\n */\nfunction LoggingCache( options ){\n    var self = this;\n    return self._init( options || {} );\n}\n\n/** default options */\nLoggingCache.defaultOptions = {\n    /** maximum number of entries to keep before discarding oldest */\n    maxSize     : 5000\n};\n\n/** initialize with options */\nLoggingCache.prototype._init = function _init( options ){\n    if( !this._hasStorage() ){\n        //TODO: fall back to jstorage\n        throw new Error( 'LoggingCache needs localStorage' );\n    }\n    if( !options.key ){\n        throw new Error( 'LoggingCache needs key for localStorage' );\n    }\n    this.key = options.key;\n    this._initStorage();\n\n    this.maxSize = options.maxSize || LoggingCache.defaultOptions.maxSize;\n    return this;\n};\n\n/** tests for localStorage fns */\nLoggingCache.prototype._hasStorage = function _hasStorage(){\n//TODO: modernizr\n    var test = 'test';\n    try {\n        localStorage.setItem( test, test );\n        localStorage.removeItem( test );\n        return true;\n    } catch( e ){\n        return false;\n    }\n};\n\n/** if no localStorage set for key, initialize to empty array */\nLoggingCache.prototype._initStorage = function _initStorage(){\n    if( localStorage.getItem( this.key ) === null ){\n        return this.empty();\n    }\n    return this;\n};\n\n/** add an entry to the cache, removing the oldest beforehand if size >= maxSize */\nLoggingCache.prototype.add = function add( entry ){\n    var self = this,\n        _cache = self._fetchAndParse(),\n        overage = ( _cache.length + 1 ) - self.maxSize;\n    if( overage > 0 ){\n        _cache.splice( 0, overage );\n    }\n    _cache.push( entry );\n    self._unparseAndStore( _cache );\n    return _cache.length;\n};\n\n/** get the entries from localStorage and parse them */\nLoggingCache.prototype._fetchAndParse = function _fetchAndParse(){\n    var self = this;\n    return JSON.parse( localStorage.getItem( self.key ) );\n};\n\n/** stringify the entries and put them in localStorage */\nLoggingCache.prototype._unparseAndStore = function _unparseAndStore( entries ){\n    var self = this;\n    return localStorage.setItem( self.key, JSON.stringify( entries ) );\n};\n\n///** process the entry before caching */\n//LoggingCache.prototype._preprocessEntry = function _preprocessEntry( entry ){\n//    return JSON.stringify( entry );\n//};\n\n/** return the length --- oh, getters where are you? */\nLoggingCache.prototype.length = function length(){\n    return this._fetchAndParse().length;\n};\n\n/** get count number of entries starting with the oldest */\nLoggingCache.prototype.get = function get( count ){\n    return this._fetchAndParse().slice( 0, count );\n};\n\n/** remove count number of entries starting with the oldest */\nLoggingCache.prototype.remove = function remove( count ){\n    var _cache = this._fetchAndParse(),\n        removed = _cache.splice( 0, count );\n    this._unparseAndStore( _cache );\n    return removed;\n};\n\n/** empty/clear the entire cache */\nLoggingCache.prototype.empty = function empty(){\n    localStorage.setItem( this.key, '[]' );\n    return this;\n};\n\n/** stringify count number of entries (but do not remove) */\nLoggingCache.prototype.stringify = function stringify( count ){\n    return JSON.stringify( this.get( count ) );\n};\n\n/** outputs entire cache to console */\nLoggingCache.prototype.print = function print(){\n    // popup? (really, carl? a popup?) - easier to copy/paste\n    console.log( JSON.stringify( this._fetchAndParse(), null, '  ' ) );\n};\n\n\n//=============================================================================\n    return {\n        MetricsLogger  : MetricsLogger,\n        LoggingCache   : LoggingCache\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./galaxy/scripts/utils/metrics-logger.js\n **/"],"sourceRoot":""}