{"version":3,"sources":["webpack:///adminToolshed.bundled.js","webpack:///./galaxy/scripts/mvc/ui/ui-portlet.js","webpack:///./galaxy/scripts/mvc/ui/ui-buttons.js","webpack:///./galaxy/scripts/mvc/toolshed/toolshed-model.js","webpack:///./galaxy/scripts/mvc/toolshed/util.js","webpack:///./galaxy/scripts/libs/jquery/jstree.js","webpack:///./galaxy/scripts/mvc/form/form-view.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-default.js","webpack:///./galaxy/scripts/mvc/ui/ui-options.js","webpack:///./galaxy/scripts/mvc/ui/ui-list.js","webpack:///./galaxy/scripts/apps/admin-toolshed.js","webpack:///./galaxy/scripts/admin.toolshed.js","webpack:///./galaxy/scripts/mvc/toolshed/shed-list-view.js","webpack:///./galaxy/scripts/mvc/toolshed/categories-view.js","webpack:///./galaxy/scripts/mvc/toolshed/repositories-view.js","webpack:///./galaxy/scripts/mvc/toolshed/repository-view.js","webpack:///./galaxy/scripts/mvc/toolshed/repository-queue-view.js","webpack:///./galaxy/scripts/mvc/toolshed/repo-status-view.js","webpack:///./galaxy/scripts/mvc/toolshed/workflows-view.js","webpack:///./galaxy/scripts/mvc/ui/ui-misc.js","webpack:///./galaxy/scripts/mvc/ui/ui-table.js","webpack:///./galaxy/scripts/mvc/form/form-data.js","webpack:///./galaxy/scripts/mvc/ui/ui-slider.js","webpack:///./galaxy/scripts/mvc/ui/ui-drilldown.js","webpack:///./galaxy/scripts/mvc/form/form-section.js","webpack:///./galaxy/scripts/mvc/form/form-repeat.js","webpack:///./galaxy/scripts/mvc/form/form-input.js","webpack:///./galaxy/scripts/mvc/form/form-parameters.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-content.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-library.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-ftp.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-genomespace.js","webpack:///./galaxy/scripts/mvc/tool/tool-genomespace.js","webpack:///./galaxy/scripts/mvc/ui/ui-color-picker.js","webpack:///./galaxy/scripts/mvc/ui/ui-modal.js"],"names":["webpackJsonp","11","module","exports","__webpack_require__","Backbone","_","$","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_utils","_utils2","_uiMisc","_uiMisc2","View","extend","visible","initialize","options","self","this","model","Model","id","uid","cls","title","icon","buttons","body","scrollable","nopadding","operations","collapsible","collapsible_button","collapsed","onchange_title","set","setElement","_template","$body","$title_text","$title_icon","$header","$content","$backdrop","$buttons","$operations","get","append","ButtonIcon","tooltip","onclick","render","attributes","$el","removeClass","addClass","attr","html","each","show","hide","off","on","collapse","expand","prop","make_text_editable","on_finish","new_title","empty","name","item","header","fadeIn","enableButton","find","disableButton","hideOperation","showOperation","setOperation","callback","height","setIcon","disable","enable","call","12","ButtonDefault","wait","wait_text","wait_cls","disabled","percentage","$icon","$title","$progress","$progress_bar","listenTo","placement","css","width","unwait","ButtonLink","href","target","ButtonCheck","icons","onchange","new_val","total","undefined","$button","ButtonMenu","$menu","pull","onunload","tag","collection","Collection","$root","display","where","length","e","preventDefault","remove","submodel","suboptions","$link","divider","addMenu","add","merge","167","ToolShedModel","defaults","url","urlRoot","Galaxy","root","ToolShedsCollection","ToolShedCategoriesModel","ToolShedCategoriesCollection","ToolShedCategoryModel","ToolShedCategoryCollection","ToolShedRepositoryModel","ToolShedRepositoryCollection","RepoQueueModel","RepoQueueCollection","fetch","repositories","Array","repositories_enc","JSON","parse","localStorage","queue_keys","keys","key","repo","queue_key","push","reset","prototype","RepoStatusModel","RepoStatusCollection","WorkflowToolsModel","WorkflowToolsCollection","ShedModel","ShedsCollection","Category","Categories","CategoryModel","CategoryCollection","RepositoryModel","RepositoryCollection","RepoQueue","RepoStatus","WorkflowTools","168","searchShed","request","response","that","shed_url","base_url","term","tool_shed_url","data","result_list","shedParser","jsondata","results","hits","hit","record","label","repository","repo_owner_username","description","result","addToQueue","metadata","substr","repository_id","changeset_revision","queued_repos","stringify","queueLength","hasOwnProperty","repo_queue","198","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","apply","jstree","_temp1","_temp2","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","src","_d","document","_node","createElement","setAttribute","className","appendChild","version","plugins","path","indexOf","replace","idregex","create","el","tmp","core","opt","i","k","plugin","init","_id","_cnt","_wrk","_data","themes","dots","selected","last_error","working","worker_queue","reference","needle","ignore","closest","inst","_model","fn","arg","is_method","args","slice","arguments","instance","method","isPlainObject","expr","createPseudo","search","a","hasClass","strings","check_callback","error","noop","animation","multiple","dir","stripes","variant","responsive","expand_selected_onload","worker","force_text","deco","opts","Child","#","parent","parents","children","children_d","state","loaded","changed","force_full_redraw","redraw_timeout","default_state","opened","element","settings","bind","proxy","teardown","ready","rtl","trigger","original_container_html","clone","addBack","contents","filter","nodeType","nodeValue","test","get_string","li_height","get_container_ul","load_node","destroy","keep_html","unbind","removeData","selection","window","getSelection","sel","removeAllRanges","toggle_node","currentTarget","focus","activate_node","tagName","o","which","type","is_open","close_node","get_prev_dom","is_closed","open_node","get_node","get_next_dom","is_selected","get_selected","status","node","j","concat","vakata","array_unique","action","setTimeout","s","set_theme","set_theme_variant","mouseleave","not","mouseenter","hover_node","dehover_node","ev","triggerHandler","get_container","isFunction","_firstChild","dom","firstChild","nextSibling","_nextSibling","_previousSibling","previousSibling","as_dom","ex","get_path","glue","ids","p","text","get_text","reverse","join","strict","parentsUntil","next","eq","lastChild","parentNode","get_parent","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","l","c","isArray","_load_nodes","array_remove_item","_load_node","nodes","is_callback","r","m","done","t","d","ajax","x","getResponseHeader","_append_json_data","_append_html_data","reason","xhr","fail","f","_node_changed","cb","dat","is","par","chd","dpc","v","_parse_model_from_html","redraw","w","df","t_id","t_cnt","func","rslt","parse_flat","ps","unshift","tid","toString","li_attr","a_attr","original","parse_nest","cnt","mod","inArray","Blob","URL","Worker","createObjectURL","onmessage","shift","postMessage","trim","_parse_model_from_flat_json","_parse_model_from_json","_redraw","redraw_node","full","deep","ind","old","querySelector","getElementById","index","activeElement","cloneNode","childNodes","style","backgroundImage","backgroundPosition","backgroundSize","createTextNode","innerHTML","insertBefore","t1","t2","end","stop","slideDown","ok","_open_to","slideUp","open_all","original_obj","_this","close_all","is_disabled","enable_node","disable_node","last_clicked","metaKey","ctrlKey","shiftKey","select_node","deselect_node","deselect_all","supress_event","prevent_open","event","select_all","old_selection","map","get_top_selected","get_bottom_selected","get_state","open","scroll","left","scrollLeft","top","scrollTop","set_state","res","n","isEmptyObject","refresh","skip_loading","forget_state","refresh_node","to_load","set_id","set_text","val","get_json","flat","get_icon","no_data","no_state","no_id","no_children","create_node","pos","match","check","position","rename_node","delete_node","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","cut","copy","get_buffer","mode","can_paste","paste","edit","default_text","h1","visibility","appendTo","h2","class","padding","border","box-sizing","lineHeight","blur","replaceWith","keydown","stopImmediatePropagation","click","mousedown","keyup","Math","min","keypress","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","select","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","set_icon","hide_icon","removeAttr","show_icon","with_values","nodeName","toLowerCase","array","from","to","rest","_i","checkbox","three_state","whole_node","keep_selected_style","cascade","tie_selection","uto","clearTimeout","_undetermined","checked","undetermined","tt","tmp2","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","is_checked","uncheck_node","check_node","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","contextmenu","show_at_node","items","separator_before","separator_after","_disabled","new_node","rename","ccp","submenu","last_ts","timeStamp","show_contextmenu","pageX","pageY","context","y","offset","_show_contextmenu","one","right_to_left","vakata_context","position_x","position_y","is_visible","hide_onmouseleave","_trigger","event_name","_execute","_parse","str","sep","_class","shortcut","shortcut_label","_show_submenu","outerWidth","h","dw","dh","outerHeight","contains","relatedTarget","siblings","last","prevAll","first","nextAll","mouseup","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","mlt","start","origin","lastmv","laster","opento","marker","op","pr","ip","tm","ins","ref","rel","helper","z","_get","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold","threshold_touch","_clean","clearInterval","drag","_scroll","init_only","setInterval","originalEvent","changedTouches","elementFromPoint","pageXOffset","pageYOffset","unselectable","onselectstart","MozUserSelect","margin","zIndex","abs","wh","ww","dt","dl","ht","hl","scrollHeight","offsetHeight","scrollWidth","offsetWidth","parseInt","fuzzy","case_sensitive","show_only_matches","close_opened_onclear","search_leaves_only","search_callback","opn","querySelectorAll","skip_async","clear_search","caseSensitive","isMatch","_search_open","pattern","txt","matchmask","pattern_alphabet","match_bitapScore","MATCH_LOCATION","location","MATCH_DISTANCE","distance","MATCH_THRESHOLD","patternLen","mask","charAt","accuracy","proximity","score","binMin","binMid","lastRd","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","max","sort","b","events","ttl","save_state","restore_state","st","sec","Date","storage","clear_state","del","setItem","getItem","removeItem","types","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","duplicate","counter","div","wholerow","Event","altKey","20","_uiPortlet","_uiPortlet2","_formSection","_formSection2","_formData","_formData2","initial_errors","always_refresh","hide_operations","update","new_model","matchModel","input_id","input","input_list","isEqual","field","field_list","new_options","emit","debug","active","is_dynamic","highlight","message","silent","input_element","element_list","portlet","$panel","animate","errors","error_messages","matchResponse","Manager","_renderForm","current_check","checksum","refresh_on_change","new_check","UnescapedMessage","section","inputs","persistent","22","_uiButtons","_uiButtons2","data2","error_text","empty_text","searchable","optional","readonly","individual","pagesize","_changeData","_changeDisabled","_changeWait","_changeVisible","_changeValue","_renderSearchable","_renderClassic","$select","_getValue","$dropdown","$resize","$resize_icon","currentY","currentHeight","minHeight","select2","all_button","new_value","option","prepend","_match","String","toUpperCase","order","tags","matched_tags","closeOnSelect","query","q","found","page","formatResult","escape","reduce","memo","_setValue","exists","findWhere","sorter","keep","setOnChange","isEmpty","23","Base","$message","$options","_templateOptions","_templateOption","_messageShow","values","BaseIcons","pair","Radio","Checkbox","RadioButton","24","Message","Select","button","v_id","v_name","_refresh","lst","_templateRow","308","App","_admin2","GalaxyApp","_admin","adminToolshedApp","309","_shedListView","_shedListView2","_categoriesView","_categoriesView2","_repositoriesView","_repositoriesView2","_repositoryView","_repositoryView2","_repositoryQueueView","_repositoryQueueView2","_repoStatusView","_repoStatusView2","_workflowsView","_workflowsView2","AdminToolshedRouter","Router","routesHit","history","trackPageview","routes","","sheds","queue","workflows","status/r/:repositories","categories/s/:tool_shed","category/s/:tool_shed/c/:cateory_id","repository/s/:tool_shed/r/:repository_id","back","navigate","GalaxyAdminToolshedApp","app_config","known_views","admintoolshedapp","admin_toolshed_router","adminRepoQueueView","reDraw","RepoQueueView","adminShedListView","ShedListView","tool_shed","adminShedCategoriesView","CategoryView","category_id","adminShedCategoryView","adminRepositoryView","RepoDetails","adminRepoStatusView","split","adminWorkflowsView","Workflows","pushState","310","_toolshedModel","_toolshedModel2","_util","_util2","tool_sheds","toolshed_list_template","templateToolshedList","models","template","311","ToolShedCategories","shed","categories","category_list_template","templateCategoryList","bindEvents","autocomplete","source","params","post","console","log","minLength","ui","tsr_id","new_route","312","ToolShedCategoryContentsView","category","category_contents_template","templateCategoryContents","313","_jstree","_uiModal","_uiModal2","_formView","_formView2","ToolShedRepositoryView","repo_details_template","templateRepoDetails","changesets","current_changeset","current_metadata","tools","repository_dependencies_template","templateRepoDependencies","repository_dependency_template","templateRepoDependency","tps_template_global_select","templateGlobalSectionSelect","tps_template_tool_select","templateToolSectionSelect","tps_select_options","templatePanelSelectOptions","tool_dependencies","shed_tool_conf","templateShedToolConf","stc_html","panel_section_dict","api_url","checkInstalled","tpsSelection","tool_shed_repository_ids","install_tool_dependencies","install_repository_dependencies","install_resolver_dependencies","panelSelect","tool_panel_section","changeset","prepareInstall","repository_metadata","guid","desc","toolform","deepeach","info","textify","extensions","modal","modal_title","closing_events","Close","owner","already_installed","repoQueued","installed","deleted","uninstalled","changeset_match","installed_changeset_revision","tool_panel_section_id","new_tool_panel_section","element_name","tool_guid","queueKey","new_tps","iri_parameters","doInstall","controller_url","templateToolDependency","templateGlobalSectionCreate","templateToolSectionCreate","314","repo_queue_template","templateRepoQueue","loadFromQueue","installFromQueue","repository_queue","iri_params","315","ToolShedRepoStatusView","timer","terminal_states","all_done","some","repo_id","repo_status","close","repo_status_template","templateRepoStatus","316","workflows_missing_tools","templateWorkflows","tool_ids","toolshed","elem","loadWorkflows","4","_uiSelectDefault","_uiSelectDefault2","_uiSlider","_uiSlider2","_uiOptions","_uiOptions2","_uiDrilldown","_uiDrilldown2","Label","fade","messageForDisplay","timeout","fadeOut","Input","placeholder","area","color","datalist","change","_onchange","attr_name","Hidden","$info","$hidden","Upload","$file","$text","$wait","_readFile","file","files","reader","FileReader","onload","readAsText","Button","Modal","Slider","Drilldown","43","content","ondblclick","onconfirm","selectable","cls_tr","$thead","$tbody","$tmessage","row","_row","row_count","dblclick","addHeader","appendHeader","align","wrapper","_commit","delAll","before","after","size","_onclick","old_value","_ondblclick","44","app","sum","flat_id","input_value","flat_dict","result_dict","convert","identifier","head","block_indices","block_prefix","block_label","test_param","selectedCase","matchCase","collapsible_value","payload","p_id","dict","_iterate","visitInputs","new_id","separator","child","truevalue","falsevalue","cases","prefix","cache","46","step","precise","$slider","pressed","_isParameter","has_slider","slider","isNaN","round","substring","47","header_index","list","_setState","header_id","is_expanded","$subgroup","attach","iterate","$tmpl","level","has_options","new_header","$group","48","jQuery","_formRepeat","_formRepeat2","_formInput","_formInput2","_formParameters","_formParameters2","parameters","input_def","_addConditional","_addRepeat","_addSection","_addRow","case_def","section_row","nonhidden","hidden","sub_section","_append","sub_section_id","block_index","repeat","ondel","onnew","n_cache","hideOptions","help","expanded","hide_label","text_value","collapsible_preview","argument","backdrop","fixed","49","button_new","$list","button_delete","50","app_options","text_enable","text_disable","cls_enable","cls_disable","$field","$preview","$collapsible","$collapsible_text","$collapsible_icon","$error_text","$error","help_text","help_argument","collapsible_state","51","_uiSelectContent","_uiSelectContent2","_uiSelectLibrary","_uiSelectLibrary2","_uiSelectFtp","_uiSelectFtp2","_uiSelectGenomespace","_uiSelectGenomespace2","_uiColorPicker","_uiColorPicker2","password","data_column","genomebuild","data_collection","integer","float","boolean","drill_down","hidden_data","baseurl","library_data","ftpfile","upload","genomespacefile","fieldClass","_fieldSelect","_fieldText","_fieldData","flavor","is_workflow","SelectClass","_fieldDrilldown","str_value","_fieldSlider","_fieldHidden","_fieldBoolean","_fieldColor","_fieldLibrary","_fieldFtp","_fieldGenomeSpace","_fieldUpload","52","Batch","DISABLED","ENABLED","LINKED","Configurations","batch","data_multiple","workflow_data","workflow_data_multiple","workflow_data_collection","module_data","module_data_collection","src_labels","hda","hdca","pagelimit","statustimer","button_product","$batch_div","$batch","linked","enabled","lastenter","_handleDrop","_changeCurrent","_changeType","current","config","id_list","fields","_batch","details","hid","$batchfield","batchmode","button_type","config_id","button_data","button_width","margin-left","select_options","drop_data","dataTransfer","getData","new_src","history_content_type","current_value","_handleDropStatus","map_over_type","53","_uiTable","_uiList","_uiList2","Libraries","LibraryDatasets","library_id","libraries","datasets","library_select","dataset_list","success","54","ftpfile_list","55","_toolGenomespace","_toolGenomespace2","browse_button","browseGenomeSpace","filename_textbox","token_textbox","openFileBrowser","successCallback","destination","token","56","GS_UI_URL","genomespace_ui_url","GS_UPLOAD_URL","newWin","successCalBack","addEventListener","setCallbackOnGSUploadError","57","colors","standard","base","$view","$value","_build","$boxes","_templateCheck","rgb","hex","_content","line_def","_templateContent","$line","$box","_templateBox","bottom","9","optionsDefault","container","closing_callback","title_separator","buttonList","keyCode","canceled","$dialog","$footer","getButton","showButton","hideButton"],"mappings":"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BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFnoB,KAAK,KAGXwqB,yBAA0B7iC,EAAEwgC,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFnoB,KAAK,KAGX0qB,uBAAwB/iC,EAAEwgC,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFnoB,KAAK,KAGXmrB,qBAAsBxjC,EAAEwgC,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFnoB,KAAK,KAGX8tB,uBAAwBnmC,EAAEwgC,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFnoB,KAAK,KAGX+tB,4BAA6BpmC,EAAEwgC,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFnoB,KAAK,KAGX4qB,4BAA6BjjC,EAAEwgC,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFnoB,KAAK,KAGXguB,0BAA2BrmC,EAAEwgC,UAErB,uFACA,+KACA,uLACA,UACFnoB,KAAK,KAGX8qB,0BAA2BnjC,EAAEwgC,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFnoB,KAAK,KAGXgrB,2BAA4BrjC,EAAEwgC,UAEtB,6CACA,iEACA,aACFnoB,KAAK,Mfi+Qf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","file":"adminToolshed.bundled.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    visible: false,\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            cls: \"ui-portlet\",\n            title: \"\",\n            icon: \"\",\n            buttons: null,\n            body: null,\n            scrollable: true,\n            nopadding: false,\n            operations: null,\n            collapsible: false,\n            collapsible_button: false,\n            collapsed: false,\n            onchange_title: null\n        }).set(options);\n        this.setElement(this._template());\n\n        // link all dom elements\n        this.$body = this.$(\".portlet-body\");\n        this.$title_text = this.$(\".portlet-title-text\");\n        this.$title_icon = this.$(\".portlet-title-icon\");\n        this.$header = this.$(\".portlet-header\");\n        this.$content = this.$(\".portlet-content\");\n        this.$backdrop = this.$(\".portlet-backdrop\");\n        this.$buttons = this.$(\".portlet-buttons\");\n        this.$operations = this.$(\".portlet-operations\");\n\n        // add body to component list\n        this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n        // add icon for collapsible option\n        this.collapsible_button = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa-eye\",\n            tooltip: \"Collapse/Expand\",\n            cls: \"ui-button-icon-plain\",\n            onclick: function onclick() {\n                self[self.collapsed ? \"expand\" : \"collapse\"]();\n            }\n        });\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass(options.cls).attr(\"id\", options.id);\n        this.$header[options.title ? \"show\" : \"hide\"]();\n        this.$title_text.html(options.title);\n        _.each([this.$content, this.$body], function ($el) {\n            $el[options.nopadding ? \"addClass\" : \"removeClass\"](\"no-padding\");\n        });\n\n        // render title icon\n        if (options.icon) {\n            this.$title_icon.removeClass().addClass(\"portlet-title-icon fa\").addClass(options.icon).show();\n        } else {\n            this.$title_icon.hide();\n        }\n\n        // make portlet collapsible\n        this.$title_text[options.collapsible ? \"addClass\" : \"removeClass\"](\"no-highlight collapsible\").off();\n        if (options.collapsible) {\n            this.$title_text.on(\"click\", function () {\n                self[self.collapsed ? \"expand\" : \"collapse\"]();\n            });\n            options.collapsed ? this.collapse() : this.expand();\n        }\n\n        // allow title editing\n        this.$title_text.prop(\"disabled\", !options.onchange_title);\n        options.onchange_title && this.$title_text.make_text_editable({\n            on_finish: function on_finish(new_title) {\n                options.onchange_title(new_title);\n            }\n        });\n\n        // render buttons\n        if (options.buttons) {\n            this.$buttons.empty().show();\n            $.each(this.model.get(\"buttons\"), function (name, item) {\n                item.$el.prop(\"id\", name);\n                self.$buttons.append(item.$el);\n            });\n        } else {\n            this.$buttons.hide();\n        }\n\n        // render operations\n        this.$operations.empty;\n        if (options.collapsible_button) {\n            this.$operations.append(this.collapsible_button.$el);\n        }\n        if (options.operations) {\n            $.each(options.operations, function (name, item) {\n                item.$el.prop(\"id\", name);\n                self.$operations.append(item.$el);\n            });\n        }\n        return this;\n    },\n\n    /** Append new doms to body */\n    append: function append($el) {\n        this.$body.append($el);\n    },\n\n    /** Remove all content */\n    empty: function empty() {\n        this.$body.empty();\n    },\n\n    /** Return header element */\n    header: function header() {\n        return this.$header;\n    },\n\n    /** Return body element */\n    body: function body() {\n        return this.$body;\n    },\n\n    /** Show portlet */\n    show: function show() {\n        this.visible = true;\n        this.$el.fadeIn(\"fast\");\n    },\n\n    /** Hide portlet */\n    hide: function hide() {\n        this.visible = false;\n        this.$el.hide();\n    },\n\n    /** Enable a particular button */\n    enableButton: function enableButton(id) {\n        this.$buttons.find(\"#\" + id).prop(\"disabled\", false);\n    },\n\n    /** Disable a particular button */\n    disableButton: function disableButton(id) {\n        this.$buttons.find(\"#\" + id).prop(\"disabled\", true);\n    },\n\n    /** Hide a particular operation */\n    hideOperation: function hideOperation(id) {\n        this.$operations.find(\"#\" + id).hide();\n    },\n\n    /** Show a particular operation */\n    showOperation: function showOperation(id) {\n        this.$operations.find(\"#\" + id).show();\n    },\n\n    /** Replaces the event callback of an existing operation */\n    setOperation: function setOperation(id, callback) {\n        this.$operations.find(\"#\" + id).off(\"click\").on(\"click\", callback);\n    },\n\n    /** Change title */\n    title: function title(new_title) {\n        new_title && this.$title_text.html(new_title);\n        return this.$title_text.html();\n    },\n\n    /** Collapse portlet */\n    collapse: function collapse() {\n        this.collapsed = true;\n        this.$content.height(\"0%\");\n        this.$body.hide();\n        this.collapsible_button.setIcon(\"fa-eye-slash\");\n    },\n\n    /** Expand portlet */\n    expand: function expand() {\n        this.collapsed = false;\n        this.$content.height(\"100%\");\n        this.$body.fadeIn(\"fast\");\n        this.collapsible_button.setIcon(\"fa-eye\");\n    },\n\n    /** Disable content access */\n    disable: function disable() {\n        this.$backdrop.show();\n    },\n\n    /** Enable content access */\n    enable: function enable() {\n        this.$backdrop.hide();\n    },\n\n    _template: function _template() {\n        return $(\"<div/>\").append($(\"<div/>\").addClass(\"portlet-header\").append($(\"<div/>\").addClass(\"portlet-operations\")).append($(\"<div/>\").addClass(\"portlet-title\").append($(\"<i/>\").addClass(\"portlet-title-icon\")).append($(\"<span/>\").addClass(\"portlet-title-text\")))).append($(\"<div/>\").addClass(\"portlet-content\").append($(\"<div/>\").addClass(\"portlet-body\")).append($(\"<div/>\").addClass(\"portlet-buttons\"))).append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n    }\n});\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This renders the default button which is used e.g. at the bottom of the upload modal. */\nvar ButtonDefault = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            title: \"\",\n            icon: \"\",\n            cls: \"btn btn-default\",\n            wait: false,\n            wait_text: \"Sending...\",\n            wait_cls: \"btn btn-info\",\n            disabled: false,\n            percentage: -1\n        }).set(options);\n        this.setElement($(\"<button/>\").attr(\"type\", \"button\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\")).append(this.$progress = $(\"<div/>\").append(this.$progress_bar = $(\"<div/>\"))));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass(\"ui-button-default\").addClass(options.disabled && \"disabled\").attr(\"id\", options.id).attr(\"disabled\", options.disabled).off(\"click\").on(\"click\", function () {\n            $(\".tooltip\").hide();\n            options.onclick && !self.disabled && options.onclick();\n        }).tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$progress.addClass(\"progress\").css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n        this.$progress_bar.addClass(\"progress-bar\").css({ width: options.percentage + \"%\" });\n        this.$icon.removeClass().addClass(\"icon fa\");\n        this.$title.removeClass().addClass(\"title\");\n        if (options.wait) {\n            this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n            this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n            this.$title.html(options.wait_text);\n        } else {\n            this.$el.addClass(options.cls);\n            this.$icon.addClass(options.icon);\n            this.$title.html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        }\n    },\n\n    /** Show button */\n    show: function show() {\n        this.$el.show();\n    },\n\n    /** Hide button */\n    hide: function hide() {\n        this.$el.hide();\n    },\n\n    /** Disable button */\n    disable: function disable() {\n        this.model.set(\"disabled\", true);\n    },\n\n    /** Enable button */\n    enable: function enable() {\n        this.model.set(\"disabled\", false);\n    },\n\n    /** Show spinner to indicate that the button is not ready to be clicked */\n    wait: function wait() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner to indicate that the button is ready to be clicked */\n    unwait: function unwait() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Change icon */\n    setIcon: function setIcon(icon) {\n        this.model.set(\"icon\", icon);\n    }\n});\n\n/** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n/** This module contains all button views. */\nvar ButtonLink = ButtonDefault.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            title: \"\",\n            icon: \"\",\n            cls: \"\"\n        }).set(options);\n        this.setElement($(\"<a/>\").append(this.$icon = $(\"<span/>\")));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function render() {\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass(options.cls).attr({\n            id: options.id,\n            href: options.href || \"javascript:void(0)\",\n            title: options.title,\n            target: options.target || \"_top\",\n            disabled: options.disabled\n        }).tooltip({ placement: \"bottom\" }).off(\"click\").on(\"click\", function () {\n            options.onclick && !options.disabled && options.onclick();\n        });\n        this.$icon.removeClass().addClass(options.icon);\n    }\n});\n\n/** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\nvar ButtonCheck = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            title: \"Select/Unselect all\",\n            icons: [\"fa-square-o\", \"fa-minus-square-o\", \"fa-check-square-o\"],\n            value: 0,\n            onchange: function onchange() {}\n        }).set(options);\n        this.setElement($(\"<div/>\").append(this.$icon = $(\"<span/>\")).append(this.$title = $(\"<span/>\")));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function render(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.addClass(\"ui-button-check\").off(\"click\").on(\"click\", function () {\n            self.model.set(\"value\", self.model.get(\"value\") === 0 && 2 || 0);\n            options.onclick && options.onclick();\n        });\n        this.$title.html(options.title);\n        this.$icon.removeClass().addClass(\"icon fa ui-margin-right\").addClass(options.icons[options.value]);\n    },\n\n    /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n    value: function value(new_val, total) {\n        if (new_val !== undefined) {\n            if (total && new_val !== 0) {\n                new_val = new_val !== total && 1 || 2;\n            }\n            this.model.set(\"value\", new_val);\n            this.model.get(\"onchange\")(this.model.get(\"value\"));\n        }\n        return this.model.get(\"value\");\n    }\n});\n\n/** This renders a differently styled, more compact button version. */\nvar ButtonIcon = ButtonDefault.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            title: \"\",\n            icon: \"\",\n            cls: \"ui-button-icon\",\n            disabled: false\n        }).set(options);\n        this.setElement($(\"<div/>\").append(this.$button = $(\"<div/>\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\"))));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function render(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass(options.cls).addClass(options.disabled && \"disabled\").attr(\"disabled\", options.disabled).attr(\"id\", options.id).off(\"click\").on(\"click\", function () {\n            $(\".tooltip\").hide();\n            !options.disabled && options.onclick && options.onclick();\n        });\n        this.$button.addClass(\"button\").tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$icon.removeClass().addClass(\"icon fa\").addClass(options.icon);\n        this.$title.addClass(\"title\").html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n    }\n});\n\n/** This class creates a button with dropdown menu. */\nvar ButtonMenu = ButtonDefault.extend({\n    $menu: null,\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            id: \"\",\n            title: \"\",\n            pull: \"right\",\n            icon: null,\n            onclick: null,\n            cls: \"ui-button-icon ui-button-menu\",\n            tooltip: \"\",\n            target: \"\",\n            href: \"\",\n            onunload: null,\n            visible: true,\n            tag: \"\"\n        }).set(options);\n        this.collection = new Backbone.Collection();\n        this.setElement($(\"<div/>\").append(this.$root = $(\"<div/>\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\"))));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.listenTo(this.collection, \"change add remove reset\", this.render, this);\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.removeClass().addClass(\"dropdown\").addClass(options.cls).attr(\"id\", options.id).css({\n            display: options.visible && this.collection.where({ visible: true }).length > 0 ? \"block\" : \"none\"\n        });\n        this.$root.addClass(\"root button dropdown-toggle\").attr(\"data-toggle\", \"dropdown\").tooltip({ title: options.tooltip, placement: \"bottom\" }).off(\"click\").on(\"click\", function (e) {\n            $(\".tooltip\").hide();\n            e.preventDefault();\n            options.onclick && options.onclick();\n        });\n        this.$icon.removeClass().addClass(\"icon fa\").addClass(options.icon);\n        this.$title.removeClass().addClass(\"title\").html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        this.$menu && this.$menu.remove();\n        if (this.collection.length > 0) {\n            this.$menu = $(\"<ul/>\").addClass(\"menu dropdown-menu\").addClass(\"pull-\" + self.model.get(\"pull\")).attr(\"role\", \"menu\");\n            this.$el.append(this.$menu);\n        }\n        this.collection.each(function (submodel) {\n            var suboptions = submodel.attributes;\n            if (suboptions.visible) {\n                var $link = $(\"<a/>\").addClass(\"dropdown-item\").attr({\n                    href: suboptions.href,\n                    target: suboptions.target\n                }).append($(\"<i/>\").addClass(\"fa\").addClass(suboptions.icon).css(\"display\", suboptions.icon ? \"inline-block\" : \"none\")).append(suboptions.title).on(\"click\", function (e) {\n                    if (suboptions.onclick) {\n                        e.preventDefault();\n                        suboptions.onclick();\n                    }\n                });\n                self.$menu.append($(\"<li/>\").append($link));\n                suboptions.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n            }\n        });\n    },\n\n    /** Add a new menu item */\n    addMenu: function addMenu(options) {\n        this.collection.add(_utils2.default.merge(options, {\n            title: \"\",\n            target: \"\",\n            href: \"\",\n            onclick: null,\n            divider: false,\n            visible: true,\n            icon: null,\n            cls: \"button-menu btn-group\"\n        }));\n    }\n});\n\nexports.default = {\n    ButtonDefault: ButtonDefault,\n    ButtonLink: ButtonLink,\n    ButtonIcon: ButtonIcon,\n    ButtonCheck: ButtonCheck,\n    ButtonMenu: ButtonMenu\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 167:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar ToolShedModel = Backbone.Model.extend({\n    defaults: {\n        url: \"https://toolshed.g2.bx.psu.edu/\",\n        name: \"Galaxy Main Tool Shed\"\n    },\n    urlRoot: Galaxy.root + \"api/tool_shed\"\n});\n\nvar ToolShedsCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/tool_shed\",\n    model: ToolShedModel\n});\n\nvar ToolShedCategoriesModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: Galaxy.root + \"api/tool_shed/contents\"\n});\n\nvar ToolShedCategoriesCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/tool_shed/contents\",\n    model: ToolShedCategoriesModel\n});\n\nvar ToolShedCategoryModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: Galaxy.root + \"api/tool_shed/category\"\n});\n\nvar ToolShedCategoryCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/tool_shed/category\",\n    model: ToolShedCategoryModel\n});\n\nvar ToolShedRepositoryModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: Galaxy.root + \"api/tool_shed/repository\"\n});\n\nvar ToolShedRepositoryCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/tool_shed/repository\",\n    model: ToolShedRepositoryModel\n});\n\nvar RepoQueueModel = Backbone.Model.extend({\n    url: \"#\"\n});\n\nvar RepoQueueCollection = Backbone.Collection.extend({\n    url: \"#\",\n    model: RepoQueueModel,\n    fetch: function fetch() {\n        var collection = this;\n        var repositories = Array();\n        var repositories_enc = JSON.parse(localStorage.repositories);\n        var queue_keys = Object.keys(repositories_enc);\n        _.each(queue_keys, function (key) {\n            var repo = repositories_enc[key];\n            repo.queue_key = key;\n            repositories.push(repo);\n        });\n        collection.reset(repositories);\n        return Backbone.Collection.prototype.fetch.call(this);\n    }\n});\n\nvar RepoStatusModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: Galaxy.root + \"api/tool_shed/status\"\n});\n\nvar RepoStatusCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/tool_shed/status\",\n    model: RepoStatusModel\n});\n\nvar WorkflowToolsModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: Galaxy.root + \"api/workflows?missing_tools=True\"\n});\n\nvar WorkflowToolsCollection = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/workflows?missing_tools=True\",\n    model: WorkflowToolsModel\n});\n\nexports.default = {\n    ShedModel: ToolShedModel,\n    ShedsCollection: ToolShedsCollection,\n    Category: ToolShedCategoriesModel,\n    Categories: ToolShedCategoriesCollection,\n    CategoryModel: ToolShedCategoryModel,\n    CategoryCollection: ToolShedCategoryCollection,\n    RepositoryModel: ToolShedRepositoryModel,\n    RepositoryCollection: ToolShedRepositoryCollection,\n    RepoQueue: RepoQueueCollection,\n    RepoStatus: RepoStatusCollection,\n    WorkflowTools: WorkflowToolsCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 168:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar searchShed = function searchShed(request, response) {\n    var that = this;\n    var shed_url = this.shed_url;\n    var base_url = Galaxy.root + \"api/tool_shed/search\";\n    $.get(base_url, { term: request.term, tool_shed_url: shed_url }, function (data) {\n        var result_list = that.shedParser(data);\n        response(result_list);\n    });\n};\n\nvar shedParser = function shedParser(jsondata) {\n    var results = [];\n    var hits = jsondata.hits;\n    $.each(hits, function (hit) {\n        var record = hits[hit];\n        var label = record.repository.name + \" by \" + record.repository.repo_owner_username + \": \" + record.repository.description;\n        var result = { value: record.repository.id, label: label };\n        results.push(result);\n    });\n    return results;\n};\n\nvar addToQueue = function addToQueue(metadata) {\n    if (metadata.tool_shed_url.substr(-1) == \"/\") {\n        metadata.tool_shed_url = metadata.tool_shed_url.substr(0, metadata.tool_shed_url.length - 1);\n    }\n    var key = metadata.tool_shed_url + \"|\" + metadata.repository_id + \"|\" + metadata.changeset_revision;\n    var queued_repos = new Object();\n    if (localStorage.repositories) {\n        queued_repos = JSON.parse(localStorage.repositories);\n    }\n    queued_repos[key] = metadata;\n    localStorage.repositories = JSON.stringify(queued_repos);\n};\n\nvar queueLength = function queueLength() {\n    if (localStorage.hasOwnProperty(\"repositories\")) {\n        var repo_queue = JSON.parse(localStorage.repositories);\n        var queue_length = Object.keys(repo_queue).length;\n        return queue_length;\n    } else {\n        return 0;\n    }\n};\n\nexports.default = {\n    searchShed: searchShed,\n    shedParser: shedParser,\n    addToQueue: addToQueue,\n    queueLength: queueLength\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*globals jQuery, define, exports, require, window, document */\n(function (factory) {\n\t\"use strict\";\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n}(function ($, undefined) {\n\t\"use strict\";\n/*!\n * jsTree 3.0.3\n * http://jstree.com/\n *\n * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n *\n * Licensed same as jquery - under the terms of the MIT License\n *   http://www.opensource.org/licenses/mit-license.php\n */\n/*!\n * if using jslint please allow for the jQuery global and use following options: \n * jslint: browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true\n */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\t_d = document, _node = _d.createElement('LI'), _temp1, _temp2;\n\n\t_node.setAttribute('role', 'treeitem');\n\t_temp1 = _d.createElement('I');\n\t_temp1.className = 'jstree-icon jstree-ocl';\n\t_node.appendChild(_temp1);\n\t_temp1 = _d.createElement('A');\n\t_temp1.className = 'jstree-anchor';\n\t_temp1.setAttribute('href','#');\n\t_temp2 = _d.createElement('I');\n\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t_temp1.appendChild(_temp2);\n\t_node.appendChild(_temp1);\n\t_temp1 = _temp2 = null;\n\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/** \n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '3.0.3',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%]/g\n\t};\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\tvar tmp = new $.jstree.core(++instance_counter),\n\t\t\topt = options;\n\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\tif(opt && opt.plugins) {\n\t\t\toptions.plugins = opt.plugins;\n\t\t}\n\t\t$.each(options.plugins, function (i, k) {\n\t\t\tif(i !== 'core') {\n\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t}\n\t\t});\n\t\ttmp.init(el, options);\n\t\treturn tmp;\n\t};\n\t/**\n\t * the jstree class constructor, used only internally\n\t * @private\n\t * @name $.jstree.core(id)\n\t * @param {Number} id this instance's index\n\t */\n\t$.jstree.core = function (id) {\n\t\tthis._id = id;\n\t\tthis._cnt = 0;\n\t\tthis._wrk = null;\n\t\tthis._data = {\n\t\t\tcore : {\n\t\t\t\tthemes : {\n\t\t\t\t\tname : false,\n\t\t\t\t\tdots : false,\n\t\t\t\t\ticons : false\n\t\t\t\t},\n\t\t\t\tselected : [],\n\t\t\t\tlast_error : {},\n\t\t\t\tworking : false,\n\t\t\t\tworker_queue : []\n\t\t\t}\n\t\t};\n\t};\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance. \n\t * \n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t * \n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t * \n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t * \n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$(this).data('jstree', new $.jstree.create(this, arg));\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\t/**\n\t * used to find elements containing an instance\n\t *\n\t * __Examples__\n\t *\n\t *\t$('div:jstree').each(function () {\n\t *\t\t$(this).jstree('destroy');\n\t *\t});\n\t *\n\t * @name $(':jstree')\n\t * @return {jQuery}\n\t */\n\t$.expr[':'].jstree = $.expr.createPseudo(function(search) {\n\t\treturn function(a) {\n\t\t\treturn $(a).hasClass('jstree') &&\n\t\t\t\t$(a).data('jstree') !== undefined;\n\t\t};\n\t});\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t * \n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t * \n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree. \n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t * \n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t});\n\t\t *\t\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false\n\t};\n\t$.jstree.core.prototype = {\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._model = {\n\t\t\t\tdata : {\n\t\t\t\t\t'#' : {\n\t\t\t\t\t\tid : '#',\n\t\t\t\t\t\tparent : null,\n\t\t\t\t\t\tparents : [],\n\t\t\t\t\t\tchildren : [],\n\t\t\t\t\t\tchildren_d : [],\n\t\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.element = $(el).addClass('jstree jstree-' + this._id);\n\t\t\tthis.settings = options;\n\t\t\tthis.element.bind(\"destroyed\", $.proxy(this.teardown, this));\n\n\t\t\tthis._data.core.ready = false;\n\t\t\tthis._data.core.loaded = false;\n\t\t\tthis._data.core.rtl = (this.element.css(\"direction\") === \"rtl\");\n\t\t\tthis.element[this._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\tthis.element.attr('role','tree');\n\n\t\t\tthis.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"init\");\n\n\t\t\tthis._data.core.original_container_html = this.element.find(\" > ul > li\").clone(true);\n\t\t\tthis._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\tthis.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\tthis._data.core.li_height = this.get_container_ul().children(\"li:eq(0)\").height() || 24;\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"loading\");\n\t\t\tthis.load_node('#');\n\t\t},\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.element.unbind(\"destroyed\", this.teardown);\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function () {\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$(e.currentTarget).focus();\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName === \"INPUT\") { return true; }\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"click\";\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// delete\n\t\t\t\t\t\t\tcase 46:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\to = this.is_selected(o) ? this.get_selected() : o;\n\t\t\t\t\t\t\t\t\t// this.delete_node(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// f2\n\t\t\t\t\t\t\tcase 113:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\t// this.edit(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === '#' && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready && !this.get_container_ul().find('.jstree-loading:eq(0)').length) {\n\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function () { this.trigger(\"ready\"); }, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.triggerHandler(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children:eq(0)\");\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(((dom = $(obj, this.element)).length || (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length) && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data['#'];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === '#' ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#' || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._nextSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._nextSibling(obj[0])) !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").next(\".jstree-node\").eq(0);\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._previousSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._previousSibling(obj[0])) !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children:eq(0)\").children(\".jstree-node:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered)\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove_item(this._model.data[obj.parents[i]].children_d, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\");\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tvar dom = this.get_node(obj, true);\n\t\t\t\tif(obj.state.loaded && !obj.children.length && dom && dom.length && !dom.hasClass('jstree-leaf')) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open').addClass('jstree-leaf');\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\");\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && (!m[nodes[i]].state.loaded || !is_callback)) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, nodes);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === '#' ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif(type.indexOf('json') !== -1 || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(type.indexOf('html') !== -1 || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $(d), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tt = ($.isArray(s) || $.isPlainObject(s)) ? JSON.parse(JSON.stringify(s)) : s;\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, $(s), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== '#') {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn rslt;\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar i, j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice(), m = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== '#') {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString().replace(/return ([^;}]+)[\\s;}]+$/, 'postMessage($1);}')],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(!this._data.core.working) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').eq(0);\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a:eq(0)\").length ? d.children(\"a:eq(0)\").clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data['#'].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === '#') {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== '#' ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m['#'].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\ts = node.attr('aria-selected');\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = _node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s && s !== \"false\") {\n\t\t\t\tnode.setAttribute('aria-selected', true);\n\t\t\t}\n\t\t\tif(obj.state.loaded && !obj.children.length) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent].children[m[obj.parent].children.length - 1] === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url('+obj.icon+')';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\t\t\tif(deep && obj.children.length && obj.state.opened && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tobj.state.opened = true;\n\t\t\t\t\t\tthis.redraw_node(obj, true);\n\t\t\t\t\t\td = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== '#') {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\t\t\tif(d.length) {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!animation || !d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t\t}\n\t\t\t\treturn this.trigger('close_all', { \"node\" : obj });\n\t\t\t}\n\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c || p[i] === o || p[i] === l) {\n\t\t\t\t\t\t\tthis.select_node(p[i], false, false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); obj.attr('aria-selected', true); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== '#') {\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this;\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open)) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres = true;\n\t\t\t\t\t\tn = false;\n\t\t\t\t\t\tt = this;\n\t\t\t\t\t\t$.each(state.core.open.concat([]), function (i, v) {\n\t\t\t\t\t\t\tn = t.get_node(v);\n\t\t\t\t\t\t\tif(n) {\n\t\t\t\t\t\t\t\tif(t.is_loaded(v)) {\n\t\t\t\t\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, false, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, v);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(!t.is_loading(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, $.proxy(function (o, s) {\n\t\t\t\t\t\t\t\t\t\t\tif(!s && state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, o.id);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t\t\t\t}, t), 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// there will be some async activity - so wait for it\n\t\t\t\t\t\t\t\t\tres = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(res) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t/*!\n\t\t\t\t\tif(state.core.themes) {\n\t\t\t\t\t\tif(state.core.themes.name) {\n\t\t\t\t\t\t\tthis.set_theme(state.core.themes.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.dots !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.icons !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.themes;\n\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t_this.select_node(v);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {\n\t\t\t\t'#' : {\n\t\t\t\t\tid : '#',\n\t\t\t\t\tparent : null,\n\t\t\t\t\tparents : [],\n\t\t\t\t\tchildren : [],\n\t\t\t\t\tchildren_d : [],\n\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t}\n\t\t\tthis.load_node('#', function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(this._data.core.selected);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar i, j, m = this._model.data;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id);\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tm[id] = obj;\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || '#');\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : obj.li_attr,\n\t\t\t\t'a_attr' : obj.a_attr,\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : obj.data\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== '#') {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === '#' ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([obj, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = \"#\"; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tpos = $.inArray(tmp[k], this._model.data[obj.parents[i]].children_d);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove(this._model.data[obj.parents[i]].children_d, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tpos = $.inArray(tmp[k], this._data.core.selected);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove(this._data.core.selected, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || $.inArray(obj.id, par.children) === pos || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.move_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(is_multi) {\n\t\t\t\tif(this.copy_node(obj, par, pos, callback, is_loaded)) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === '#');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tthis._node_changed(old_par);\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(old_par === '#' || new_par.id === '#');\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.copy_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tthis._node_changed(new_par.id);\n\t\t\tthis.redraw(new_par.id === '#');\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstre\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted the node text value is used)\n\t\t */\n\t\tedit : function (obj, default_text) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(this.settings.core.check_callback === false) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Could not edit node because of check_callback' };\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\n\t\t\tvar rtl = this._data.core.rtl,\n\t\t\t\tw  = this.element.width(),\n\t\t\t\ta  = obj.children('.jstree-anchor'),\n\t\t\t\ts  = $('<span>'),\n\t\t\t\t/*!\n\t\t\t\toi = obj.children(\"i:visible\"),\n\t\t\t\tai = a.children(\"i:visible\"),\n\t\t\t\tw1 = oi.width() * oi.length,\n\t\t\t\tw2 = ai.width() * ai.length,\n\t\t\t\t*/\n\t\t\t\tt  = default_text,\n\t\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(\"body\"),\n\t\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function () {\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val();\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tif(this.rename_node(obj, $('<div></div>').text(v)[this.settings.core.force_text ? 'text' : 'html']()) === false) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (event) {\n\t\t\t\t\t\t\tvar key = event.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (event) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(event) {\n\t\t\t\t\t\t\tif(event.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () { this._data.core.themes.stripes = true; this.get_container_ul().addClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () { this._data.core.themes.stripes = false; this.get_container_ul().removeClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () { this._data.core.themes.dots = true; this.get_container_ul().removeClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () { this._data.core.themes.dots = false; this.get_container_ul().addClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () { this._data.core.themes.icons = true; this.get_container_ul().removeClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () { this._data.core.themes.icons = false; this.get_container_ul().addClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// helpers\n\t$.vakata = {};\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.nodeName.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.nodeValue !== null && $.trim(v.nodeValue) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.nodeName] = v.nodeValue; }\n\t\t\t\t\telse { attr.push(v.nodeName); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l;\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tfor(j = 0; j <= i; j++) {\n\t\t\t\tif(array[i] === array[j]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === i) { a.push(array[i]); }\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from, to) {\n\t\tvar rest = array.slice((to || from) + 1 || array.length);\n\t\tarray.length = from < 0 ? array.length + from : from;\n\t\tarray.push.apply(array, rest);\n\t\treturn array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\n/**\n * ### Checkbox plugin\n *\n * This plugin renders checkbox icons in front of each node, making multiple selection much easier. \n * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.\n */\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied. \n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used. \n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing. \n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}, this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node('#'),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(obj && obj.original && obj.original.state && obj.original.state.undetermined) {\n\t\t\t\t\t\t\t\tobj.original.state.undetermined = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t\t\tfor(i = 0, j = this._data[ t ? 'core' : 'checkbox' ].selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t// apply down + apply up\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t(s.indexOf('down') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.children_d) === -1) &&\n\t\t\t\t\t\t\t\t\t(s.indexOf('up') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.parents) === -1)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttmp.push(this._data[ t ? 'core' : 'checkbox' ].selected[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(tmp);\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tvar i, j, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this;\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tp = p.concat(m[s[i]].parents);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\tp = p.concat(tmp.parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\tp = p.concat(tmp2.parents);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tp = $.vakata.array_unique(p);\n\t\t\tp = $.vakata.array_remove_item(p,'#');\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\t\tif(s && s.length) {\n\t\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, is_callback);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ttmp.insertBefore(_i.cloneNode(false), tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name deselect_node(obj)\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n\n/**\n * ### Contextmenu plugin\n *\n * Shows a context menu when a node is right-clicked.\n */\n// TODO: move logic outside of function + check multiple move\n\n\t/**\n\t * stores all defaults for the contextmenu plugin\n\t * @name $.jstree.defaults.contextmenu\n\t * @plugin contextmenu\n\t */\n\t$.jstree.defaults.contextmenu = {\n\t\t/**\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\n\t\t * @name $.jstree.defaults.contextmenu.select_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tselect_node : true,\n\t\t/**\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tshow_at_node : true,\n\t\t/**\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\n\t\t * \n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required):\n\t\t * \n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\n\t\t * * `action` - a function to be executed if this item is chosen\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\n\t\t * \n\t\t * @name $.jstree.defaults.contextmenu.items\n\t\t * @plugin contextmenu\n\t\t */\n\t\titems : function (o, cb) { // Could be an object directly\n\t\t\treturn {\n\t\t\t\t\"create\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: true,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"rename\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\n\t\t\t\t\t/*\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\n\t\t\t\t\t*/\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"remove\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"ccp\" : {\n\t\t\t\t\t\"separator_before\"\t: true,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\n\t\t\t\t\t\"action\"\t\t\t: false,\n\t\t\t\t\t\"submenu\" : {\n\t\t\t\t\t\t\"cut\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"copy\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"paste\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t$.jstree.plugins.contextmenu = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tvar last_ts = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? e.timeStamp : 0;\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || e.timeStamp - last_ts > 250)) { // work around safari & macOS ctrl+click\n\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t/*\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\n\t\t\t\tvar el = null, tm = null;\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tel = e.currentTarget;\n\t\t\t\t\t\ttm = +new Date();\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\n\t\t\t\t\t\t\te.currentTarget = e.target;\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tel = null;\n\t\t\t\t\t\t\ttm = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\t$(document).on(\"context_hide.vakata\", $.proxy(function () { this._data.contextmenu.visible = false; }, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this._data.contextmenu.visible) {\n\t\t\t\t$.vakata.context.hide();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\n\t\t/**\n\t\t * prepare and show the context menu for a node\n\t\t * @name show_contextmenu(obj [, x, y])\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Object} e the event if available that triggered the contextmenu\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t */\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar s = this.settings.contextmenu,\n\t\t\t\td = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\"),\n\t\t\t\to = false,\n\t\t\t\ti = false;\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\n\t\t\t\to = a.offset();\n\t\t\t\tx = o.left;\n\t\t\t\ty = o.top + this._data.core.li_height;\n\t\t\t}\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n\t\t\t\tthis.activate_node(obj, e);\n\t\t\t}\n\n\t\t\ti = s.items;\n\t\t\tif($.isFunction(i)) {\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif($.isPlainObject(i)) {\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * show the prepared context menu for a node\n\t\t * @name _show_contextmenu(obj, x, y, i)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Number} i the object of items to show\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t * @private\n\t\t */\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\n\t\t\tvar d = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\");\n\t\t\t$(document).one(\"context_show.vakata\", $.proxy(function (e, data) {\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n\t\t\t\t$(data.element).addClass(cls);\n\t\t\t}, this));\n\t\t\tthis._data.contextmenu.visible = true;\n\t\t\t$.vakata.context.show(a, { 'x' : x, 'y' : y }, i);\n\t\t\t/**\n\t\t\t * triggered when the contextmenu is shown for a node\n\t\t\t * @event\n\t\t\t * @name show_contextmenu.jstree\n\t\t\t * @param {Object} node the node\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\n\t\t\t * @plugin contextmenu\n\t\t\t */\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\n\t\t};\n\t};\n\n\t// contextmenu helper\n\t(function ($) {\n\t\tvar right_to_left = false,\n\t\t\tvakata_context = {\n\t\t\t\telement\t\t: false,\n\t\t\t\treference\t: false,\n\t\t\t\tposition_x\t: 0,\n\t\t\t\tposition_y\t: 0,\n\t\t\t\titems\t\t: [],\n\t\t\t\thtml\t\t: \"\",\n\t\t\t\tis_visible\t: false\n\t\t\t};\n\n\t\t$.vakata.context = {\n\t\t\tsettings : {\n\t\t\t\thide_onmouseleave\t: 0,\n\t\t\t\ticons\t\t\t\t: true\n\t\t\t},\n\t\t\t_trigger : function (event_name) {\n\t\t\t\t$(document).triggerHandler(\"context_\" + event_name + \".vakata\", {\n\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t_execute : function (i) {\n\t\t\t\ti = vakata_context.items[i];\n\t\t\t\treturn i && (!i._disabled || ($.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }))) && i.action ? i.action.call(null, {\n\t\t\t\t\t\t\t\"item\"\t\t: i,\n\t\t\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) : false;\n\t\t\t},\n\t\t\t_parse : function (o, is_callback) {\n\t\t\t\tif(!o) { return false; }\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tvakata_context.html\t\t= \"\";\n\t\t\t\t\tvakata_context.items\t= [];\n\t\t\t\t}\n\t\t\t\tvar str = \"\",\n\t\t\t\t\tsep = false,\n\t\t\t\t\ttmp;\n\n\t\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\n\t\t\t\t$.each(o, function (i, val) {\n\t\t\t\t\tif(!val) { return true; }\n\t\t\t\t\tvakata_context.items.push(val);\n\t\t\t\t\tif(!sep && val.separator_before) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t}\n\t\t\t\t\tsep = false;\n\t\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || ($.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\n\t\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (vakata_context.items.length - 1) + \"'>\";\n\t\t\t\t\tif($.vakata.context.settings.icons) {\n\t\t\t\t\t\tstr += \"<\"+\"i \";\n\t\t\t\t\t\tif(val.icon) {\n\t\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\n\t\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += ($.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\n\t\t\t\t\tif(val.submenu) {\n\t\t\t\t\t\ttmp = $.vakata.context._parse(val.submenu, true);\n\t\t\t\t\t\tif(tmp) { str += tmp; }\n\t\t\t\t\t}\n\t\t\t\t\tstr += \"<\"+\"/li>\";\n\t\t\t\t\tif(val.separator_after) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\n\t\t\t\tif(is_callback) { str += \"</ul>\"; }\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_parse.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tif(!is_callback) { vakata_context.html = str; $.vakata.context._trigger(\"parse\"); }\n\t\t\t\treturn str.length > 10 ? str : false;\n\t\t\t},\n\t\t\t_show_submenu : function (o) {\n\t\t\t\to = $(o);\n\t\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\n\t\t\t\tvar e = o.children(\"ul\"),\n\t\t\t\t\tx = o.offset().left + o.outerWidth(),\n\t\t\t\t\ty = o.offset().top,\n\t\t\t\t\tw = e.width(),\n\t\t\t\t\th = e.height(),\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to[x + w + 10 > dw ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\n\t\t\t\t}\n\t\t\t\tif(y + h + 10 > dh) {\n\t\t\t\t\te.css(\"bottom\",\"-1px\");\n\t\t\t\t}\n\t\t\t\te.show();\n\t\t\t},\n\t\t\tshow : function (reference, position, data) {\n\t\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\n\t\t\t\tif(vakata_context.element && vakata_context.element.length) {\n\t\t\t\t\tvakata_context.element.width('');\n\t\t\t\t}\n\t\t\t\tswitch(cond) {\n\t\t\t\t\tcase (!position && !reference):\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase (!!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\to = reference.offset();\n\t\t\t\t\t\tvakata_context.position_x\t= o.left + reference.outerHeight();\n\t\t\t\t\t\tvakata_context.position_y\t= o.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!!position && !reference):\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\n\t\t\t\t\tdata = $(reference).data('vakata_contextmenu');\n\t\t\t\t}\n\t\t\t\tif($.vakata.context._parse(data)) {\n\t\t\t\t\tvakata_context.element.html(vakata_context.html);\n\t\t\t\t}\n\t\t\t\tif(vakata_context.items.length) {\n\t\t\t\t\te = vakata_context.element;\n\t\t\t\t\tx = vakata_context.position_x;\n\t\t\t\t\ty = vakata_context.position_y;\n\t\t\t\t\tw = e.width();\n\t\t\t\t\th = e.height();\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tx -= e.outerWidth();\n\t\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\n\t\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(x + w + 20 > dw) {\n\t\t\t\t\t\tx = dw - (w + 20);\n\t\t\t\t\t}\n\t\t\t\t\tif(y + h + 20 > dh) {\n\t\t\t\t\t\ty = dh - (h + 20);\n\t\t\t\t\t}\n\n\t\t\t\t\tvakata_context.element\n\t\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\n\t\t\t\t\t\t.show()\n\t\t\t\t\t\t.find('a:eq(0)').focus().parent().addClass(\"vakata-context-hover\");\n\t\t\t\t\tvakata_context.is_visible = true;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is shown\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_show.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"show\");\n\t\t\t\t}\n\t\t\t},\n\t\t\thide : function () {\n\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\tvakata_context.element.hide().find(\"ul\").hide().end().find(':focus').blur();\n\t\t\t\t\tvakata_context.is_visible = false;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is hidden\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_hide.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"hide\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t$(function () {\n\t\t\tright_to_left = $(\"body\").css(\"direction\") === \"rtl\";\n\t\t\tvar to = false;\n\n\t\t\tvakata_context.element = $(\"<ul class='vakata-context'></ul>\");\n\t\t\tvakata_context.element\n\t\t\t\t.on(\"mouseenter\", \"li\", function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) {\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\n\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\n\t\t\t\t\t$.vakata.context._show_submenu(this);\n\t\t\t\t})\n\t\t\t\t// тестово - дали не натоварва?\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) { return; }\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseleave\", function (e) {\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\tif($.vakata.context.settings.hide_onmouseleave) {\n\t\t\t\t\t\tto = setTimeout(\n\t\t\t\t\t\t\t(function (t) {\n\t\t\t\t\t\t\t\treturn function () { $.vakata.context.hide(); };\n\t\t\t\t\t\t\t}(this)), $.vakata.context.settings.hide_onmouseleave);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"click\", \"a\", function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t//})\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && $.vakata.context._execute($(this).attr(\"rel\")) !== false) {\n\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown', 'a', function (e) {\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"mouseup\";\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().parents(\"li:eq(0)\").find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('keydown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar a = vakata_context.element.find('.vakata-contextmenu-shortcut-' + e.which).parent();\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\n\t\t\t\t\t\ta.mouseup();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.appendTo(\"body\");\n\n\t\t\t$(document)\n\t\t\t\t.on(\"mousedown\", function (e) {\n\t\t\t\t\tif(vakata_context.is_visible && !$.contains(vakata_context.element[0], e.target)) { $.vakata.context.hide(); }\n\t\t\t\t})\n\t\t\t\t.on(\"context_show.vakata\", function (e, data) {\n\t\t\t\t\tvakata_context.element.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tvakata_context.element.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\n\t\t\t\t\t}\n\t\t\t\t\t// also apply a RTL class?\n\t\t\t\t\tvakata_context.element.find(\"ul\").hide().end();\n\t\t\t\t});\n\t\t});\n\t}($));\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\n\n/**\n * ### Drag'n'drop plugin\n *\n * Enables dragging and dropping of nodes in the tree, resulting in a move or copy operations.\n */\n\n\t/**\n\t * stores all defaults for the drag'n'drop plugin\n\t * @name $.jstree.defaults.dnd\n\t * @plugin dnd\n\t */\n\t$.jstree.defaults.dnd = {\n\t\t/**\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\n\t\t * @name $.jstree.defaults.dnd.copy\n\t\t * @plugin dnd\n\t\t */\n\t\tcopy : true,\n\t\t/**\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\n\t\t * @name $.jstree.defaults.dnd.open_timeout\n\t\t * @plugin dnd\n\t\t */\n\t\topen_timeout : 500,\n\t\t/**\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) - return `false` to prevent dragging\n\t\t * @name $.jstree.defaults.dnd.is_draggable\n\t\t * @plugin dnd\n\t\t */\n\t\tis_draggable : true,\n\t\t/**\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\n\t\t * @plugin dnd\n\t\t */\n\t\tcheck_while_dragging : true,\n\t\t/**\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\n\t\t * @name $.jstree.defaults.dnd.always_copy\n\t\t * @plugin dnd\n\t\t */\n\t\talways_copy : false,\n\t\t/**\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\n\t\t * @name $.jstree.defaults.dnd.inside_pos\n\t\t * @plugin dnd\n\t\t */\n\t\tinside_pos : 0\n\t};\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\n\t// TODO: drop somewhere else - maybe demo only?\n\t$.jstree.plugins.dnd = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('mousedown.jstree touchstart.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\tvar obj = this.get_node(e.target),\n\t\t\t\t\t\tmlt = this.is_selected(obj) ? this.get_selected().length : 1;\n\t\t\t\t\tif(obj && obj.id && obj.id !== \"#\" && (e.which === 1 || e.type === \"touchstart\") &&\n\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_selected(true) : [obj]))))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\n\t\t\t\t\t\treturn $.vakata.dnd.start(e, { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_selected() : [obj.id] }, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget, true)) + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t};\n\t};\n\n\t$(function() {\n\t\t// bind only once for all instances\n\t\tvar lastmv = false,\n\t\t\tlaster = false,\n\t\t\topento = false,\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide().appendTo('body');\n\n\t\t$(document)\n\t\t\t.bind('dnd_start.vakata', function (e, data) {\n\t\t\t\tlastmv = false;\n\t\t\t})\n\t\t\t.bind('dnd_move.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\n\t\t\t\t\tref = false,\n\t\t\t\t\toff = false,\n\t\t\t\t\trel = false,\n\t\t\t\t\tl, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm;\n\t\t\t\t// if we are over an instance\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\n\t\t\t\t\tdata.helper\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\n\t\t\t\t\t\t.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'show' : 'hide' ]();\n\n\n\t\t\t\t\t// if are hovering the container itself add a new root node\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), '#', 'last', { 'dnd' : true, 'ref' : ins.get_node('#'), 'pos' : 'i', 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\n\t\t\t\t\t\t\tif(!ok) { break; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : '#', 'pos' : 'last' };\n\t\t\t\t\t\t\tmarker.hide();\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if we are hovering a tree node\n\t\t\t\t\t\tref = $(data.event.target).closest('.jstree-anchor');\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\n\t\t\t\t\t\t\toff = ref.offset();\n\t\t\t\t\t\t\trel = data.event.pageY - off.top;\n\t\t\t\t\t\t\th = ref.height();\n\t\t\t\t\t\t\tif(rel < h / 3) {\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\n\t\t\t\t\t\t\t\tswitch(v) {\n\t\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\t// TODO: moving inside, but the node is not yet loaded?\n\t\t\t\t\t\t\t\t// the check will work anyway, as when moving the node will be loaded first and checked again\n\t\t\t\t\t\t\t\tif(v === 'i' && !ins.is_loaded(p)) { }\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\n\t\t\t\t\t\t\t\t\tps = i;\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\n\t\t\t\t\t\t\t\t\tif(!ok) {\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\t\t\tlaster = {};\n\t\t\t\t\t\t\t\t\to = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(o === true) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t\tmarker.hide();\n\t\t\t})\n\t\t\t.bind('dnd_scroll.vakata', function (e, data) {\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t})\n\t\t\t.bind('dnd_stop.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tvar i, j, nodes = [];\n\t\t\t\tif(lastmv) {\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\n\t\t\t\t\t\tif(data.data.origin) {\n\t\t\t\t\t\t\tnodes[i].instance = data.data.origin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\n\t\t\t\t\t\ti = i.jstree(true);\n\t\t\t\t\t\tif(i) {\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.bind('keyup keydown', function (e, data) {\n\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\tif(data && data.data && data.data.jstree) {\n\t\t\t\t\tdata.helper.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\t// helpers\n\t(function ($) {\n\t\t// private variable\n\t\tvar vakata_dnd = {\n\t\t\telement\t: false,\n\t\t\ttarget\t: false,\n\t\t\tis_down\t: false,\n\t\t\tis_drag\t: false,\n\t\t\thelper\t: false,\n\t\t\thelper_w: 0,\n\t\t\tdata\t: false,\n\t\t\tinit_x\t: 0,\n\t\t\tinit_y\t: 0,\n\t\t\tscroll_l: 0,\n\t\t\tscroll_t: 0,\n\t\t\tscroll_e: false,\n\t\t\tscroll_i: false,\n\t\t\tis_touch: false\n\t\t};\n\t\t$.vakata.dnd = {\n\t\t\tsettings : {\n\t\t\t\tscroll_speed\t\t: 10,\n\t\t\t\tscroll_proximity\t: 20,\n\t\t\t\thelper_left\t\t\t: 5,\n\t\t\t\thelper_top\t\t\t: 10,\n\t\t\t\tthreshold\t\t\t: 5,\n\t\t\t\tthreshold_touch\t\t: 50\n\t\t\t},\n\t\t\t_trigger : function (event_name, e) {\n\t\t\t\tvar data = $.vakata.dnd._get();\n\t\t\t\tdata.event = e;\n\t\t\t\t$(document).triggerHandler(\"dnd_\" + event_name + \".vakata\", data);\n\t\t\t},\n\t\t\t_get : function () {\n\t\t\t\treturn {\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\n\t\t\t\t};\n\t\t\t},\n\t\t\t_clean : function () {\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\tvakata_dnd = {\n\t\t\t\t\telement\t: false,\n\t\t\t\t\ttarget\t: false,\n\t\t\t\t\tis_down\t: false,\n\t\t\t\t\tis_drag\t: false,\n\t\t\t\t\thelper\t: false,\n\t\t\t\t\thelper_w: 0,\n\t\t\t\t\tdata\t: false,\n\t\t\t\t\tinit_x\t: 0,\n\t\t\t\t\tinit_y\t: 0,\n\t\t\t\t\tscroll_l: 0,\n\t\t\t\t\tscroll_t: 0,\n\t\t\t\t\tscroll_e: false,\n\t\t\t\t\tscroll_i: false,\n\t\t\t\t\tis_touch: false\n\t\t\t\t};\n\t\t\t\t$(document).off(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).off(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t},\n\t\t\t_scroll : function (init_only) {\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.scroll_i) {\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(init_only === true) { return false; }\n\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_scroll.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tstart : function (e, data, html) {\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\n\t\t\t\ttry {\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\n\t\t\t\t\tif(e.currentTarget.style) { e.currentTarget.style.MozUserSelect = \"none\"; }\n\t\t\t\t} catch(ignore) { }\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\n\t\t\t\tvakata_dnd.data\t\t= data;\n\t\t\t\tvakata_dnd.is_down\t= true;\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\n\t\t\t\tvakata_dnd.target\t= e.target;\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\n\t\t\t\tif(html !== false) {\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(document).bind(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).bind(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdrag : function (e) {\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\n\t\t\t\tif(!vakata_dnd.is_drag) {\n\t\t\t\t\tif(\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(\"body\");\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered on the document when a drag starts\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t\t * @name dnd_start.vakata\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\n\t\t\t\t\t}\n\t\t\t\t\telse { return; }\n\t\t\t\t}\n\n\t\t\t\tvar d  = false, w  = false,\n\t\t\t\t\tdh = false, wh = false,\n\t\t\t\t\tdw = false, ww = false,\n\t\t\t\t\tdt = false, dl = false,\n\t\t\t\t\tht = false, hl = false;\n\n\t\t\t\tvakata_dnd.scroll_t = 0;\n\t\t\t\tvakata_dnd.scroll_l = 0;\n\t\t\t\tvakata_dnd.scroll_e = false;\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\n\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\n\t\t\t\t\t})\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tif(!vakata_dnd.scroll_e) {\n\t\t\t\t\td  = $(document); w = $(window);\n\t\t\t\t\tdh = d.height(); wh = w.height();\n\t\t\t\t\tdw = d.width(); ww = w.width();\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\n\n\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\n\t\t\t\t\tvakata_dnd.helper.css({\n\t\t\t\t\t\tleft\t: hl + \"px\",\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when a drag is in progress\n\t\t\t\t * @event\n\t\t\t\t * @plugin dnd\n\t\t\t\t * @name dnd_move.vakata\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\n\t\t\t\t */\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstop : function (e) {\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_stop.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {Object} event the event that caused the stop\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}($));\n\n\t// include the dnd plugin by default\n\t// $.jstree.defaults.plugins.push(\"dnd\");\n\n\n/**\n * ### Search plugin\n *\n * Adds search functionality to jsTree.\n */\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results. \n\t\t * \n\t\t * A `str` (which is the search string) parameter will be added with the request. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 2 parameters - the search string and the callback to call with the array of nodes to load.\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers). Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tthis.element.on('before_open.jstree', $.proxy(function (e, data) {\n\t\t\t\tvar i, j, f, r = this._data.search.res, s = [], o = $();\n\t\t\t\tif(r && r.length) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t\t\tif(this.settings.search.show_only_matches && this._data.search.res.length) {\n\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\ts = s.concat(this.get_node(r[i]).parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = $.vakata.array_remove_item($.vakata.array_unique(s),'#');\n\t\t\t\t\t\to = s.length ? $(this.element[0].querySelectorAll('#' + $.map(s, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))) : $();\n\n\t\t\t\t\t\tthis.element.find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\to = o.add(this._data.search.dom);\n\t\t\t\t\t\to.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif(this.settings.search.show_only_matches) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t\tdata.nodes.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"clear_search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").css(\"display\",\"\").filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async) {\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.isFunction(a)) {\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\treturn $.ajax(a)\n\t\t\t\t\t\t.fail($.proxy(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.done($.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.search.str = str;\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\n\t\t\t$.each(this._model.data, function (i, v) {\n\t\t\t\tif(v.text && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tthis._search_open(p);\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\tthis._data.search.res = r;\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\t\t/**\n\t\t * opens nodes that need to be opened to reveal the search results. Used only internally.\n\t\t * @private\n\t\t * @name _search_open(d)\n\t\t * @param {Array} d an array of node IDs\n\t\t * @plugin search\n\t\t */\n\t\tthis._search_open = function (d) {\n\t\t\tvar t = this;\n\t\t\t$.each(d.concat([]), function (i, v) {\n\t\t\t\tif(v === \"#\") { return true; }\n\t\t\t\ttry { v = $('#' + v.replace($.jstree.idregex,'\\\\$&'), t.element); } catch(ignore) { }\n\t\t\t\tif(v && v.length) {\n\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\tt._data.search.opn.push(v[0].id);\n\t\t\t\t\t\tt.open_node(v, function () { t._search_open(d); }, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n\n/**\n * ### Sort plugin\n *\n * Autmatically sorts all siblings in the tree according to a sorting function.\n */\n\n\t/**\n\t * the settings function used to sort the nodes.\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\n\t * @name $.jstree.defaults.sort\n\t * @plugin sort\n\t */\n\t$.jstree.defaults.sort = function (a, b) {\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\n\t};\n\t$.jstree.plugins.sort = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis.element\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to sort a node's children\n\t\t * @private\n\t\t * @name sort(obj [, deep])\n\t\t * @param  {mixed} obj the node\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\n\t\t * @plugin sort\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.sort = function (obj, deep) {\n\t\t\tvar i, j;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj && obj.children && obj.children.length) {\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\n\t\t\t\tif(deep) {\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// include the sort plugin by default\n\t// $.jstree.defaults.plugins.push(\"sort\");\n\n/**\n * ### State plugin\n *\n * Saves the state of the tree (selected nodes, opened nodes) on the user's computer using available options (localStorage, cookies, etc)\n */\n\n\tvar to = false;\n\t/**\n\t * stores all defaults for the state plugin\n\t * @name $.jstree.defaults.state\n\t * @plugin state\n\t */\n\t$.jstree.defaults.state = {\n\t\t/**\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\n\t\t * @name $.jstree.defaults.state.key\n\t\t * @plugin state\n\t\t */\n\t\tkey\t\t: 'jstree',\n\t\t/**\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\n\t\t * @name $.jstree.defaults.state.events\n\t\t * @plugin state\n\t\t */\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree',\n\t\t/**\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\n\t\t * @name $.jstree.defaults.state.ttl\n\t\t * @plugin state\n\t\t */\n\t\tttl\t\t: false,\n\t\t/**\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\n\t\t * @name $.jstree.defaults.state.filter\n\t\t * @plugin state\n\t\t */\n\t\tfilter\t: false\n\t};\n\t$.jstree.plugins.state = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tvar bind = $.proxy(function () {\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\n\t\t\t\t}, this));\n\t\t\t}, this);\n\t\t\tthis.element\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * save the state\n\t\t * @name save_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.save_state = function () {\n\t\t\tvar st = { 'state' : this.get_state(), 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\n\t\t};\n\t\t/**\n\t\t * restore the state from the user's computer\n\t\t * @name restore_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.restore_state = function () {\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\n\t\t\tif(!!k && k.state) { k = k.state; }\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\n\t\t\tif(!!k) {\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\n\t\t\t\tthis.set_state(k);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * clear the state on the user's computer\n\t\t * @name clear_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.clear_state = function () {\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\n\t\t};\n\t};\n\n\t(function ($, undefined) {\n\t\t$.vakata.storage = {\n\t\t\t// simply specifying the functions in FF throws an error\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\n\t\t};\n\t}($));\n\n\t// include the state plugin by default\n\t// $.jstree.defaults.plugins.push(\"state\");\n\n/**\n * ### Types plugin\n *\n * Makes it possible to add predefined types for groups of nodes, which make it possible to easily control nesting rules and icon for each group.\n */\n\n\t/**\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\n\t * \n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\n\t *\n\t * There are two predefined types:\n\t * \n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\n\t * \n\t * @name $.jstree.defaults.types\n\t * @plugin types\n\t */\n\t$.jstree.defaults.types = {\n\t\t'#' : {},\n\t\t'default' : {}\n\t};\n\n\t$.jstree.plugins.types = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tvar i, j;\n\t\t\tif(options && options.types && options.types['default']) {\n\t\t\t\tfor(i in options.types) {\n\t\t\t\t\tif(i !== \"default\" && i !== \"#\" && options.types.hasOwnProperty(i)) {\n\t\t\t\t\t\tfor(j in options.types['default']) {\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tthis.element\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\tt = this.settings.types,\n\t\t\t\t\t\t\ti, j, c = 'default';\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tc = 'default';\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm['#'].type = '#';\n\t\t\t\t\t}, this));\n\t\t\tparent.bind.call(this);\n\t\t};\n\t\tthis.get_json = function (obj, options, flat) {\n\t\t\tvar i, j,\n\t\t\t\tm = this._model.data,\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\n\t\t\tif(tmp === false) { return false; }\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\n\t\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\t\tdelete tmp[i].id;\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\n\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\ttmp = this._delete_ids(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis._delete_ids = function (tmp) {\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tdelete tmp.id;\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t}\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar m = obj && obj.id ? $.jstree.reference(obj.id) : null, tmp, d, i, j;\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"create_node\":\n\t\t\t\tcase \"move_node\":\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\n\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray(obj.type, tmp.valid_children) === -1) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\n\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\t} while(par);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type settings object for a node\n\t\t * @name get_rules(obj)\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @return {Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_rules = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar tmp = this.get_type(obj, true);\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\n\t\t\treturn tmp;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type string or settings object for a node\n\t\t * @name get_type(obj [, rules])\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\n\t\t * @return {String|Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_type = function (obj, rules) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\n\t\t};\n\t\t/**\n\t\t * used to change a node's type\n\t\t * @name set_type(obj, type)\n\t\t * @param {mixed} obj the node to change\n\t\t * @param {String} type the new type\n\t\t * @plugin types\n\t\t */\n\t\tthis.set_type = function (obj, type) {\n\t\t\tvar t, t1, t2, old_type, old_icon;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_type(obj[t1], type);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tt = this.settings.types;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!t[type] || !obj) { return false; }\n\t\t\told_type = obj.type;\n\t\t\told_icon = this.get_icon(obj);\n\t\t\tobj.type = type;\n\t\t\tif(old_icon === true || (t[old_type] && t[old_type].icon && old_icon === t[old_type].icon)) {\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t};\n\t// include the types plugin by default\n\t// $.jstree.defaults.plugins.push(\"types\");\n\n/**\n * ### Unique plugin\n *\n * Enforces that no nodes with the same name can coexist as siblings.\n */\n\n\t/**\n\t * stores all defaults for the unique plugin\n\t * @name $.jstree.defaults.unique\n\t * @plugin unique\n\t */\n\t$.jstree.defaults.unique = {\n\t\t/**\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.case_sensitive\n\t\t * @plugin unique\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\n\t\t * @name $.jstree.defaults.unique.duplicate\n\t\t * @plugin unique\n\t\t */\n\t\tduplicate : function (name, counter) {\n\t\t\treturn name + ' (' + counter + ')';\n\t\t}\n\t};\n\n\t$.jstree.plugins.unique = function (options, parent) {\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tif(!par || !par.children) { return true; }\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\n\t\t\t\tc = [],\n\t\t\t\ts = this.settings.unique.case_sensitive,\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\tc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t}\n\t\t\tif(!s) { n = n.toLowerCase(); }\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"delete_node\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"rename_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && obj.text[ s ? 'toString' : 'toLowerCase']() === n));\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"create_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"move_node\":\n\t\t\t\t\ti = (obj.parent === par.id || $.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\n\t\t\tif(!node || node.text === undefined) {\n\t\t\t\tif(par === null) {\n\t\t\t\t\tpar = \"#\";\n\t\t\t\t}\n\t\t\t\tpar = this.get_node(par);\n\t\t\t\tif(!par) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tif(!node) { node = {}; }\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, cb = this.settings.unique.duplicate;\n\t\t\t\tn = tmp = this.get_string('New node');\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\tdpc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t\t}\n\t\t\t\ti = 1;\n\t\t\t\twhile($.inArray(s ? n : n.toLowerCase(), dpc) !== -1) {\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\n\t\t\t\t}\n\t\t\t\tnode.text = n;\n\t\t\t}\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t};\n\t};\n\n\t// include the unique plugin by default\n\t// $.jstree.defaults.plugins.push(\"unique\");\n\n\n/**\n * ### Wholerow plugin\n *\n * Makes each node appear block level. Making selection easier. May cause slow down for large trees in old browsers.\n */\n\n\tvar div = document.createElement('DIV');\n\tdiv.setAttribute('unselectable','on');\n\tdiv.className = 'jstree-wholerow';\n\tdiv.innerHTML = '&#160;';\n\t$.jstree.plugins.wholerow = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\n\t\t\t\t\t\tthis.hide_dots();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t\tvar tmp = false, i, j;\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this.settings.wholerow) {\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, callback);\n\t\t\tif(obj) {\n\t\t\t\tvar tmp = div.cloneNode(true);\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\t// include the wholerow plugin by default\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\n\n}));\n\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPortlet = __webpack_require__(11);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formSection = __webpack_require__(48);\n\nvar _formSection2 = _interopRequireDefault(_formSection);\n\nvar _formData = __webpack_require__(44);\n\nvar _formData2 = _interopRequireDefault(_formData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model({\n            initial_errors: false,\n            cls: \"ui-portlet-limited\",\n            icon: null,\n            always_refresh: true,\n            status: \"warning\",\n            hide_operations: false,\n            onchange: function onchange() {}\n        }).set(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Update available options */\n    update: function update(new_model) {\n        var self = this;\n        this.data.matchModel(new_model, function (node, input_id) {\n            var input = self.input_list[input_id];\n            if (input && input.options) {\n                if (!_.isEqual(input.options, node.options)) {\n                    input.options = node.options;\n                    var field = self.field_list[input_id];\n                    if (field.update) {\n                        var new_options = [];\n                        if ([\"data\", \"data_collection\", \"drill_down\"].indexOf(input.type) != -1) {\n                            new_options = input.options;\n                        } else {\n                            for (var i in node.options) {\n                                var opt = node.options[i];\n                                if (opt.length > 2) {\n                                    new_options.push({\n                                        label: opt[0],\n                                        value: opt[1]\n                                    });\n                                }\n                            }\n                        }\n                        field.update(new_options);\n                        field.trigger(\"change\");\n                        Galaxy.emit.debug(\"form-view::update()\", \"Updating options for \" + input_id);\n                    }\n                }\n            }\n        });\n    },\n\n    /** Set form into wait mode */\n    wait: function wait(active) {\n        for (var i in this.input_list) {\n            var field = this.field_list[i];\n            var input = this.input_list[i];\n            if (input.is_dynamic && field.wait && field.unwait) {\n                field[active ? \"wait\" : \"unwait\"]();\n            }\n        }\n    },\n\n    /** Highlight and scroll to input element (currently only used for error notifications) */\n    highlight: function highlight(input_id, message, silent) {\n        var input_element = this.element_list[input_id];\n        if (input_element) {\n            input_element.error(message || \"Please verify this parameter.\");\n            this.portlet.expand();\n            this.trigger(\"expand\", input_id);\n            if (!silent) {\n                var $panel = this.$el.parents().filter(function () {\n                    return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n                }).first();\n                $panel.animate({\n                    scrollTop: $panel.scrollTop() + input_element.$el.offset().top - 120\n                }, 500);\n            }\n        }\n    },\n\n    /** Highlights errors */\n    errors: function errors(options) {\n        this.trigger(\"reset\");\n        if (options && options.errors) {\n            var error_messages = this.data.matchResponse(options.errors);\n            for (var input_id in this.element_list) {\n                var input = this.element_list[input_id];\n                if (error_messages[input_id]) {\n                    this.highlight(input_id, error_messages[input_id], true);\n                }\n            }\n        }\n    },\n\n    /** Render tool form */\n    render: function render() {\n        var self = this;\n        this.off(\"change\");\n        this.off(\"reset\");\n        // contains the dom field elements as created by the parameter factory i.e. form-parameters\n        this.field_list = {};\n        // contains input definitions/dictionaries as provided by the parameters to_dict() function through the api\n        this.input_list = {};\n        // contains the dom elements of each input element i.e. form-input which wraps the actual input field\n        this.element_list = {};\n        // converts the form into a json data structure\n        this.data = new _formData2.default.Manager(this);\n        this._renderForm();\n        this.data.create();\n        this.model.get(\"initial_errors\") && this.errors(this.model.attributes);\n        // add listener which triggers on checksum change, and reset the form input wrappers\n        var current_check = this.data.checksum();\n        this.on(\"change\", function (input_id) {\n            var input = self.input_list[input_id];\n            if (!input || input.refresh_on_change || self.model.get(\"always_refresh\")) {\n                var new_check = self.data.checksum();\n                if (new_check != current_check) {\n                    current_check = new_check;\n                    self.model.get(\"onchange\")();\n                }\n            }\n        });\n        this.on(\"reset\", function () {\n            _.each(self.element_list, function (input_element) {\n                input_element.reset();\n            });\n        });\n        return this;\n    },\n\n    /** Renders/appends dom elements of the form */\n    _renderForm: function _renderForm() {\n        $(\".tooltip\").remove();\n        var options = this.model.attributes;\n        this.message = new _uiMisc2.default.UnescapedMessage();\n        this.section = new _formSection2.default.View(this, {\n            inputs: options.inputs\n        });\n        this.portlet = new _uiPortlet2.default.View({\n            icon: options.icon,\n            title: options.title,\n            cls: options.cls,\n            operations: !options.hide_operations && options.operations,\n            buttons: options.buttons,\n            collapsible: options.collapsible,\n            collapsed: options.collapsed,\n            onchange_title: options.onchange_title\n        });\n        this.portlet.append(this.message.$el);\n        this.portlet.append(this.section.$el);\n        this.$el.empty();\n        options.inputs && this.$el.append(this.portlet.$el);\n        options.message && this.message.update({\n            persistent: true,\n            status: options.status,\n            message: options.message\n        });\n        Galaxy.emit.debug(\"form-view::initialize()\", \"Completed\");\n    }\n}); /**\n        This is the main class of the form plugin. It is referenced as 'app' in lower level modules.\n    */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiButtons = __webpack_require__(12);\n\nvar _uiButtons2 = _interopRequireDefault(_uiButtons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *  This class creates/wraps a default html select field as backbone class.\n */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.data = [];\n        this.data2 = [];\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            cls: \"ui-select\",\n            error_text: \"No options available\",\n            empty_text: \"Nothing selected\",\n            visible: true,\n            wait: false,\n            multiple: false,\n            searchable: true,\n            optional: false,\n            disabled: false,\n            readonly: false,\n            onchange: function onchange() {},\n            value: null,\n            individual: false,\n            pagesize: 20\n        }).set(options);\n        this.on(\"change\", function () {\n            self.model.get(\"onchange\") && self.model.get(\"onchange\")(self.value());\n        });\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:disabled\", this._changeDisabled, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:multiple change:searchable change:cls change:id\", this.render, this);\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        this.model.get(\"searchable\") ? this._renderSearchable() : this._renderClassic();\n        this.$el.addClass(this.model.get(\"cls\")).attr(\"id\", this.model.get(\"id\"));\n        this.$select.empty().addClass(\"select\").attr(\"id\", this.model.get(\"id\") + \"_select\").prop(\"multiple\", this.model.get(\"multiple\")).on(\"change\", function () {\n            self.value(self._getValue());\n            self.trigger(\"change\");\n        });\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n        this._changeDisabled();\n    },\n\n    /** Renders the classic selection field */\n    _renderClassic: function _renderClassic() {\n        var self = this;\n        this.$el.addClass(this.model.get(\"multiple\") ? \"ui-select-multiple\" : \"ui-select\").append(this.$select = $(\"<select/>\")).append(this.$dropdown = $(\"<div/>\")).append(this.$resize = $(\"<div/>\").append(this.$resize_icon = $(\"<i/>\")));\n        if (this.model.get(\"multiple\")) {\n            this.$dropdown.hide();\n            this.$resize_icon.addClass(\"fa fa-angle-double-right fa-rotate-45\").show();\n            this.$resize.removeClass().addClass(\"icon-resize\").show().off(\"mousedown\").on(\"mousedown\", function (event) {\n                var currentY = event.pageY;\n                var currentHeight = self.$select.height();\n                self.minHeight = self.minHeight || currentHeight;\n                $(\"#dd-helper\").show().on(\"mousemove\", function (event) {\n                    self.$select.height(Math.max(currentHeight + (event.pageY - currentY), self.minHeight));\n                }).on(\"mouseup mouseleave\", function () {\n                    $(\"#dd-helper\").hide().off();\n                });\n            });\n        } else {\n            this.$dropdown.show();\n            this.$resize.hide();\n            this.$resize_icon.hide();\n        }\n    },\n\n    /** Renders the default select2 field */\n    _renderSearchable: function _renderSearchable() {\n        var self = this;\n        this.$el.append(this.$select = $(\"<div/>\")).append(this.$dropdown = $(\"<div/>\"));\n        this.$dropdown.hide();\n        if (!this.model.get(\"multiple\")) {\n            this.$dropdown.show().on(\"click\", function () {\n                self.$select.select2 && self.$select.select2(\"open\");\n            });\n        }\n        this.all_button = null;\n        if (this.model.get(\"multiple\") && !this.model.get(\"individual\") && !this.model.get(\"readonly\")) {\n            this.all_button = new _uiButtons2.default.ButtonCheck({\n                onclick: function onclick() {\n                    var new_value = [];\n                    self.all_button.value() !== 0 && _.each(self.model.get(\"data\"), function (option) {\n                        new_value.push(option.value);\n                    });\n                    self.value(new_value);\n                    self.trigger(\"change\");\n                }\n            });\n            this.$el.prepend(this.all_button.$el);\n        }\n    },\n\n    /** Matches a search term with a given text */\n    _match: function _match(term, text) {\n        return !term || term == \"\" || String(text).toUpperCase().indexOf(term.toUpperCase()) >= 0;\n    },\n\n    /** Updates the selection options */\n    _changeData: function _changeData() {\n        var self = this;\n        this.data = [];\n        if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n            this.data.push({\n                value: \"__null__\",\n                label: self.model.get(\"empty_text\")\n            });\n        }\n        _.each(this.model.get(\"data\"), function (option) {\n            self.data.push(option);\n        });\n        if (this.length() == 0) {\n            this.data.push({\n                value: \"__null__\",\n                label: this.model.get(\"error_text\")\n            });\n        }\n        if (this.model.get(\"searchable\")) {\n            this.data2 = [];\n            _.each(this.data, function (option, index) {\n                self.data2.push({\n                    order: index,\n                    id: option.value,\n                    text: option.label,\n                    tags: option.tags\n                });\n            });\n            this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n            this.matched_tags = {};\n            this.$select.select2({\n                data: self.data2,\n                closeOnSelect: !this.model.get(\"multiple\"),\n                multiple: this.model.get(\"multiple\"),\n                query: function query(q) {\n                    self.matched_tags = {};\n                    var pagesize = self.model.get(\"pagesize\");\n                    var results = _.filter(self.data2, function (e) {\n                        var found = false;\n                        _.each(e.tags, function (tag) {\n                            if (self._match(q.term, tag)) {\n                                found = self.matched_tags[tag] = true;\n                            }\n                        });\n                        return found || self._match(q.term, e.text);\n                    });\n                    q.callback({\n                        results: results.slice((q.page - 1) * pagesize, q.page * pagesize),\n                        more: results.length >= q.page * pagesize\n                    });\n                },\n                formatResult: function formatResult(result) {\n                    return _.escape(result.text) + \"<div class=\\\"ui-tags\\\">\" + _.reduce(result.tags, function (memo, tag) {\n                        if (self.matched_tags[tag]) {\n                            return memo + \"&nbsp;<div class=\\\"label label-info\\\">\" + _.escape(tag) + \"</div>\";\n                        }\n                        return memo;\n                    }, \"\") + \"</div>\";\n                }\n            });\n            this.$(\".select2-container .select2-search input\").off(\"blur\");\n        } else {\n            this.$select.find(\"option\").remove();\n            _.each(this.data, function (option) {\n                self.$select.append($(\"<option/>\").attr(\"value\", option.value).html(_.escape(option.label)));\n            });\n        }\n        this.model.set(\"disabled\", this.model.get(\"readonly\") || this.length() == 0);\n        this._changeValue();\n    },\n\n    /** Handles field enabling/disabling, usually used when no options are available */\n    _changeDisabled: function _changeDisabled() {\n        if (this.model.get(\"searchable\")) {\n            this.$select.select2(this.model.get(\"disabled\") ? \"disable\" : \"enable\");\n        } else {\n            this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n        }\n    },\n\n    /** Searchable fields may display a spinner e.g. while waiting for a server response */\n    _changeWait: function _changeWait() {\n        this.$dropdown.removeClass().addClass(\"icon-dropdown fa\").addClass(this.model.get(\"wait\") ? \"fa-spinner fa-spin\" : \"fa-caret-down\");\n    },\n\n    /** Handles field visibility */\n    _changeVisible: function _changeVisible() {\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n    },\n\n    /** Synchronizes the model value with the actually selected field value */\n    _changeValue: function _changeValue() {\n        this._setValue(this.model.get(\"value\"));\n        if (this.model.get(\"multiple\")) {\n            if (this.all_button) {\n                var value = this._getValue();\n                this.all_button.value($.isArray(value) ? value.length : 0, this.length());\n            }\n        } else if (this._getValue() === null && !this.model.get(\"optional\")) {\n            this._setValue(this.first());\n        }\n    },\n\n    /** Return/Set current selection */\n    value: function value(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        return this._getValue();\n    },\n\n    /** Return the first select option */\n    first: function first() {\n        return this.data.length > 0 ? this.data[0].value : null;\n    },\n\n    /** Check if a value is an existing option */\n    exists: function exists(value) {\n        return _.findWhere(this.data, { value: value });\n    },\n\n    /** Return the label/text of the current selection */\n    text: function text() {\n        var v = this._getValue();\n        var d = this.exists($.isArray(v) ? v[0] : v);\n        return d ? d.label : \"\";\n    },\n\n    /** Show the select field */\n    show: function show() {\n        this.model.set(\"visible\", true);\n    },\n\n    /** Hide the select field */\n    hide: function hide() {\n        this.model.set(\"visible\", false);\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function wait() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function unwait() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Returns true if the field is disabled */\n    disabled: function disabled() {\n        return this.model.get(\"disabled\");\n    },\n\n    /** Enable the select field */\n    enable: function enable() {\n        this.model.set(\"disabled\", false);\n    },\n\n    /** Disable the select field */\n    disable: function disable() {\n        this.model.set(\"disabled\", true);\n    },\n\n    /** Update all available options at once */\n    add: function add(options, sorter) {\n        _.each(this.model.get(\"data\"), function (v) {\n            v.keep && !_.findWhere(options, { value: v.value }) && options.push(v);\n        });\n        sorter && options && options.sort(sorter);\n        this.model.set(\"data\", options);\n    },\n\n    /** Update available options */\n    update: function update(options) {\n        this.model.set(\"data\", options);\n    },\n\n    /** Set the custom onchange callback function */\n    setOnChange: function setOnChange(callback) {\n        this.model.set(\"onchange\", callback);\n    },\n\n    /** Number of available options */\n    length: function length() {\n        return $.isArray(this.model.get(\"data\")) ? this.model.get(\"data\").length : 0;\n    },\n\n    /** Set value to dom */\n    _setValue: function _setValue(new_value) {\n        var self = this;\n        if (new_value === null || new_value === undefined) {\n            new_value = \"__null__\";\n        }\n        if (this.model.get(\"multiple\")) {\n            new_value = $.isArray(new_value) ? new_value : [new_value];\n        } else if ($.isArray(new_value)) {\n            if (new_value.length > 0) {\n                new_value = new_value[0];\n            } else {\n                new_value = \"__null__\";\n            }\n        }\n        if (this.model.get(\"searchable\")) {\n            if ($.isArray(new_value)) {\n                var val = [];\n                _.each(new_value, function (v) {\n                    var d = _.findWhere(self.data2, { id: v });\n                    d && val.push(d);\n                });\n                new_value = val;\n            } else {\n                var d = _.findWhere(this.data2, { id: new_value });\n                new_value = d;\n            }\n            this.$select.select2(\"data\", new_value);\n        } else {\n            this.$select.val(new_value);\n        }\n    },\n\n    /** Get value from dom */\n    _getValue: function _getValue() {\n        var val = null;\n        if (this.model.get(\"searchable\")) {\n            var selected = this.$select.select2(\"data\");\n            if (selected) {\n                if ($.isArray(selected)) {\n                    val = [];\n                    selected.sort(function (a, b) {\n                        return a.order - b.order;\n                    });\n                    _.each(selected, function (v) {\n                        val.push(v.id);\n                    });\n                } else {\n                    val = selected.id;\n                }\n            }\n        } else {\n            val = this.$select.val();\n        }\n        return _utils2.default.isEmpty(val) ? null : val;\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiButtons = __webpack_require__(12);\n\nvar _uiButtons2 = _interopRequireDefault(_uiButtons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Base class for options based ui elements **/\nvar Base = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            visible: true,\n            data: [],\n            id: _utils2.default.uid(),\n            error_text: \"No options available.\",\n            wait_text: \"Please wait...\",\n            multiple: false,\n            optional: false,\n            onchange: function onchange() {}\n        }).set(options);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n        this.on(\"change\", function () {\n            self.model.get(\"onchange\")(self.value());\n        });\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        this.$el.empty().removeClass().addClass(\"ui-options\").append(this.$message = $(\"<div/>\")).append(this.$menu = $(\"<div/>\").addClass(\"ui-options-menu\")).append(this.$options = $(this._template()));\n\n        // add select/unselect all button\n        this.all_button = null;\n        if (this.model.get(\"multiple\")) {\n            this.all_button = new _uiButtons2.default.ButtonCheck({\n                onclick: function onclick() {\n                    self.$(\"input\").prop(\"checked\", self.all_button.value() !== 0);\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                }\n            });\n            this.$menu.append(this.all_button.$el);\n        }\n\n        // finalize dom\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n    },\n\n    /** Update available options */\n    update: function update(options) {\n        this.model.set(\"data\", options);\n    },\n\n    _changeData: function _changeData() {\n        var self = this;\n        this.$options.empty();\n        if (this._templateOptions) {\n            this.$options.append(this._templateOptions(this.model.get(\"data\")));\n        } else {\n            _.each(this.model.get(\"data\"), function (option) {\n                self.$options.append($(self._templateOption(option)).addClass(\"ui-option\").tooltip({\n                    title: option.tooltip,\n                    placement: \"bottom\"\n                }));\n            });\n        }\n        var self = this;\n        this.$(\"input\").on(\"change\", function () {\n            self.value(self._getValue());\n            self.trigger(\"change\");\n        });\n        this._changeValue();\n        this._changeWait();\n    },\n\n    _changeVisible: function _changeVisible() {\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n    },\n\n    _changeWait: function _changeWait() {\n        if (this.model.get(\"wait\")) {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"wait_text\"), \"info\");\n                this.$options.hide();\n                this.$menu.hide();\n            }\n        } else {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"error_text\"), \"danger\");\n                this.$options.hide();\n                this.$menu.hide();\n            } else {\n                this.$message.hide();\n                this.$options.css(\"display\", \"inline-block\");\n                this.$menu.show();\n            }\n        }\n    },\n\n    _changeValue: function _changeValue() {\n        this._setValue(this.model.get(\"value\"));\n        if (this._getValue() === null && !this.model.get(\"multiple\") && !this.model.get(\"optional\")) {\n            this._setValue(this.first());\n        }\n        this.all_button && this.all_button.value($.isArray(this._getValue()) ? this._getValue().length : 0, this.length());\n    },\n\n    /** Return/Set current selection */\n    value: function value(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        return this._getValue();\n    },\n\n    /** Return first available option */\n    first: function first() {\n        var options = this.$(\"input\").first();\n        return options.length > 0 ? options.val() : null;\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function wait() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function unwait() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Returns the number of options */\n    length: function length() {\n        return this.$(\".ui-option\").length;\n    },\n\n    /** Set value to dom */\n    _setValue: function _setValue(new_value) {\n        var self = this;\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            if (new_value !== null) {\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function (v) {\n                    self.$(\"input[value=\\\"\" + v + \"\\\"]\").first().prop(\"checked\", true);\n                });\n            }\n        }\n    },\n\n    /** Return current selection */\n    _getValue: function _getValue() {\n        var selected = [];\n        this.$(\":checked\").each(function () {\n            selected.push($(this).val());\n        });\n        if (_utils2.default.isEmpty(selected)) {\n            return null;\n        }\n        return this.model.get(\"multiple\") ? selected : selected[0];\n    },\n\n    /** Show message instead if options */\n    _messageShow: function _messageShow(text, status) {\n        this.$message.show().removeClass().addClass(\"ui-message alert alert-\" + status).html(text);\n    },\n\n    /** Main template function */\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"ui-options-list\");\n    }\n});\n\n/** Iconized **/\nvar BaseIcons = Base.extend({\n    _templateOption: function _templateOption(pair) {\n        var id = _utils2.default.uid();\n        return $(\"<div/>\").addClass(\"ui-option\").append($(\"<input/>\").attr({\n            id: id,\n            type: this.model.get(\"type\"),\n            name: this.model.id,\n            value: pair.value\n        })).append($(\"<label/>\").addClass(\"ui-options-label\").attr(\"for\", id).html(pair.label));\n    }\n});\n\n/** Radio button field **/\nvar Radio = {};\nRadio.View = BaseIcons.extend({\n    initialize: function initialize(options) {\n        options.type = \"radio\";\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Checkbox options field **/\nvar Checkbox = {};\nCheckbox.View = BaseIcons.extend({\n    initialize: function initialize(options) {\n        options.type = \"checkbox\";\n        options.multiple = true;\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Radio button options field styled as classic buttons **/\nvar RadioButton = {};\nRadioButton.View = Base.extend({\n    initialize: function initialize(options) {\n        Base.prototype.initialize.call(this, options);\n    },\n\n    /** Set current value */\n    _setValue: function _setValue(new_value) {\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            this.$(\"label\").removeClass(\"active\");\n            this.$(\"[value=\\\"\" + new_value + \"\\\"]\").prop(\"checked\", true).closest(\"label\").addClass(\"active\");\n        }\n    },\n\n    /** Template for a single option */\n    _templateOption: function _templateOption(pair) {\n        var $el = $(\"<label/>\").addClass(\"btn btn-default\");\n        pair.icon && $el.append($(\"<i/>\").addClass(\"fa\").addClass(pair.icon).addClass(!pair.label && \"no-padding\"));\n        $el.append($(\"<input/>\").attr({\n            type: \"radio\",\n            name: this.model.id,\n            value: pair.value\n        }));\n        pair.label && $el.append(pair.label);\n        return $el;\n    },\n\n    /** Main template function */\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"btn-group ui-radiobutton\").attr(\"data-toggle\", \"buttons\");\n    }\n});\n\nexports.default = {\n    Base: Base,\n    BaseIcons: BaseIcons,\n    Radio: Radio,\n    RadioButton: RadioButton,\n    Checkbox: Checkbox\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPortlet = __webpack_require__(11);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize: function initialize(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || \"element\";\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new _uiMisc2.default.Message();\n\n        // create portlet\n        this.portlet = new _uiPortlet2.default.View({ cls: \"ui-portlet-section\" });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new _uiMisc2.default.Select.View({ optional: options.optional });\n\n        // create insert new list element button\n        this.button = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa fa-sign-in\",\n            tooltip: \"Insert new \" + this.name,\n            onclick: function onclick() {\n                self.add({\n                    id: self.select.value(),\n                    name: self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$(\".ui-list-message\").append(this.message.$el);\n        this.$(\".ui-list-portlet\").append(this.portlet.$el);\n        this.$(\".ui-list-button\").append(this.button.$el);\n        this.$(\".ui-list-select\").append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function value(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != \"string\") {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id: v_id,\n                            name: v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$(\".ui-list-id\").each(function () {\n            lst.push({\n                id: $(this).prop(\"id\"),\n                name: $(this).find(\".ui-list-name\").html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function add(options) {\n        var self = this;\n        if (this.$(\"[id=\\\"\" + options.id + \"\\\"]\").length === 0) {\n            if (!_utils2.default.isEmpty(options.id)) {\n                var $el = $(this._templateRow({\n                    id: options.id,\n                    name: options.name\n                }));\n                $el.on(\"click\", function () {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on(\"mouseover\", function () {\n                    $el.addClass(\"portlet-highlight\");\n                });\n                $el.on(\"mouseout\", function () {\n                    $el.removeClass(\"portlet-highlight\");\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({\n                    message: \"Please select a valid \" + this.name + \".\",\n                    status: \"danger\"\n                });\n            }\n        } else {\n            this.message.update({\n                message: \"This \" + this.name + \" is already in the list.\"\n            });\n        }\n    },\n\n    /** Update available options */\n    update: function update(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function _refresh() {\n        if (this.$(\".ui-list-id\").length > 0) {\n            !this.multiple && this.button.disable();\n            this.$(\".ui-list-portlet\").show();\n        } else {\n            this.button.enable();\n            this.$(\".ui-list-portlet\").hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function _template(options) {\n        return '<div class=\"ui-list\">' + '<div class=\"ui-margin-top\">' + '<span class=\"ui-list-button\"/>' + '<span class=\"ui-list-select\"/>' + \"</div>\" + '<div class=\"ui-list-message\"/>' + '<div class=\"ui-list-portlet\"/>' + \"</div>\";\n    },\n\n    /** Row Template */\n    _templateRow: function _templateRow(options) {\n        return \"<div id=\\\"\" + options.id + \"\\\" class=\\\"ui-list-id\\\"><span class=\\\"ui-list-delete fa fa-trash\\\"/><span class=\\\"ui-list-name\\\">\" + options.name + \"</span></div>\";\n    }\n}); // dependencies\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.App = App;\n\nvar _admin = __webpack_require__(309);\n\nvar _admin2 = _interopRequireDefault(_admin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction App(options) {\n    new _admin2.default.GalaxyApp(options);\n}\n\nwindow.adminToolshedApp = App;\n\n/***/ }),\n\n/***/ 309:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _shedListView = __webpack_require__(310);\n\nvar _shedListView2 = _interopRequireDefault(_shedListView);\n\nvar _categoriesView = __webpack_require__(311);\n\nvar _categoriesView2 = _interopRequireDefault(_categoriesView);\n\nvar _repositoriesView = __webpack_require__(312);\n\nvar _repositoriesView2 = _interopRequireDefault(_repositoriesView);\n\nvar _repositoryView = __webpack_require__(313);\n\nvar _repositoryView2 = _interopRequireDefault(_repositoryView);\n\nvar _repositoryQueueView = __webpack_require__(314);\n\nvar _repositoryQueueView2 = _interopRequireDefault(_repositoryQueueView);\n\nvar _repoStatusView = __webpack_require__(315);\n\nvar _repoStatusView2 = _interopRequireDefault(_repoStatusView);\n\nvar _workflowsView = __webpack_require__(316);\n\nvar _workflowsView2 = _interopRequireDefault(_workflowsView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AdminToolshedRouter = Backbone.Router.extend({\n    initialize: function initialize() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\"route\", function () {\n            this.routesHit++;\n        }, this);\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"toolsheds\",\n        sheds: \"toolsheds\",\n        queue: \"queue\",\n        workflows: \"workflows\",\n        \"status/r/:repositories\": \"status\",\n        status: \"status\",\n        \"categories/s/:tool_shed\": \"categories\",\n        \"category/s/:tool_shed/c/:cateory_id\": \"repositories\",\n        \"repository/s/:tool_shed/r/:repository_id\": \"repository\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function back() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    }\n});\n\nvar GalaxyAdminToolshedApp = Backbone.View.extend({\n    app_config: {\n        known_views: [\"toolsheds\", \"queue\", \"status\", \"categories\", \"repositories\", \"repoository\"]\n    },\n\n    initialize: function initialize() {\n        Galaxy.admintoolshedapp = this;\n        this.admin_toolshed_router = new AdminToolshedRouter();\n\n        this.admin_toolshed_router.on(\"route:queue\", function () {\n            if (Galaxy.admintoolshedapp.adminRepoQueueView) {\n                Galaxy.admintoolshedapp.adminRepoQueueView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminRepoQueueView = new _repositoryQueueView2.default.RepoQueueView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:toolsheds\", function () {\n            if (Galaxy.admintoolshedapp.adminShedListView) {\n                Galaxy.admintoolshedapp.adminShedListView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminShedListView = new _shedListView2.default.ShedListView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:categories\", function (tool_shed) {\n            if (Galaxy.admintoolshedapp.adminShedCategoriesView) {\n                Galaxy.admintoolshedapp.adminShedCategoriesView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoriesView = new _categoriesView2.default.CategoryView({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repositories\", function (tool_shed, category_id) {\n            if (Galaxy.admintoolshedapp.adminShedCategoryView) {\n                Galaxy.admintoolshedapp.adminShedCategoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoryView = new _repositoriesView2.default.Category({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repository\", function (tool_shed, repository_id) {\n            if (Galaxy.admintoolshedapp.adminRepositoryView) {\n                Galaxy.admintoolshedapp.adminRepositoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepositoryView = new _repositoryView2.default.RepoDetails({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:status\", function (repositories) {\n            if (Galaxy.admintoolshedapp.adminRepoStatusView) {\n                Galaxy.admintoolshedapp.adminRepoStatusView.reDraw({\n                    repositories: repositories.split(\"|\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepoStatusView = new _repoStatusView2.default.RepoStatus({\n                    repositories: repositories.split(\"|\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:workflows\", function () {\n            if (Galaxy.admintoolshedapp.adminWorkflowsView) {\n                Galaxy.admintoolshedapp.adminWorkflowsView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminWorkflowsView = new _workflowsView2.default.Workflows();\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexports.default = {\n    GalaxyApp: GalaxyAdminToolshedApp\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    defaults: {\n        tool_sheds: [{\n            url: \"https://toolshed.g2.bx.psu.edu/\",\n            name: \"Galaxy Main Tool Shed\"\n        }]\n    },\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new _toolshedModel2.default.ShedsCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n    },\n\n    el: \"#center\",\n\n    render: function render(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        var toolshed_list_template = this.templateToolshedList;\n        this.$el.html(toolshed_list_template({\n            title: \"Configured Galaxy Tool Sheds\",\n            tool_sheds: this.model.models,\n            queue: _util2.default.queueLength()\n        }));\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.render(options);\n    },\n\n    templateToolshedList: _.template(['<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\"><%= title %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<div class=\"unified-panel-body\" id=\"list_toolsheds\">', '<div class=\"form-row\">', '<table class=\"grid\">', \"<% _.each(tool_sheds, function(shed) { %>\", '<tr class=\"libraryTitle\">', \"<td>\", '<div style=\"float: left; margin-left: 1px;\" class=\"menubutton split\">', '<a class=\"view-info shed-selector\" href=\"#/categories/s/<%= shed.get(\"url\") %>\"><%= shed.get(\"name\") %></a>', \"</div>\", \"</td>\", \"</tr>\", \"<% }); %>\", \"</table>\", \"</div>\", '<div style=\"clear: both\"></div>', \"</div>\"].join(\"\"))\n});\n\nexports.default = {\n    ShedListView: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 311:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\n__webpack_require__(157);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolShedCategories = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: {\n        tool_shed: \"https://toolshed.g2.bx.psu.edu/\"\n    },\n\n    initialize: function initialize(options) {\n        var self = this;\n        var shed = options.tool_shed.replace(/\\//g, \"%2f\");\n        this.options = _.defaults(this.options || options, this.defaults);\n        this.model = new _toolshedModel2.default.Categories();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.url = this.model.url + \"?tool_shed_url=\" + this.options.tool_shed;\n        this.model.tool_shed = shed;\n        this.model.fetch();\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        this.options.categories = this.model.models;\n        this.options.queue = _util2.default.queueLength();\n        var category_list_template = this.templateCategoryList;\n        this.$el.html(category_list_template(this.options));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n        $(\"#search_box\").autocomplete({\n            source: function source(request, response) {\n                var shed_url = that.model.tool_shed.replace(/%2f/g, \"/\");\n                var base_url = Galaxy.root + \"api/tool_shed/search\";\n                var params = {\n                    term: request.term,\n                    tool_shed_url: shed_url\n                };\n                $.post(base_url, params, function (data) {\n                    console.log(data);\n                    var result_list = _util2.default.shedParser(data);\n                    response(result_list);\n                });\n            },\n            minLength: 3,\n            select: function select(event, ui) {\n                var tsr_id = ui.item.value;\n                var api_url = Galaxy.root + \"api/tool_shed/repository\";\n                var params = {\n                    tool_shed_url: that.model.tool_shed,\n                    tsr_id: tsr_id\n                };\n                var new_route = \"repository/s/\" + that.model.tool_shed + \"/r/\" + tsr_id;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            }\n        });\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.model.url = this.model.url + \"?tool_shed_url=\" + this.options.tool_shed;\n        this.initialize(options);\n    },\n\n    templateCategoryList: _.template(['<style type=\"text/css\">', \".ui-autocomplete { background-color: #fff; }\", \"li.ui-menu-item { list-style-type: none; }\", \"</style>\", '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\" style=\"layout: inline;\">Categories in <%= tool_shed.replace(/%2f/g, \"/\") %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<div class=\"unified-panel-body\" id=\"list_categories\">', '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">', '<span class=\"ui-widget\" >', '<input class=\"search-box-input\" id=\"search_box\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" name=\"search\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />', \"</span>\", \"</div>\", '<div style=\"clear: both; margin-top: 1em;\">', '<table class=\"grid\">', '<thead id=\"grid-table-header\">', \"<tr>\", \"<th>Name</th>\", \"<th>Description</th>\", \"<th>Repositories</th>\", \"</tr>\", \"</thead>\", \"<% _.each(categories, function(category) { %>\", \"<tr>\", \"<td>\", '<a href=\"#/category/s/<%= tool_shed %>/c/<%= category.get(\"id\") %>\"><%= category.get(\"name\") %></a>', \"</td>\", '<td><%= category.get(\"description\") %></td>', '<td><%= category.get(\"repositories\") %></td>', \"</tr>\", \"<% }); %>\", \"</table>\", \"</div>\", \"</div>\"].join(\"\"))\n});\n\nexports.default = {\n    CategoryView: ToolShedCategories\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 312:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\n__webpack_require__(157);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolShedCategoryContentsView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function initialize(params) {\n        var self = this;\n        this.model = new _toolshedModel2.default.CategoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += \"?tool_shed_url=\" + shed + \"&category_id=\" + params.category_id;\n        this.model.tool_shed = shed;\n        this.model.category = params.category_id;\n        this.model.fetch();\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        var category_contents_template = this.templateCategoryContents;\n        this.$el.html(category_contents_template({\n            category: this.model.models[0],\n            tool_shed: this.model.tool_shed,\n            queue: _util2.default.queueLength()\n        }));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n        $(\"#search_box\").autocomplete({\n            source: function source(request, response) {\n                var shed_url = that.model.tool_shed.replace(/%2f/g, \"/\");\n                var base_url = Galaxy.root + \"api/tool_shed/search\";\n                var params = {\n                    term: request.term,\n                    tool_shed_url: shed_url\n                };\n                $.post(base_url, params, function (data) {\n                    var result_list = _util2.default.shedParser(data);\n                    response(result_list);\n                });\n            },\n            minLength: 3,\n            select: function select(event, ui) {\n                var tsr_id = ui.item.value;\n                var new_route = \"repository/s/\" + that.model.tool_shed + \"/r/\" + tsr_id;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            }\n        });\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateCategoryContents: _.template(['<style type=\"text/css\">', \".ui-autocomplete { background-color: #fff; }\", \"li.ui-menu-item { list-style-type: none; }\", \"</style>\", '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\">Repositories in <%= category.get(\"name\") %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<div class=\"unified-panel-body\" id=\"list_repositories\">', '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">', '<span class=\"ui-widget\" >', '<input class=\"search-box-input\" id=\"search_box\" name=\"search\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />', \"</span>\", \"</div>\", '<div style=\"clear: both; margin-top: 1em;\">', '<table class=\"grid\">', '<thead id=\"grid-table-header\">', \"<tr>\", '<th style=\"width: 10%;\">Owner</th>', '<th style=\"width: 15%;\">Name</th>', \"<th>Synopsis</th>\", '<th style=\"width: 10%;\">Type</th>', \"</tr>\", \"</thead>\", '<% _.each(category.get(\"repositories\"), function(repository) { %>', \"<tr>\", \"<td><%= repository.owner %></td>\", \"<td>\", '<div style=\"float: left; margin-left: 1px;\" class=\"menubutton split\">', '<a href=\"#/repository/s/<%= tool_shed %>/r/<%= repository.id %>\"><%= repository.name %></a>', \"</div>\", \"</td>\", \"<td><%= repository.description %></td>\", \"<td><%= repository.type %></td>\", \"</tr>\", \"<% }); %>\", \"</table>\", \"</div>\", \"</div>\"].join(\"\"))\n});\n\nexports.default = {\n    Category: ToolShedCategoryContentsView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _jstree = __webpack_require__(198);\n\nvar _jstree2 = _interopRequireDefault(_jstree);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiModal = __webpack_require__(9);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _formView = __webpack_require__(20);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolShedRepositoryView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function initialize(params) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new _toolshedModel2.default.RepositoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += \"?tool_shed_url=\" + shed + \"&repository_id=\" + params.repository_id;\n        this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n        this.model.tool_shed = shed;\n        this.model.category = params.repository_id;\n        this.model.fetch();\n    },\n\n    render: function render(options) {\n        var repo_details_template = this.templateRepoDetails;\n        var models = this.model.models[0];\n        this.options = {\n            repository: models.get(\"repository\"),\n            tool_shed: this.model.tool_shed,\n            queue: _util2.default.queueLength()\n        };\n        var changesets = Object.keys(this.options.repository.metadata);\n        this.options.current_changeset = this.options.current_changeset || changesets[changesets.length - 1];\n        this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n        this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n        this.options.tools = this.options.current_metadata.tools;\n        this.options.repository_dependencies_template = this.templateRepoDependencies;\n        this.options.repository_dependency_template = this.templateRepoDependency;\n        this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n        this.options.tps_template_tool_select = this.templateToolSectionSelect;\n        this.options.tps_select_options = this.templatePanelSelectOptions;\n        this.options.tool_dependencies = models.get(\"tool_dependencies\");\n        this.options.shed_tool_conf = this.templateShedToolConf({\n            stc_html: models.get(\"shed_conf\")\n        });\n        this.options.panel_section_dict = models.get(\"panel_section_dict\");\n        this.options.api_url = Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n        this.options = _.extend(this.options, options);\n        this.$el.html(repo_details_template(this.options));\n        this.checkInstalled(this.options.current_metadata);\n        this.bindEvents();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n        $(\"#changeset\").on(\"change\", function () {\n            that.options.current_changeset = $(\"#changeset\").find(\"option:selected\").text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            that.checkInstalled(that.options.current_metadata);\n            that.reDraw();\n        });\n        $(\"#tool_panel_section_select\").on(\"change\", function () {\n            that.tpsSelection();\n        });\n        $(\"#install_repository\").on(\"click\", function (ev) {\n            var form = $(\"#repository_installation\");\n            ev.preventDefault();\n            var params = {};\n            params.repositories = JSON.stringify([[$(\"#install_repository\").attr(\"data-tsrid\"), $(\"#changeset\").find(\"option:selected\").val()]]);\n            params.tool_shed_repository_ids = JSON.stringify([$(\"#install_repository\").attr(\"data-tsrid\")]);\n            params.tool_shed_url = that.model.tool_shed_url;\n            params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            var tps = that.panelSelect(params);\n            params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n            params.shed_tool_conf = $(\"select[name='shed_tool_conf']\").find(\"option:selected\").val();\n            params.changeset = $(\"#changeset\").find(\"option:selected\").val();\n            var url = $(\"#repository_installation\").attr(\"action\");\n            that.prepareInstall(params, url);\n        });\n        $(\"#queue_install\").on(\"click\", function (ev) {\n            that.options.current_changeset = $(\"#changeset\").find(\"option:selected\").text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            var changeset = that.options.current_changeset;\n            var repository_metadata = {};\n            _.each(Object.keys(that.options.current_metadata), function (key) {\n                if (!repository_metadata[key]) {\n                    repository_metadata[key] = that.options.current_metadata[key];\n                }\n            });\n            repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n            repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\").find(\"option:selected\").val();\n            repository_metadata.tool_shed_url = that.model.tool_shed_url;\n            if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(0, repository_metadata.tool_shed_url.length - 1);\n            }\n            _util2.default.addToQueue(repository_metadata);\n            that.checkInstalled(repository_metadata);\n        });\n        $(\".tool_panel_section_picker\").on(\"change\", function () {\n            var new_value = $(this).find(\"option:selected\").val();\n            var default_tps = $(\"#tool_panel_section_select\").find(\"option:selected\").val();\n            if (new_value == default_tps) {\n                $(this).attr(\"default\", \"active\");\n            } else {\n                $(this).removeAttr(\"default\");\n            }\n        });\n        $(function () {\n            $(\"#repository_dependencies\").jstree();\n        });\n        $(\".tool_form\").on(\"click\", function () {\n            var guid = $(this).attr(\"data-guid\");\n            var clean = $(this).attr(\"data-clean\");\n            var name = $(this).attr(\"data-name\");\n            var desc = $(this).attr(\"data-desc\");\n            var tool_shed_url = that.model.tool_shed_url;\n            var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n            var changeset = $(\"#changeset\").find(\"option:selected\").val();\n            var api_url = Galaxy.root + \"api/tool_shed/tool_json\";\n            var params = {\n                guid: guid,\n                tool_shed_url: tool_shed_url,\n                tsr_id: tsr_id,\n                changeset: changeset\n            };\n            $.get(api_url, params, function (data) {\n                data.cls = \"ui-portlet-plain\";\n                var toolform = new _formView2.default(data);\n                _utils2.default.deepeach(data.inputs, function (input) {\n                    if (input.type) {\n                        if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                            input.type = \"hidden\";\n                            input.info = \"Data input '\" + input.name + \"' (\" + _utils2.default.textify(input.extensions) + \")\";\n                        }\n                    }\n                });\n                var modal = new _uiModal2.default.View();\n                var modal_title = \"<u>\" + name + \"</u> \" + desc;\n                modal.show({\n                    closing_events: true,\n                    title: modal_title,\n                    body: toolform.$el,\n                    buttons: {\n                        Close: function Close() {\n                            modal.hide();\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    checkInstalled: function checkInstalled(metadata) {\n        var that = this;\n        var params = { name: metadata.name, owner: metadata.owner };\n        var already_installed = false;\n        var queued = that.repoQueued(metadata);\n        $.get(Galaxy.root + \"api/tool_shed_repositories\", params, function (data) {\n            for (var index = 0; index < data.length; index++) {\n                var repository = data[index];\n                var installed = !repository.deleted && !repository.uninstalled;\n                var changeset_match = repository.changeset_revision == metadata.changeset_revision || repository.installed_changeset_revision == metadata.changeset_revision;\n                if (repository.name == metadata.repository.name && repository.owner == metadata.repository.owner && installed && changeset_match) {\n                    already_installed = true;\n                }\n                if (already_installed) {\n                    $(\"#install_repository\").prop(\"disabled\", true);\n                    $(\"#install_repository\").val(\"This revision is already installed\");\n                } else {\n                    $(\"#install_repository\").prop(\"disabled\", false);\n                    $(\"#install_repository\").val(\"Install this revision\");\n                }\n            }\n            if (that.repoQueued(metadata) || already_installed) {\n                $(\"#queue_install\").hide();\n                $(\"#queue_install\").val(\"This revision is already in the queue\");\n            } else {\n                $(\"#queue_install\").show();\n                $(\"#queue_install\").val(\"Install this revision later\");\n            }\n        });\n    },\n\n    panelSelect: function panelSelect(params) {\n        var tool_panel_section = {};\n        if ($(\"#tool_panel_section_select\").length) {\n            params.tool_panel_section_id = $(\"#tool_panel_section_select\").find(\"option:selected\").val();\n        } else {\n            params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n        }\n        $(\".tool_panel_section_picker\").each(function () {\n            var element_name = $(this).attr(\"name\");\n            var tool_guid = $(this).attr(\"data-toolguid\");\n            if (element_name === \"tool_panel_section_id\") {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).find(\"option:selected\").val(),\n                    action: \"append\"\n                };\n            } else {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).val(),\n                    action: \"create\"\n                };\n            }\n        });\n        return tool_panel_section;\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    repoQueued: function repoQueued(metadata) {\n        var that = this;\n        if (!localStorage.repositories) {\n            return;\n        }\n        var repository_queue = JSON.parse(localStorage.repositories);\n        var changeset = metadata.changeset_revision;\n        var queue_key = that.queueKey(metadata);\n        if (localStorage.repositories) {\n            queued_repos = JSON.parse(localStorage.repositories);\n        }\n        if (queued_repos.hasOwnProperty(queue_key)) {\n            return true;\n        }\n        return false;\n    },\n\n    queueKey: function queueKey(metadata) {\n        var shed_url = this.model.tool_shed_url;\n        // Make sure there is never a trailing slash on the shed URL.\n        if (shed_url.substr(-1) == \"/\") {\n            shed_url = shed_url.substr(0, shed_url.length - 1);\n        }\n        return shed_url + \"|\" + metadata.repository_id + \"|\" + metadata.changeset_revision;\n    },\n\n    tpsSelection: function tpsSelection() {\n        new_tps = $(\"#tool_panel_section_select\").find(\"option:selected\").val();\n        $('.tool_panel_section_picker[default=\"active\"]').each(function () {\n            $(this).val(new_tps);\n        });\n    },\n\n    prepareInstall: function prepareInstall(params, api_url) {\n        var that = this;\n        $.post(api_url, params, function (data) {\n            var iri_parameters = JSON.parse(data);\n            that.doInstall(iri_parameters);\n        });\n    },\n\n    doInstall: function doInstall(params) {\n        var controller_url = Galaxy.root + \"admin_toolshed/install_repositories\";\n        var repositories = params.repositories;\n        var new_route = \"status/r/\" + repositories.join(\"|\");\n        $.post(controller_url, params, function (data) {\n            console.log(\"Initializing repository installation succeeded\");\n        });\n        Backbone.history.navigate(new_route, {\n            trigger: true,\n            replace: true\n        });\n    },\n\n    templateRepoDetails: _.template(['<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">', '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">', '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />', '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />', '<div class=\"toolForm\">', '<div class=\"toolFormTitle\">Changeset</div>', '<div class=\"toolFormBody changeset\">', '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">', \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\", '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>', '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>', \"<% }); %>\", \"</select>\", '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />', '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />', '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>', \"</div>\", \"</div>\", \"<%= shed_tool_conf %>\", \"<% if (current_metadata.has_repository_dependencies) { %>\", '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>', '<div class=\"toolFormBody\">', '<p id=\"install_repository_dependencies_checkbox\">', '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />', '<label for=\"install_repository_dependencies\">Install repository dependencies</label>', \"</p>\", \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\", '<div class=\"tables container-table\" id=\"repository_dependencies\">', '<div class=\"expandLink\">', '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">', \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\", \"</a>\", \"</div>\", \"<%= repository_dependencies_template(current_metadata) %>\", \"</div>\", \"</div>\", \"<% } %>\", \"<% if (current_metadata.includes_tool_dependencies) { %>\", '<div class=\"toolFormTitle\">Tool dependencies</div>', '<div class=\"toolFormBody\">', '<p id=\"install_resolver_dependencies_checkbox\">', '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />', '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>', \"</p>\", '<p id=\"install_tool_dependencies_checkbox\">', '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />', '<label for=\"install_tool_dependencies\">Install tool dependencies</label>', \"</p>\", '<div class=\"tables container-table\" id=\"tool_dependencies\">', '<div class=\"expandLink\">', '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">', \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\", \"</a>\", \"</div>\", '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">', \"<thead>\", '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">', '<th style=\"padding-left: 40px;\">Name</th>', \"<th>Version</th>\", \"<th>Type</th>\", \"</tr>\", \"</thead>\", '<tbody id=\"tool_deps\">', \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\", '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">', '<td style=\"padding-left: 40px;\">', \"<%= dependency.name %></td>\", \"<td><%= dependency.version %></td>\", \"<td><%= dependency.type %></td>\", \"</tr>\", \"<% }); %>\", \"</tbody>\", \"</table>\", \"</div>\", \"</div>\", \"<% } %>\", \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\", '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>', '<div class=\"toolFormBody\">', '<div class=\"tables container-table\" id=\"tools_toggle\">', '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">', \"<thead>\", '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">', '<th style=\"padding-left: 40px;\">Name</th>', \"<th>Description</th>\", \"<th>Version</th>\", \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\", \"</thead>\", '<tbody id=\"tools_in_repo\">', \"<% _.each(current_metadata.tools, function(tool) { %>\", '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">', '<td style=\"padding-left: 40px;\">', '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">', '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>', \"</div>\", \"</td>\", \"<td><%= tool.description %></td>\", '<td style=\"width: 15%\"><%= tool.version %></td>', '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">', \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\", \"</td>\", \"</tr>\", \"<% }); %>\", \"</tbody>\", \"</table>\", \"</div>\", \"</div>\", \"<% } %>\", \"</form>\", \"</div>\"].join(\"\")),\n\n    templateRepoDependencies: _.template(['<div class=\"toolFormTitle\">Repository Dependencies</div>', '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">', \"<ul>\", \"<li>Repository installation requires the following\", \"<% if (has_repository_dependencies) { %>\", \"<% _.each(repository_dependencies, function(dependency) { %>\", \"<% dependency.repository_dependency_template = repository_dependency_template; %>\", \"<%= repository_dependency_template(dependency) %>\", \"<% }); %>\", \"<% } %>\", \"</li>\", \"</ul>\", \"</div>\"].join(\"\")),\n\n    templateRepoDependency: _.template(['<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">', \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\", \"<% if (has_repository_dependencies) { %>\", '<ul class=\"child_dependencies\">', \"<% _.each(repository_dependencies, function(dependency) { %>\", \"<% dependency.repository_dependency_template = repository_dependency_template; %>\", \"<%= repository_dependency_template(dependency) %>\", \"<% }); %>\", \"</ul>\", \"<% } %>\", \"</li>\"].join(\"\")),\n\n    templateShedToolConf: _.template(['<div class=\"toolFormTitle\">Shed tool configuration file:</div>', '<div class=\"toolFormBody\">', '<div class=\"form-row\">', \"<%= stc_html %>\", '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>', \"</div>\", \"</div>\"].join(\"\")),\n\n    templateToolDependency: _.template([\"<% if (has_repository_dependencies) { %>\", \"<% _.each(repository_dependencies, function(dependency) { %>\", \"<% if (dependency.includes_tool_dependencies) { %>\", \"<% dependency.tool_dependency_template = tool_dependency_template %>\", \"<%= tool_dependency_template(dependency) %>\", \"<% } %>\", \"<% }); %>\", \"<% } %>\"].join(\"\")),\n\n    templateGlobalSectionCreate: _.template(['<div id=\"tool_panel_section\">', '<div class=\"form-row\" id=\"new_tps\">', '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>', '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />', '<div class=\"toolParamHelp\" style=\"clear: both;\">', \"Add a new tool panel section to contain the installed tools (optional).\", \"</div>\", \"</div>\", \"</div>\"].join(\"\")),\n\n    templateGlobalSectionSelect: _.template(['<div id=\"tool_panel_section\">', '<div class=\"toolFormTitle\">Tool Panel Section</div>', '<div class=\"toolFormBody\">', '<div class=\"tab-pane\" id=\"select_tps\">', '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">', \"<%= tps_select_options({sections: tps.sections}) %>\", \"</select>\", '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />', '<div class=\"toolParamHelp\" style=\"clear: both;\">', \"Select an existing tool panel section to contain the installed tools (optional).\", \"</div>\", \"</div>\", \"</div>\", \"</div>\"].join(\"\")),\n\n    templateToolSectionCreate: _.template(['<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">', '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">', '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">', \"</div>\"].join(\"\")),\n\n    templateToolSectionSelect: _.template(['<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">', '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">', \"<%= tps_select_options({sections: tps.sections}) %>\", \"</select>\", '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">', '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>', \"</div>\"].join(\"\")),\n\n    templatePanelSelectOptions: _.template([\"<% _.each(sections, function(section) { %>\", '<option value=\"<%= section.id %>\"><%= section.name %></option>', \"<% }); %>\"].join(\"\"))\n});\n\nexports.default = {\n    RepoDetails: ToolShedRepositoryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 314:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function initialize(options) {\n        var that = this;\n        this.model = new _toolshedModel2.default.RepoQueue();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function render(options) {\n        var that = this;\n        var repo_queue_template = that.templateRepoQueue;\n        var repositories = that.model.models;\n        that.$el.html(repo_queue_template({\n            title: \"Repository Installation Queue\",\n            repositories: repositories,\n            queue: _util2.default.queueLength()\n        }));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n        $(\".install_one\").on(\"click\", function () {\n            var repository_metadata = that.loadFromQueue($(this).attr(\"data-repokey\"));\n            that.installFromQueue(repository_metadata, $(this).attr(\"data-repokey\"));\n        });\n        $(\".remove_one\").on(\"click\", function () {\n            var queue_key = $(this).attr(\"data-repokey\");\n            var repo_queue = JSON.parse(localStorage.repositories);\n            if (repo_queue.hasOwnProperty(queue_key)) {\n                var repository_id = repo_queue[queue_key].repository.id;\n                delete repo_queue[queue_key];\n                $(\"#queued_repository_\" + repository_id).remove();\n            }\n            localStorage.repositories = JSON.stringify(repo_queue);\n        });\n        $(\"#clear_queue\").on(\"click\", function () {\n            localStorage.repositories = \"{}\";\n        });\n        $(\"#from_workflow\").on(\"click\", function () {\n            Backbone.history.navigate(\"workflows\", {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    installFromQueue: function installFromQueue(repository_metadata, queue_key) {\n        var that = this;\n        var params = Object();\n        params.install_tool_dependencies = repository_metadata.install_tool_dependencies;\n        params.install_repository_dependencies = repository_metadata.install_repository_dependencies;\n        params.install_resolver_dependencies = repository_metadata.install_resolver_dependencies;\n        params.tool_panel_section = repository_metadata.tool_panel_section;\n        params.shed_tool_conf = repository_metadata.shed_tool_conf;\n        params.repositories = JSON.stringify([[repository_metadata.repository.id, repository_metadata.changeset_revision]]);\n        params.tool_shed_repository_ids = JSON.stringify([repository_metadata.repository.id]);\n        params.tool_shed_url = queue_key.split(\"|\")[0];\n        params.changeset = repository_metadata.changeset_revision;\n        var url = Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n        $(\"#queued_repository_\" + repository_metadata.repository.id).remove();\n        if (localStorage.repositories) {\n            if (queue_key === undefined) {\n                queue_key = _util2.default.queueKey(repository_metadata);\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                delete repository_queue[queue_key];\n                localStorage.repositories = JSON.stringify(repository_queue);\n            }\n        }\n\n        $.post(url, params, function (data) {\n            var iri_params = JSON.parse(data);\n            var repositories = iri_params.repositories;\n            var new_route = \"status/r/\" + repositories.join(\"|\");\n            $.post(Galaxy.root + \"admin_toolshed/install_repositories\", iri_params, function (data) {\n                console.log(\"Initializing repository installation succeeded\");\n            });\n            Backbone.history.navigate(new_route, {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    loadFromQueue: function loadFromQueue(queue_key) {\n        var repository_queue = JSON.parse(localStorage.repositories);\n        if (repository_queue.hasOwnProperty(queue_key)) {\n            return repository_queue[queue_key];\n        }\n        return undefined;\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.initialize(options);\n        this.model.fetch();\n        this.render(options);\n    },\n\n    templateRepoQueue: _.template(['<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\"><%= title %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">', '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">', '<thead id=\"grid-table-header\">', \"<tr>\", '<th class=\"datasetRow\">Name</th>', '<th class=\"datasetRow\">Owner</th>', '<th class=\"datasetRow\">Revision</th>', '<th class=\"datasetRow\">ToolShed</th>', '<th class=\"datasetRow\">Install</th>', '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>', \"</tr>\", \"</thead>\", \"<tbody>\", \"<% _.each(repositories, function(repository) { %>\", '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">', '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>', '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>', '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>', '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>', '<td class=\"datasetRow\">', '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />', \"</td>\", '<td class=\"datasetRow\">', '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />', \"</td>\", \"</tr>\", \"<% }); %>\", \"</tbody>\", \"</table>\", '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />', \"</div>\"].join(\"\"))\n});\n\nexports.default = {\n    RepoQueueView: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolShedRepoStatusView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = _.defaults(this.options || [{}], options, this.defaults);\n        this.model = new _toolshedModel2.default.RepoStatus();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.url += \"?repositories=\" + this.options.repositories.join(\"|\");\n        this.model.fetch();\n        this.timer = setInterval(function (self) {\n            var terminal_states = [\"installed\", \"error\"];\n            var all_done = true;\n            _.some(self.model.models, function (repository) {\n                repo_id = repository.get(\"id\");\n                var repo_status = repository.get(\"status\").toLowerCase();\n                if (terminal_states.indexOf(repo_status) === -1) {\n                    all_done = false;\n                    return true;\n                }\n            });\n            if (all_done) {\n                clearInterval(self.timer);\n            } else {\n                self.model.fetch();\n            }\n        }, 2000, this);\n    },\n\n    close: function close() {\n        clearInterval(this.timer);\n    },\n\n    render: function render(options) {\n        this.options = _.extend(this.options, options);\n        var repo_status_template = this.templateRepoStatus;\n        this.$el.html(repo_status_template({\n            title: \"Repository Status\",\n            repositories: this.model.models,\n            queue: _util2.default.queueLength()\n        }));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateRepoStatus: _.template(['<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\"><%= title %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<style type=\"text/css\">', \".state-color-new,\", \".state-color-deactivated,\", \".state-color-uninstalled { border-color:#bfbfbf; background:#eee }\", \".state-color-cloning,\", \".state-color-setting-tool-versions,\", \".state-color-installing-repository-dependencies,\", \".state-color-installing-tool-dependencies,\", \".state-color-loading-proprietary-datatypes { border-color:#AAAA66; background:#FFFFCC }\", \".state-color-installed { border-color:#20b520; background:#b0f1b0 }\", \".state-color-error { border-color:#dd1b15; background:#f9c7c5 }\", \"</style>\", '<table id=\"grid-table\" class=\"grid\">', '<thead id=\"grid-table-header\">', \"<tr>\", '<th id=\"null-header\">Name<span class=\"sort-arrow\"></span></th>', '<th id=\"null-header\">Description<span class=\"sort-arrow\"></span></th>', '<th id=\"null-header\">Owner<span class=\"sort-arrow\"></span></th>', '<th id=\"null-header\">Revision<span class=\"sort-arrow\"></span></th>', '<th id=\"null-header\">Installation Status<span class=\"sort-arrow\"></span></th>', \"</tr>\", \"</thead>\", '<tbody id=\"grid-table-body\">', \"<% _.each(repositories, function(repository) { %>\", \"<tr>\", \"<td>\", '<div id=\"\" class=\"\">', '<label id=\"repo-name-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">', '<%= repository.get(\"name\") %>', \"</label>\", \"</div>\", \"</td>\", \"<td>\", '<div id=\"\" class=\"\">', '<label id=\"repo-desc-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">', '<%= repository.get(\"description\") %>', \"</label>\", \"</div>\", \"</td>\", \"<td>\", '<div id=\"\" class=\"\">', '<label id=\"repo-user-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">', '<%= repository.get(\"owner\") %>', \"</label>\", \"</div>\", \"</td>\", \"<td>\", '<div id=\"\" class=\"\">', '<label id=\"repo-changeset-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">', '<%= repository.get(\"changeset_revision\") %>', \"</label>\", \"</div>\", \"</td>\", \"<td>\", '<div id=\"\" class=\"\">', '<label id=\"RepositoryStatus-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">', '<div class=\"repo-status count-box state-color-<%= repository.get(\"status\").toLowerCase().replace(/ /g, \"-\") %>\" id=\"RepositoryStatus-<%= repository.get(\"id\") %>\">', '<%= repository.get(\"status\") %>', \"</div>\", \"</label>\", \"</div>\", \"</td>\", \"</tr>\", \"<% }); %>\", \"</tbody>\", '<tfoot id=\"grid-table-footer\"></tfoot>', \"</table>\"].join(\"\"))\n});\n\nexports.default = {\n    RepoStatus: ToolShedRepoStatusView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toolshedModel = __webpack_require__(167);\n\nvar _toolshedModel2 = _interopRequireDefault(_toolshedModel);\n\nvar _util = __webpack_require__(168);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function initialize(options) {\n        var that = this;\n        this.model = new _toolshedModel2.default.WorkflowTools();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function render(options) {\n        var that = this;\n        var workflows_missing_tools = that.templateWorkflows;\n        var workflows = that.model.models;\n        that.$el.html(workflows_missing_tools({\n            title: \"Workflows Missing Tools\",\n            workflows: workflows,\n            queue: _util2.default.queueLength()\n        }));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function bindEvents() {\n        var that = this;\n        var repository_id;\n        $(\".show_wf_repo\").on(\"click\", function () {\n            var tool_ids = $(this).attr(\"data-toolids\");\n            var toolshed = $(this).attr(\"data-shed\");\n            var api_url = Galaxy.root + \"api/tool_shed/repository\";\n            var params = { tool_ids: tool_ids };\n            $.get(api_url, params, function (data) {\n                repository_id = data.repository.id;\n                var new_route = \"repository/s/\" + toolshed.replace(/:/g, \"%3a\").replace(/\\//g, \"%2f\") + \"/r/\" + data.repository.id;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        });\n        $(\".queue_wf_repo\").on(\"click\", function () {\n            var elem = $(this);\n            var tool_ids = elem.attr(\"data-toolids\");\n            var toolshed = elem.attr(\"data-shed\");\n            var api_url = Galaxy.root + \"api/tool_shed/repository\";\n            var params = { tool_ids: tool_ids };\n            $.get(api_url, params, function (data) {\n                repository_id = data.repository.id;\n                params = {\n                    tool_shed_url: toolshed,\n                    repository_id: repository_id\n                };\n                $.get(api_url, params, function (data) {\n                    var changesets = Object.keys(data.repository.metadata);\n                    var current_changeset = changesets[0];\n                    var current_metadata = data.repository.metadata[current_changeset];\n                    current_metadata.tool_shed_url = toolshed;\n                    _util2.default.addToQueue(current_metadata);\n                    elem.remove();\n                });\n            });\n        });\n        $(\"#from_workflow\").on(\"click\", that.loadWorkflows);\n    },\n\n    reDraw: function reDraw(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateWorkflows: _.template(['<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">', '<div class=\"unified-panel-header-inner\"><%= title %></div>', '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>', \"</div>\", '<style type=\"text/css\">', \".workflow_names, .workflow_tools { list-style-type: none; } ul.workflow_tools, ul.workflow_names {  padding-left: 0px; }\", \"</style>\", '<table id=\"workflows_missing_tools\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">', '<thead id=\"grid-table-header\">', \"<tr>\", '<th class=\"datasetRow\">Workflows</th>', '<th class=\"datasetRow\">Tool IDs</th>', '<th class=\"datasetRow\">Shed</th>', '<th class=\"datasetRow\">Name</th>', '<th class=\"datasetRow\">Owner</th>', '<th class=\"datasetRow\">Actions</th>', \"</tr>\", \"</thead>\", \"<tbody>\", \"<% _.each(workflows, function(workflow) { %>\", \"<tr>\", '<td class=\"datasetRow\">', '<ul class=\"workflow_names\">', '<% _.each(workflow.get(\"workflows\"), function(name) { %>', '<li class=\"workflow_names\"><%= name %></li>', \"<% }); %>\", \"</ul>\", \"</td>\", '<td class=\"datasetRow\">', '<ul class=\"workflow_tools\">', '<% _.each(workflow.get(\"tools\"), function(tool) { %>', '<li class=\"workflow_tools\"><%= tool %></li>', \"<% }); %>\", \"</ul>\", \"</td>\", '<td class=\"datasetRow\"><%= workflow.get(\"shed\") %></td>', '<td class=\"datasetRow\"><%= workflow.get(\"repository\") %></td>', '<td class=\"datasetRow\"><%= workflow.get(\"owner\") %></td>', '<td class=\"datasetRow\">', '<ul class=\"workflow_tools\">', '<li class=\"workflow_tools\">', '<input type=\"button\" class=\"show_wf_repo btn btn-primary\" data-shed=\"<%= workflow.get(\"shed\") %>\" data-owner=\"<%= workflow.get(\"owner\") %>\" data-repo=\"<%= workflow.get(\"repository\") %>\" data-toolids=\"<%= workflow.get(\"tools\").join(\",\") %>\" value=\"Show Repository\" /></li>', \"</ul>\", \"</td>\", \"</tr>\", \"<% }); %>\", \"</ul>\", \"</div>\"].join(\"\"))\n});\n\nexports.default = {\n    Workflows: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiSelectDefault = __webpack_require__(22);\n\nvar _uiSelectDefault2 = _interopRequireDefault(_uiSelectDefault);\n\nvar _uiSlider = __webpack_require__(46);\n\nvar _uiSlider2 = _interopRequireDefault(_uiSlider);\n\nvar _uiOptions = __webpack_require__(23);\n\nvar _uiOptions2 = _interopRequireDefault(_uiOptions);\n\nvar _uiDrilldown = __webpack_require__(47);\n\nvar _uiDrilldown2 = _interopRequireDefault(_uiDrilldown);\n\nvar _uiButtons = __webpack_require__(12);\n\nvar _uiButtons2 = _interopRequireDefault(_uiButtons);\n\nvar _uiModal = __webpack_require__(9);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Label wrapper */\nvar Label = Backbone.View.extend({\n    tagName: \"label\",\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model(options);\n        this.tagName = options.tagName || this.tagName;\n        this.setElement($(\"<\" + this.tagName + \"/>\"));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    title: function title(new_title) {\n        this.model.set(\"title\", new_title);\n    },\n    value: function value() {\n        return this.model.get(\"title\");\n    },\n    render: function render() {\n        this.$el.removeClass().addClass(\"ui-label\").addClass(this.model.get(\"cls\")).html(this.model.get(\"title\"));\n        return this;\n    }\n});\n\n/** Displays messages used e.g. in the tool form */\n/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\nvar Message = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            message: null,\n            status: \"info\",\n            cls: \"\",\n            persistent: false,\n            fade: true\n        }).set(options);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    update: function update(options) {\n        this.model.set(options);\n    },\n    render: function render() {\n        this.$el.removeClass().addClass(\"ui-message\").addClass(this.model.get(\"cls\"));\n        var status = this.model.get(\"status\");\n        if (this.model.get(\"large\")) {\n            this.$el.addClass((status == \"success\" && \"done\" || status == \"danger\" && \"error\" || status) + \"messagelarge\");\n        } else {\n            this.$el.addClass(\"alert\").addClass(\"alert-\" + status);\n        }\n        if (this.model.get(\"message\")) {\n            this.$el.html(this.messageForDisplay());\n            this.$el[this.model.get(\"fade\") ? \"fadeIn\" : \"show\"]();\n            this.timeout && window.clearTimeout(this.timeout);\n            if (!this.model.get(\"persistent\")) {\n                var self = this;\n                this.timeout = window.setTimeout(function () {\n                    self.model.set(\"message\", \"\");\n                }, 3000);\n            }\n        } else {\n            this.$el.fadeOut();\n        }\n        return this;\n    },\n    messageForDisplay: function messageForDisplay() {\n        return _.escape(this.model.get(\"message\"));\n    }\n});\n\nvar UnescapedMessage = Message.extend({\n    messageForDisplay: function messageForDisplay() {\n        return this.model.get(\"message\");\n    }\n});\n\n/** Renders an input element used e.g. in the tool form */\nvar Input = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model({\n            type: \"text\",\n            placeholder: \"\",\n            disabled: false,\n            readonly: false,\n            visible: true,\n            cls: \"\",\n            area: false,\n            color: null,\n            style: null\n        }).set(options);\n        this.tagName = this.model.get(\"area\") ? \"textarea\" : \"input\";\n        this.setElement($(\"<\" + this.tagName + \"/>\"));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    events: {\n        input: \"_onchange\"\n    },\n    value: function value(new_val) {\n        new_val !== undefined && this.model.set(\"value\", typeof new_val === \"string\" ? new_val : \"\");\n        return this.model.get(\"value\");\n    },\n    render: function render() {\n        var self = this;\n        this.$el.removeClass().addClass(\"ui-\" + this.tagName).addClass(this.model.get(\"cls\")).addClass(this.model.get(\"style\")).attr(\"id\", this.model.id).attr(\"type\", this.model.get(\"type\")).attr(\"placeholder\", this.model.get(\"placeholder\")).css(\"color\", this.model.get(\"color\") || \"\").css(\"border-color\", this.model.get(\"color\") || \"\");\n        var datalist = this.model.get(\"datalist\");\n        if ($.isArray(datalist) && datalist.length > 0) {\n            this.$el.autocomplete({\n                source: function source(request, response) {\n                    response(self.model.get(\"datalist\"));\n                },\n                change: function change() {\n                    self._onchange();\n                }\n            });\n        }\n        if (this.model.get(\"value\") !== this.$el.val()) {\n            this.$el.val(this.model.get(\"value\"));\n        }\n        _.each([\"readonly\", \"disabled\"], function (attr_name) {\n            self.model.get(attr_name) ? self.$el.attr(attr_name, true) : self.$el.removeAttr(attr_name);\n        });\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        return this;\n    },\n    _onchange: function _onchange() {\n        this.value(this.$el.val());\n        this.model.get(\"onchange\") && this.model.get(\"onchange\")(this.model.get(\"value\"));\n    }\n});\n\n/** Creates a hidden element input field used e.g. in the tool form */\nvar Hidden = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options && options.model || new Backbone.Model(options);\n        this.setElement($(\"<div/>\").append(this.$info = $(\"<div/>\")).append(this.$hidden = $(\"<div/>\")));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    value: function value(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function render() {\n        this.$el.attr(\"id\", this.model.id);\n        this.$hidden.val(this.model.get(\"value\"));\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        return this;\n    }\n});\n\n/** Creates a upload element input field */\nvar Upload = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model(options);\n        this.setElement($(\"<div/>\").append(this.$info = $(\"<div/>\")).append(this.$file = $(\"<input/>\").attr(\"type\", \"file\").addClass(\"ui-margin-bottom\")).append(this.$text = $(\"<textarea/>\").addClass(\"ui-textarea\").attr(\"disabled\", true)).append(this.$wait = $(\"<i/>\").addClass(\"fa fa-spinner fa-spin\")));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.$file.on(\"change\", function (e) {\n            self._readFile(e);\n        });\n        this.render();\n    },\n    value: function value(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function render() {\n        this.$el.attr(\"id\", this.model.id);\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        this.model.get(\"value\") ? this.$text.text(this.model.get(\"value\")).show() : this.$text.hide();\n        this.model.get(\"wait\") ? this.$wait.show() : this.$wait.hide();\n        return this;\n    },\n    _readFile: function _readFile(e) {\n        var self = this;\n        var file = e.target.files && e.target.files[0];\n        if (file) {\n            var reader = new FileReader();\n            reader.onload = function () {\n                self.model.set({ wait: false, value: this.result });\n            };\n            this.model.set({ wait: true, value: null });\n            reader.readAsText(file);\n        }\n    }\n});\n\nexports.default = {\n    Button: _uiButtons2.default.ButtonDefault,\n    ButtonIcon: _uiButtons2.default.ButtonIcon,\n    ButtonCheck: _uiButtons2.default.ButtonCheck,\n    ButtonMenu: _uiButtons2.default.ButtonMenu,\n    ButtonLink: _uiButtons2.default.ButtonLink,\n    Input: Input,\n    Label: Label,\n    Message: Message,\n    UnescapedMessage: UnescapedMessage,\n    Upload: Upload,\n    Modal: _uiModal2.default,\n    RadioButton: _uiOptions2.default.RadioButton,\n    Checkbox: _uiOptions2.default.Checkbox,\n    Radio: _uiOptions2.default.Radio,\n    Select: _uiSelectDefault2.default,\n    Hidden: Hidden,\n    Slider: _uiSlider2.default,\n    Drilldown: _uiDrilldown2.default\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 43:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.options = _utils2.default.merge(options, {\n            content: \"No content available.\",\n            onchange: null,\n            ondblclick: null,\n            onconfirm: null,\n            cls: \"ui-table\",\n            selectable: true,\n            cls_tr: \"\"\n        });\n        this.setElement(this._template());\n        this.$thead = this.$(\"thead\");\n        this.$tbody = this.$(\"tbody\");\n        this.$tmessage = this.$(\"tmessage\");\n        this.row = this._row();\n        this.row_count = 0;\n    },\n\n    events: {\n        click: \"_onclick\",\n        dblclick: \"_ondblclick\"\n    },\n\n    /** Add cell to header row */\n    addHeader: function addHeader($el) {\n        this.row.append($(\"<th/>\").append($el));\n    },\n\n    /** Append header row to table */\n    appendHeader: function appendHeader() {\n        this.$thead.append(this.row);\n        this.row = $(\"<tr/>\");\n    },\n\n    /** Add cell to row */\n    add: function add($el, width, align) {\n        var wrapper = $(\"<td/>\");\n        if (width) {\n            wrapper.css(\"width\", width);\n        }\n        if (align) {\n            wrapper.css(\"text-align\", align);\n        }\n        this.row.append(wrapper.append($el));\n    },\n\n    /** Append row to table */\n    append: function append(id, fade) {\n        this._commit(id, fade, false);\n    },\n\n    /** Prepend row to table */\n    prepend: function prepend(id, fade) {\n        this._commit(id, fade, true);\n    },\n\n    /** Helper to get row element */\n    get: function get(id) {\n        return this.$(\"#\" + id);\n    },\n\n    /** Delete row by id */\n    del: function del(id) {\n        var item = this.$tbody.find(\"#\" + id);\n        if (item.length > 0) {\n            item.remove();\n            this.row_count--;\n            this._refresh();\n        }\n    },\n\n    /** Delete all rows */\n    delAll: function delAll() {\n        this.$tbody.empty();\n        this.row_count = 0;\n        this._refresh();\n    },\n\n    /** Set a value i.e. selects/highlights a particular row by id */\n    value: function value(new_value) {\n        if (this.options.selectable) {\n            this.before = this.$tbody.find(\".current\").attr(\"id\");\n            if (new_value !== undefined) {\n                this.$tbody.find(\"tr\").removeClass(\"current\");\n                if (new_value) {\n                    this.$tbody.find(\"#\" + new_value).addClass(\"current\");\n                }\n            }\n            var after = this.$tbody.find(\".current\").attr(\"id\");\n            if (after === undefined) {\n                return null;\n            } else {\n                if (after != this.before && this.options.onchange) {\n                    this.options.onchange(new_value);\n                }\n                return after;\n            }\n        }\n    },\n\n    /** Return the number of rows */\n    size: function size() {\n        return this.$tbody.find(\"tr\").length;\n    },\n\n    /** Helper to append rows */\n    _commit: function _commit(id, fade, prepend) {\n        this.del(id);\n        this.row.attr(\"id\", id);\n        if (prepend) {\n            this.$tbody.prepend(this.row);\n        } else {\n            this.$tbody.append(this.row);\n        }\n        if (fade) {\n            this.row.hide();\n            this.row.fadeIn();\n        }\n        this.row = this._row();\n        this.row_count++;\n        this._refresh();\n    },\n\n    /** Helper to create new row */\n    _row: function _row() {\n        return $(\"<tr class=\\\"\" + this.options.cls_tr + \"\\\"></tr>\");\n    },\n\n    /** Handles onclick events */\n    _onclick: function _onclick(e) {\n        var old_value = this.value();\n        var new_value = $(e.target).closest(\"tr\").attr(\"id\");\n        if (new_value != \"\") {\n            if (new_value && old_value != new_value) {\n                if (this.options.onconfirm) {\n                    this.options.onconfirm(new_value);\n                } else {\n                    this.value(new_value);\n                }\n            }\n        }\n    },\n\n    /** Handles ondblclick events */\n    _ondblclick: function _ondblclick(e) {\n        var value = this.value();\n        if (value && this.options.ondblclick) {\n            this.options.ondblclick(value);\n        }\n    },\n\n    /** Refresh helper */\n    _refresh: function _refresh() {\n        if (this.row_count == 0) {\n            this.$tmessage.show();\n        } else {\n            this.$tmessage.hide();\n        }\n    },\n\n    /** Template */\n    _template: function _template() {\n        return \"<div><table class=\\\"\" + this.options.cls + \"\\\"><thead/><tbody/></table><tmessage>\" + this.options.content + \"</tmessage><div>\";\n    }\n}); /** This class creates a ui table element. */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Manager = Backbone.Model.extend({\n    initialize: function initialize(app) {\n        this.app = app;\n    },\n\n    /** Creates a checksum. */\n    checksum: function checksum() {\n        var sum = \"\";\n        var self = this;\n        this.app.section.$el.find(\".section-row\").each(function () {\n            var id = $(this).attr(\"id\");\n            var field = self.app.field_list[id];\n            if (field) {\n                sum += id + \":\" + JSON.stringify(field.value && field.value()) + \":\" + field.collapsed + \";\";\n            }\n        });\n        return sum;\n    },\n\n    /** Convert dom into a dictionary of flat id/value pairs used e.g. on job submission. */\n    create: function create() {\n        var self = this;\n\n        // get raw dictionary from dom\n        var dict = {};\n        this._iterate(this.app.section.$el, dict);\n\n        // add to result dictionary, label elements\n        var result_dict = {};\n        this.flat_dict = {};\n        function add(flat_id, input_id, input_value) {\n            self.flat_dict[flat_id] = input_id;\n            result_dict[flat_id] = input_value;\n            self.app.element_list[input_id] && self.app.element_list[input_id].$el.attr(\"tour_id\", flat_id);\n        }\n        // converter between raw dictionary and job dictionary\n        function convert(identifier, head) {\n            for (var index in head) {\n                var node = head[index];\n                if (node.input) {\n                    var input = node.input;\n                    var flat_id = identifier;\n                    if (identifier != \"\") {\n                        flat_id += \"|\";\n                    }\n                    flat_id += input.name;\n                    switch (input.type) {\n                        case \"repeat\":\n                            var section_label = \"section-\";\n                            var block_indices = [];\n                            var block_prefix = null;\n                            for (var block_label in node) {\n                                var pos = block_label.indexOf(section_label);\n                                if (pos != -1) {\n                                    pos += section_label.length;\n                                    block_indices.push(parseInt(block_label.substr(pos)));\n                                    if (!block_prefix) {\n                                        block_prefix = block_label.substr(0, pos);\n                                    }\n                                }\n                            }\n                            block_indices.sort(function (a, b) {\n                                return a - b;\n                            });\n                            var index = 0;\n                            for (var i in block_indices) {\n                                convert(flat_id + \"_\" + index++, node[block_prefix + block_indices[i]]);\n                            }\n                            break;\n                        case \"conditional\":\n                            var value = self.app.field_list[input.id].value();\n                            add(flat_id + \"|\" + input.test_param.name, input.id, value);\n                            var selectedCase = _matchCase(input, value);\n                            if (selectedCase != -1) {\n                                convert(flat_id, head[input.id + \"-section-\" + selectedCase]);\n                            }\n                            break;\n                        case \"section\":\n                            convert(!input.flat && flat_id || \"\", node);\n                            break;\n                        default:\n                            var field = self.app.field_list[input.id];\n                            if (field && field.value) {\n                                var value = field.value();\n                                if (input.ignore === undefined || input.ignore != value) {\n                                    if (field.collapsed && input.collapsible_value) {\n                                        value = input.collapsible_value;\n                                    }\n                                    add(flat_id, input.id, value);\n                                    if (input.payload) {\n                                        for (var p_id in input.payload) {\n                                            add(p_id, input.id, input.payload[p_id]);\n                                        }\n                                    }\n                                }\n                            }\n                    }\n                }\n            }\n        }\n        convert(\"\", dict);\n        return result_dict;\n    },\n\n    /** Matches flat ids to corresponding input element\n     * @param{string} flat_id - Flat input id to be looked up.\n     */\n    match: function match(flat_id) {\n        return this.flat_dict && this.flat_dict[flat_id];\n    },\n\n    /** Match conditional values to selected cases\n     */\n    matchCase: function matchCase(input, value) {\n        return _matchCase(input, value);\n    },\n\n    /** Matches a new tool model to the current input elements e.g. used to update dynamic options\n     */\n    matchModel: function matchModel(model, callback) {\n        var self = this;\n        visitInputs(model.inputs, function (input, name) {\n            self.flat_dict[name] && callback(input, self.flat_dict[name]);\n        });\n    },\n\n    /** Matches identifier from api response to input elements e.g. used to display validation errors\n     */\n    matchResponse: function matchResponse(response) {\n        var result = {};\n        var self = this;\n        function search(id, head) {\n            if (typeof head === \"string\") {\n                var input_id = self.flat_dict[id];\n                input_id && (result[input_id] = head);\n            } else {\n                for (var i in head) {\n                    var new_id = i;\n                    if (id !== \"\") {\n                        var separator = \"|\";\n                        if (head instanceof Array) {\n                            separator = \"_\";\n                        }\n                        new_id = id + separator + new_id;\n                    }\n                    search(new_id, head[i]);\n                }\n            }\n        }\n        search(\"\", response);\n        return result;\n    },\n\n    /** Map dom tree to dictionary tree with input elements.\n     */\n    _iterate: function _iterate(parent, dict) {\n        var self = this;\n        var children = $(parent).children();\n        children.each(function () {\n            var child = this;\n            var id = $(child).attr(\"id\");\n            if ($(child).hasClass(\"section-row\")) {\n                var input = self.app.input_list[id];\n                dict[id] = input && { input: input } || {};\n                self._iterate(child, dict[id]);\n            } else {\n                self._iterate(child, dict);\n            }\n        });\n    }\n});\n\n/** Match conditional values to selected cases\n * @param{dict}   input     - Definition of conditional input parameter\n * @param{dict}   value     - Current value\n */\n/* This class maps the form dom to an api compatible javascript dictionary. */\nvar _matchCase = function _matchCase(input, value) {\n    if (input.test_param.type == \"boolean\") {\n        if (value == \"true\") {\n            value = input.test_param.truevalue || \"true\";\n        } else {\n            value = input.test_param.falsevalue || \"false\";\n        }\n    }\n    for (var i in input.cases) {\n        if (input.cases[i].value == value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/** Visits tool inputs\n * @param{dict}   inputs    - Nested dictionary of input elements\n * @param{dict}   callback  - Called with the mapped dictionary object and corresponding model node\n */\nvar visitInputs = function visitInputs(inputs, callback, prefix, context) {\n    context = $.extend(true, {}, context);\n    _.each(inputs, function (input) {\n        if (input && input.type && input.name) {\n            context[input.name] = input;\n        }\n    });\n    for (var key in inputs) {\n        var node = inputs[key];\n        node.name = node.name || key;\n        var name = prefix ? prefix + \"|\" + node.name : node.name;\n        switch (node.type) {\n            case \"repeat\":\n                _.each(node.cache, function (cache, j) {\n                    visitInputs(cache, callback, name + \"_\" + j, context);\n                });\n                break;\n            case \"conditional\":\n                if (node.test_param) {\n                    callback(node.test_param, name + \"|\" + node.test_param.name, context);\n                    var selectedCase = _matchCase(node, node.test_param.value);\n                    if (selectedCase != -1) {\n                        visitInputs(node.cases[selectedCase].inputs, callback, name, context);\n                    } else {\n                        Galaxy.emit.debug(\"form-data::visitInputs() - Invalid case for \" + name + \".\");\n                    }\n                } else {\n                    Galaxy.emit.debug(\"form-data::visitInputs() - Conditional test parameter missing for \" + name + \".\");\n                }\n                break;\n            case \"section\":\n                visitInputs(node.inputs, callback, name, context);\n                break;\n            default:\n                callback(node, name, context);\n        }\n    }\n};\n\nexports.default = {\n    Manager: Manager,\n    visitInputs: visitInputs\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 46:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            id: _utils2.default.uid(),\n            min: null,\n            max: null,\n            step: null,\n            precise: false,\n            split: 10000,\n            value: null,\n            onchange: function onchange() {}\n        }).set(options);\n\n        // create new element\n        this.setElement(this._template());\n        this.$el.attr(\"id\", this.model.id);\n        this.$text = this.$(\".ui-form-slider-text\");\n        this.$slider = this.$(\".ui-form-slider-element\");\n\n        // add text field event\n        var pressed = [];\n        this.$text.on(\"change\", function () {\n            self.value($(this).val());\n        }).on(\"keyup\", function (e) {\n            pressed[e.which] = false;\n        }).on(\"keydown\", function (e) {\n            var v = e.which;\n            pressed[v] = true;\n            if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                self.value(\"$\");\n                event.preventDefault();\n            } else if (!(v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || v >= 48 && v <= 57 && !pressed[16] || v >= 96 && v <= 105 || (v == 190 || v == 110) && $(this).val().indexOf(\".\") == -1 && self.model.get(\"precise\") || (v == 189 || v == 109) && $(this).val().indexOf(\"-\") == -1 || self._isParameter($(this).val()) || pressed[91] || pressed[17])) {\n                event.preventDefault();\n            }\n        });\n\n        // build slider, cannot be rebuild in render\n        var opts = this.model.attributes;\n        this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n        var step = opts.step;\n        if (!step) {\n            if (opts.precise && this.has_slider) {\n                step = (opts.max - opts.min) / opts.split;\n            } else {\n                step = 1.0;\n            }\n        }\n        if (this.has_slider) {\n            this.$text.addClass(\"ui-form-slider-left\");\n            this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on(\"slide\", function (event, ui) {\n                self.value(ui.value);\n            });\n        } else {\n            this.$slider.hide();\n        }\n\n        // add listeners\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function render() {\n        var value = this.model.get(\"value\");\n        this.has_slider && this.$slider.slider(\"value\", value);\n        value !== this.$text.val() && this.$text.val(value);\n    },\n\n    /** Set and return the current value */\n    value: function value(new_val) {\n        var options = this.model.attributes;\n        if (new_val !== undefined) {\n            if (new_val !== null && new_val !== \"\" && !this._isParameter(new_val)) {\n                isNaN(new_val) && (new_val = 0);\n                !options.precise && (new_val = Math.round(new_val));\n                options.max !== null && (new_val = Math.min(new_val, options.max));\n                options.min !== null && (new_val = Math.max(new_val, options.min));\n            }\n            this.model.set(\"value\", new_val);\n            this.model.trigger(\"change\");\n            options.onchange(new_val);\n        }\n        return this.model.get(\"value\");\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name') */\n    _isParameter: function _isParameter(value) {\n        return this.model.get(\"is_workflow\") && String(value).substring(0, 1) === \"$\";\n    },\n\n    /** Slider template */\n    _template: function _template() {\n        return '<div class=\"ui-form-slider\">' + '<input class=\"ui-form-slider-text\" type=\"text\"/>' + '<div class=\"ui-form-slider-element\"/>' + \"</div>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 47:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiOptions = __webpack_require__(23);\n\nvar _uiOptions2 = _interopRequireDefault(_uiOptions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This class creates/wraps a drill down element. */\nvar View = _uiOptions2.default.BaseIcons.extend({\n    initialize: function initialize(options) {\n        options.type = options.display || \"checkbox\";\n        options.multiple = options.type == \"checkbox\";\n        _uiOptions2.default.BaseIcons.prototype.initialize.call(this, options);\n    },\n\n    /** Set states for selected values */\n    _setValue: function _setValue(new_value) {\n        _uiOptions2.default.BaseIcons.prototype._setValue.call(this, new_value);\n        if (new_value !== undefined && new_value !== null && this.header_index) {\n            var self = this;\n            var values = $.isArray(new_value) ? new_value : [new_value];\n            _.each(values, function (v) {\n                var list = self.header_index[v];\n                _.each(list, function (element) {\n                    self._setState(element, true);\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function _setState(header_id, is_expanded) {\n        var $button = this.$(\".button-\" + header_id);\n        var $subgroup = this.$(\".subgroup-\" + header_id);\n        $button.data(\"is_expanded\", is_expanded);\n        if (is_expanded) {\n            $subgroup.show();\n            $button.removeClass(\"fa-plus-square\").addClass(\"fa-minus-square\");\n        } else {\n            $subgroup.hide();\n            $button.removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\");\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function _templateOptions() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach($el, header_id) {\n            var $button = $el.find(\".button-\" + header_id);\n            $button.on(\"click\", function () {\n                self._setState(header_id, !$button.data(\"is_expanded\"));\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate($tmpl, options, header) {\n            header = header || [];\n            for (var i in options) {\n                var level = options[i];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice(0);\n                self.header_index[level.value] = new_header.slice(0);\n                var $group = $(\"<div/>\");\n                if (has_options) {\n                    var header_id = _utils2.default.uid();\n                    var $button = $(\"<span/>\").addClass(\"button-\" + header_id).addClass(\"ui-drilldown-button fa fa-plus-square\");\n                    var $subgroup = $(\"<div/>\").addClass(\"subgroup-\" + header_id).addClass(\"ui-drilldown-subgroup\");\n                    $group.append($(\"<div/>\").append($button).append(self._templateOption({\n                        label: level.name,\n                        value: level.value\n                    })));\n                    new_header.push(header_id);\n                    iterate($subgroup, level.options, new_header);\n                    $group.append($subgroup);\n                    attach($group, header_id);\n                } else {\n                    $group.append(self._templateOption({\n                        label: level.name,\n                        value: level.value\n                    }));\n                }\n                $tmpl.append($group);\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $(\"<div/>\");\n        iterate($tmpl, this.model.get(\"data\"));\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"ui-options-list drilldown-container\").attr(\"id\", this.model.id);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 48:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiPortlet = __webpack_require__(11);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _formRepeat = __webpack_require__(49);\n\nvar _formRepeat2 = _interopRequireDefault(_formRepeat);\n\nvar _formInput = __webpack_require__(50);\n\nvar _formInput2 = _interopRequireDefault(_formInput);\n\nvar _formParameters = __webpack_require__(51);\n\nvar _formParameters2 = _interopRequireDefault(_formParameters);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n*/\nvar View = Backbone.View.extend({\n    initialize: function initialize(app, options) {\n        this.app = app;\n        this.inputs = options.inputs;\n        this.parameters = new _formParameters2.default();\n        this.setElement($(\"<div/>\"));\n        this.render();\n    },\n\n    /** Render section view */\n    render: function render() {\n        var self = this;\n        this.$el.empty();\n        _.each(this.inputs, function (input) {\n            self.add(input);\n        });\n    },\n\n    /** Add a new input element */\n    add: function add(input) {\n        var input_def = jQuery.extend(true, {}, input);\n        input_def.id = input.id = _utils2.default.uid();\n        this.app.input_list[input_def.id] = input_def;\n        switch (input_def.type) {\n            case \"conditional\":\n                this._addConditional(input_def);\n                break;\n            case \"repeat\":\n                this._addRepeat(input_def);\n                break;\n            case \"section\":\n                this._addSection(input_def);\n                break;\n            default:\n                this._addRow(input_def);\n        }\n    },\n\n    /** Add a conditional block */\n    _addConditional: function _addConditional(input_def) {\n        var self = this;\n        input_def.test_param.id = input_def.id;\n        this.app.model.get(\"sustain_conditionals\") && (input_def.test_param.disabled = true);\n        var field = this._addRow(input_def.test_param);\n\n        // set onchange event for test parameter\n        field.model && field.model.set(\"onchange\", function (value) {\n            var selectedCase = self.app.data.matchCase(input_def, value);\n            for (var i in input_def.cases) {\n                var case_def = input_def.cases[i];\n                var section_row = self.$(\"#\" + input_def.id + \"-section-\" + i);\n                var nonhidden = false;\n                for (var j in case_def.inputs) {\n                    if (!case_def.inputs[j].hidden) {\n                        nonhidden = true;\n                        break;\n                    }\n                }\n                if (i == selectedCase && nonhidden) {\n                    section_row.fadeIn(\"fast\");\n                } else {\n                    section_row.hide();\n                }\n            }\n            self.app.trigger(\"change\");\n        });\n\n        // add conditional sub sections\n        for (var i in input_def.cases) {\n            var sub_section = new View(this.app, {\n                inputs: input_def.cases[i].inputs\n            });\n            this._append(sub_section.$el.addClass(\"ui-form-section\"), input_def.id + \"-section-\" + i);\n        }\n\n        // trigger refresh on conditional input field after all input elements have been created\n        field.trigger(\"change\");\n    },\n\n    /** Add a repeat block */\n    _addRepeat: function _addRepeat(input_def) {\n        var self = this;\n        var block_index = 0;\n\n        // create repeat block element\n        var repeat = new _formRepeat2.default.View({\n            title: input_def.title || \"Repeat\",\n            min: input_def.min,\n            max: input_def.max,\n            onnew: function onnew() {\n                create(input_def.inputs);\n                self.app.trigger(\"change\");\n            }\n        });\n\n        // helper function to create new repeat blocks\n        function create(inputs) {\n            var sub_section_id = input_def.id + \"-section-\" + block_index++;\n            var sub_section = new View(self.app, { inputs: inputs });\n            repeat.add({\n                id: sub_section_id,\n                $el: sub_section.$el,\n                ondel: function ondel() {\n                    repeat.del(sub_section_id);\n                    self.app.trigger(\"change\");\n                }\n            });\n        }\n\n        //\n        // add parsed/minimum number of repeat blocks\n        //\n        var n_cache = _.size(input_def.cache);\n        for (var i = 0; i < Math.max(Math.max(n_cache, input_def.min || 0), input_def.default || 0); i++) {\n            create(i < n_cache ? input_def.cache[i] : input_def.inputs);\n        }\n\n        // hide options\n        this.app.model.get(\"sustain_repeats\") && repeat.hideOptions();\n\n        // create input field wrapper\n        var input_element = new _formInput2.default(this.app, {\n            label: input_def.title || input_def.name,\n            help: input_def.help,\n            field: repeat\n        });\n        this._append(input_element.$el, input_def.id);\n    },\n\n    /** Add a customized section */\n    _addSection: function _addSection(input_def) {\n        var portlet = new _uiPortlet2.default.View({\n            title: input_def.title || input_def.name,\n            cls: \"ui-portlet-section\",\n            collapsible: true,\n            collapsible_button: true,\n            collapsed: !input_def.expanded\n        });\n        portlet.append(new View(this.app, { inputs: input_def.inputs }).$el);\n        portlet.append($(\"<div/>\").addClass(\"ui-form-info\").html(input_def.help));\n        this.app.on(\"expand\", function (input_id) {\n            portlet.$(\"#\" + input_id).length > 0 && portlet.expand();\n        });\n        this._append(portlet.$el, input_def.id);\n    },\n\n    /** Add a single input field element */\n    _addRow: function _addRow(input_def) {\n        var self = this;\n        var id = input_def.id;\n        input_def.onchange = input_def.onchange || function () {\n            self.app.trigger(\"change\", id);\n        };\n        var field = this.parameters.create(input_def);\n        this.app.field_list[id] = field;\n        var input_element = new _formInput2.default(this.app, {\n            name: input_def.name,\n            label: input_def.hide_label ? \"\" : input_def.label || input_def.name,\n            value: input_def.value,\n            text_value: input_def.text_value,\n            collapsible_value: input_def.collapsible_value,\n            collapsible_preview: input_def.collapsible_preview,\n            help: input_def.help,\n            argument: input_def.argument,\n            disabled: input_def.disabled,\n            color: input_def.color,\n            style: input_def.style,\n            backdrop: input_def.backdrop,\n            hidden: input_def.hidden,\n            fixed: input_def.fixed,\n            field: field\n        });\n        this.app.element_list[id] = input_element;\n        this._append(input_element.$el, input_def.id);\n        return field;\n    },\n\n    /** Append a new element to the form i.e. input element, repeat block, conditionals etc. */\n    _append: function _append($el, id) {\n        this.$el.append($el.addClass(\"section-row\").attr(\"id\", id));\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 49:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPortlet = __webpack_require__(11);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.list = {};\n        this.options = _utils2.default.merge(options, {\n            title: \"Repeat\",\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa-plus\",\n            title: \"Insert \" + this.options.title,\n            tooltip: \"Add new \" + this.options.title + \" block\",\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function onclick() {\n                options.onnew && options.onnew();\n            }\n        });\n        this.setElement($(\"<div/>\").append(this.$list = $(\"<div/>\")).append($(\"<div/>\").append(this.button_new.$el)));\n    },\n\n    /** Number of repeat blocks */\n    size: function size() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function add(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\"form-repeat::add()\", \"Duplicate or invalid repeat block id.\");\n            return;\n        }\n        var button_delete = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: \"Delete this repeat block\",\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function onclick() {\n                options.ondel && options.ondel();\n            }\n        });\n        var portlet = new _uiPortlet2.default.View({\n            id: options.id,\n            title: \"placeholder\",\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        this.options.max > 0 && this.size() >= this.options.max && this.button_new.disable();\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function del(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(\"#\" + id).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function delAll() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function hideOptions() {\n        this.button_new.$el.hide();\n        _.each(this.list, function (portlet) {\n            portlet.hideOperation(\"button_delete\");\n        });\n        _.isEmpty(this.list) && this.$el.append($(\"<div/>\").addClass(\"ui-form-info\").html(this.options.empty_text));\n    },\n\n    /** Refresh view */\n    _refresh: function _refresh() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(++index + \": \" + this.options.title);\n            portlet[this.size() > this.options.min ? \"showOperation\" : \"hideOperation\"](\"button_delete\");\n        }\n    }\n}); /** This class creates a ui component which enables the dynamic creation of portlets */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 50:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n    This class creates a form input element wrapper\n*/\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = options && options.field || new Backbone.View();\n        this.model = options && options.model || new Backbone.Model({\n            text_enable: this.app_options.text_enable || \"Enable\",\n            text_disable: this.app_options.text_disable || \"Disable\",\n            cls_enable: this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n            cls_disable: this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n            always_refresh: this.app_options.always_refresh\n        }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed = collapsible_value !== undefined && JSON.stringify(this.model.get(\"value\")) == JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", function () {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", function () {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function backdrop() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function error(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function reset() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function render() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (help_argument && help_text.indexOf(\"(\" + help_argument + \")\") == -1) {\n            help_text += \" (\" + help_argument + \")\";\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview[this.field.collapsed && this.model.get(\"collapsible_preview\") || this.model.get(\"disabled\") ? \"show\" : \"hide\"]().html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\") ? this.$field.hide() : this.$field.show();\n        // render input field color and style\n        this.field.model && this.field.model.set({\n            color: this.model.get(\"color\"),\n            style: this.model.get(\"style\")\n        });\n        // render collapsible options\n        if (!this.model.get(\"disabled\") && this.model.get(\"collapsible_value\") !== undefined) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon.removeClass().addClass(\"icon\").addClass(this.model.get(\"cls_\" + collapsible_state)).attr(\"data-original-title\", this.model.get(\"text_\" + collapsible_state)).tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"ui-form-element\").append($(\"<div/>\").addClass(\"ui-form-error ui-error\").append($(\"<span/>\").addClass(\"fa fa-arrow-down\")).append($(\"<span/>\").addClass(\"ui-form-error-text\"))).append($(\"<div/>\").addClass(\"ui-form-title\").append($(\"<div/>\").addClass(\"ui-form-collapsible\").append($(\"<i/>\").addClass(\"ui-form-collapsible-icon\")).append($(\"<span/>\").addClass(\"ui-form-collapsible-text\"))).append($(\"<span/>\").addClass(\"ui-form-title-text\"))).append($(\"<div/>\").addClass(\"ui-form-field\").append($(\"<span/>\").addClass(\"ui-form-info\")).append($(\"<div/>\").addClass(\"ui-form-backdrop\"))).append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 51:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiSelectContent = __webpack_require__(52);\n\nvar _uiSelectContent2 = _interopRequireDefault(_uiSelectContent);\n\nvar _uiSelectLibrary = __webpack_require__(53);\n\nvar _uiSelectLibrary2 = _interopRequireDefault(_uiSelectLibrary);\n\nvar _uiSelectFtp = __webpack_require__(54);\n\nvar _uiSelectFtp2 = _interopRequireDefault(_uiSelectFtp);\n\nvar _uiSelectGenomespace = __webpack_require__(55);\n\nvar _uiSelectGenomespace2 = _interopRequireDefault(_uiSelectGenomespace);\n\nvar _uiColorPicker = __webpack_require__(57);\n\nvar _uiColorPicker2 = _interopRequireDefault(_uiColorPicker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// create form view\nexports.default = Backbone.Model.extend({\n    /** Available parameter types */\n    types: {\n        text: \"_fieldText\",\n        password: \"_fieldText\",\n        select: \"_fieldSelect\",\n        data_column: \"_fieldSelect\",\n        genomebuild: \"_fieldSelect\",\n        data: \"_fieldData\",\n        data_collection: \"_fieldData\",\n        integer: \"_fieldSlider\",\n        float: \"_fieldSlider\",\n        boolean: \"_fieldBoolean\",\n        drill_down: \"_fieldDrilldown\",\n        color: \"_fieldColor\",\n        hidden: \"_fieldHidden\",\n        hidden_data: \"_fieldHidden\",\n        baseurl: \"_fieldHidden\",\n        library_data: \"_fieldLibrary\",\n        ftpfile: \"_fieldFtp\",\n        upload: \"_fieldUpload\",\n        genomespacefile: \"_fieldGenomeSpace\"\n    },\n\n    /** Returns an input field for a given field type */\n    create: function create(input_def) {\n        var fieldClass = this.types[input_def.type];\n        var field = typeof this[fieldClass] === \"function\" ? this[fieldClass].call(this, input_def) : null;\n        if (!field) {\n            field = input_def.options ? this._fieldSelect(input_def) : this._fieldText(input_def);\n            Galaxy.emit.debug(\"form-parameters::_addRow()\", \"Auto matched field type (\" + input_def.type + \").\");\n        }\n        input_def.value === undefined && (input_def.value = null);\n        field.value(input_def.value);\n        return field;\n    },\n\n    /** Data input field */\n    _fieldData: function _fieldData(input_def) {\n        return new _uiSelectContent2.default.View({\n            id: \"field-\" + input_def.id,\n            extensions: input_def.extensions,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            type: input_def.type,\n            flavor: input_def.flavor,\n            data: input_def.options,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Select/Checkbox/Radio options field */\n    _fieldSelect: function _fieldSelect(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // customize properties\n        if (input_def.type == \"data_column\") {\n            input_def.error_text = \"Missing columns in referenced dataset.\";\n        }\n\n        // identify available options\n        var data = input_def.data;\n        if (!data) {\n            data = [];\n            _.each(input_def.options, function (option) {\n                data.push({ label: option[0], value: option[1] });\n            });\n        }\n\n        // identify display type\n        var SelectClass = _uiMisc2.default.Select;\n        switch (input_def.display) {\n            case \"checkboxes\":\n                SelectClass = _uiMisc2.default.Checkbox;\n                break;\n            case \"radio\":\n                SelectClass = _uiMisc2.default.Radio;\n                break;\n            case \"radiobutton\":\n                SelectClass = _uiMisc2.default.RadioButton;\n                break;\n        }\n\n        // create select field\n        return new SelectClass.View({\n            id: \"field-\" + input_def.id,\n            data: data,\n            error_text: input_def.error_text || \"No options available\",\n            readonly: input_def.readonly,\n            multiple: input_def.multiple,\n            optional: input_def.optional,\n            onchange: input_def.onchange,\n            individual: input_def.individual,\n            searchable: input_def.flavor !== \"workflow\"\n        });\n    },\n\n    /** Drill down options field */\n    _fieldDrilldown: function _fieldDrilldown(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // create drill down field\n        return new _uiMisc2.default.Drilldown.View({\n            id: \"field-\" + input_def.id,\n            data: input_def.options,\n            display: input_def.display,\n            optional: input_def.optional,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Text input field */\n    _fieldText: function _fieldText(input_def) {\n        // field replaces e.g. a select field\n        if (input_def.options && input_def.data) {\n            input_def.area = input_def.multiple;\n            if (_utils2.default.isEmpty(input_def.value)) {\n                input_def.value = null;\n            } else {\n                if ($.isArray(input_def.value)) {\n                    var str_value = \"\";\n                    for (var i in input_def.value) {\n                        str_value += String(input_def.value[i]);\n                        if (!input_def.multiple) {\n                            break;\n                        }\n                        str_value += \"\\n\";\n                    }\n                    input_def.value = str_value;\n                }\n            }\n        }\n        // create input element\n        return new _uiMisc2.default.Input({\n            id: \"field-\" + input_def.id,\n            type: input_def.type,\n            area: input_def.area,\n            readonly: input_def.readonly,\n            placeholder: input_def.placeholder,\n            datalist: input_def.datalist,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Slider field */\n    _fieldSlider: function _fieldSlider(input_def) {\n        return new _uiMisc2.default.Slider.View({\n            id: \"field-\" + input_def.id,\n            precise: input_def.type == \"float\",\n            is_workflow: input_def.is_workflow,\n            min: input_def.min,\n            max: input_def.max,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Hidden field */\n    _fieldHidden: function _fieldHidden(input_def) {\n        return new _uiMisc2.default.Hidden({\n            id: \"field-\" + input_def.id,\n            info: input_def.info\n        });\n    },\n\n    /** Boolean field */\n    _fieldBoolean: function _fieldBoolean(input_def) {\n        return new _uiMisc2.default.RadioButton.View({\n            id: \"field-\" + input_def.id,\n            data: [{ label: \"Yes\", value: \"true\" }, { label: \"No\", value: \"false\" }],\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Color picker field */\n    _fieldColor: function _fieldColor(input_def) {\n        return new _uiColorPicker2.default({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Library dataset field */\n    _fieldLibrary: function _fieldLibrary(input_def) {\n        return new _uiSelectLibrary2.default.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** FTP file field */\n    _fieldFtp: function _fieldFtp(input_def) {\n        return new _uiSelectFtp2.default.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** GenomeSpace file select field\n     */\n    _fieldGenomeSpace: function _fieldGenomeSpace(input_def) {\n        var self = this;\n        return new _uiSelectGenomespace2.default.View({\n            id: \"field-\" + input_def.id,\n            onchange: function onchange() {\n                self.app.trigger(\"change\");\n            }\n        });\n    },\n\n    /** Upload file field */\n    _fieldUpload: function _fieldUpload(input_def) {\n        return new _uiMisc2.default.Upload({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    }\n}); /**\n        This class creates input elements. New input parameter types should be added to the types dictionary.\n    */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiSelectDefault = __webpack_require__(22);\n\nvar _uiSelectDefault2 = _interopRequireDefault(_uiSelectDefault);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Batch mode variations */\nvar Batch = { DISABLED: \"disabled\", ENABLED: \"enabled\", LINKED: \"linked\" };\n\n/** List of available content selectors options */\nvar Configurations = {\n    data: [{\n        src: \"hda\",\n        icon: \"fa-file-o\",\n        tooltip: \"Single dataset\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }, {\n        src: \"hda\",\n        icon: \"fa-files-o\",\n        tooltip: \"Multiple datasets\",\n        multiple: true,\n        batch: Batch.LINKED\n    }, {\n        src: \"hdca\",\n        icon: \"fa-folder-o\",\n        tooltip: \"Dataset collection\",\n        multiple: false,\n        batch: Batch.LINKED\n    }],\n    data_multiple: [{\n        src: \"hda\",\n        icon: \"fa-files-o\",\n        tooltip: \"Multiple datasets\",\n        multiple: true,\n        batch: Batch.DISABLED\n    }, {\n        src: \"hdca\",\n        icon: \"fa-folder-o\",\n        tooltip: \"Dataset collections\",\n        multiple: true,\n        batch: Batch.DISABLED\n    }],\n    data_collection: [{\n        src: \"hdca\",\n        icon: \"fa-folder-o\",\n        tooltip: \"Dataset collection\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }],\n    workflow_data: [{\n        src: \"hda\",\n        icon: \"fa-file-o\",\n        tooltip: \"Single dataset\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }],\n    workflow_data_multiple: [{\n        src: \"hda\",\n        icon: \"fa-files-o\",\n        tooltip: \"Multiple datasets\",\n        multiple: true,\n        batch: Batch.DISABLED\n    }],\n    workflow_data_collection: [{\n        src: \"hdca\",\n        icon: \"fa-folder-o\",\n        tooltip: \"Dataset collection\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }],\n    module_data: [{\n        src: \"hda\",\n        icon: \"fa-file-o\",\n        tooltip: \"Single dataset\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }, {\n        src: \"hda\",\n        icon: \"fa-files-o\",\n        tooltip: \"Multiple datasets\",\n        multiple: true,\n        batch: Batch.ENABLED\n    }],\n    module_data_collection: [{\n        src: \"hdca\",\n        icon: \"fa-folder-o\",\n        tooltip: \"Dataset collection\",\n        multiple: false,\n        batch: Batch.DISABLED\n    }, {\n        src: \"hdca\",\n        icon: \"fa-folder\",\n        tooltip: \"Multiple collections\",\n        multiple: true,\n        batch: Batch.ENABLED\n    }]\n};\n\n/** View for hda and hdca content selector ui elements */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            src_labels: { hda: \"dataset\", hdca: \"dataset collection\" },\n            pagelimit: 100,\n            statustimer: 1000\n        }).set(options);\n        this.setElement($(\"<div/>\").addClass(\"ui-select-content\"));\n        this.button_product = new _uiMisc2.default.RadioButton.View({\n            value: \"false\",\n            data: [{\n                icon: \"fa fa-chain\",\n                value: \"false\",\n                tooltip: \"Linked inputs will be run in matched order with other datasets e.g. use this for matching forward and reverse reads.\"\n            }, {\n                icon: \"fa fa-chain-broken\",\n                value: \"true\",\n                tooltip: \"Unlinked dataset inputs will be run against *all* other inputs.\"\n            }]\n        });\n        var $batch_div = $(\"<div/>\").addClass(\"ui-form-info\").append($(\"<i/>\").addClass(\"fa fa-sitemap\")).append($(\"<span/>\").html(\"This is a batch mode input field. Separate jobs will be triggered for each dataset selection.\"));\n        this.$batch = {\n            linked: $batch_div.clone(),\n            enabled: $batch_div.clone().append($(\"<div/>\").append($(\"<div/>\").addClass(\"ui-form-title\").html(\"Batch options:\")).append(this.button_product.$el)).append($(\"<div/>\").css(\"clear\", \"both\"))\n        };\n\n        // add drag-drop event handlers\n        this.$el.on(\"dragenter\", function (e) {\n            this.lastenter = e.target;\n            self.$el.addClass(\"ui-dragover\");\n        }).on(\"dragover\", function (e) {\n            e.preventDefault();\n        }).on(\"dragleave\", function (e) {\n            this.lastenter === e.target && self.$el.removeClass(\"ui-dragover\");\n        }).on(\"drop\", function (e) {\n            self._handleDrop(e);\n        });\n\n        // track current history elements\n        this.history = {};\n\n        // add listeners\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:current\", this._changeCurrent, this);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:type change:optional change:multiple change:extensions\", this._changeType, this);\n        this.render();\n\n        // add change event\n        this.on(\"change\", function () {\n            options.onchange && options.onchange(self.value());\n        });\n    },\n\n    render: function render() {\n        this._changeType();\n        this._changeValue();\n        this._changeWait();\n    },\n\n    /** Indicate that select fields are being updated */\n    wait: function wait() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Indicate that the options update has been completed */\n    unwait: function unwait() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Update data representing selectable options */\n    update: function update(options) {\n        this.model.set(\"data\", options);\n    },\n\n    /** Return the currently selected dataset values */\n    value: function value(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        var current = this.model.get(\"current\");\n        if (this.config[current]) {\n            var id_list = this.fields[current].value();\n            if (id_list !== null) {\n                id_list = $.isArray(id_list) ? id_list : [id_list];\n                if (id_list.length > 0) {\n                    var result = this._batch({ values: [] });\n                    for (var i in id_list) {\n                        var details = this.history[id_list[i] + \"_\" + this.config[current].src];\n                        if (details) {\n                            result.values.push(details);\n                        } else {\n                            Galaxy.emit.debug(\"ui-select-content::value()\", \"Requested details not found for '\" + id_list[i] + \"'.\");\n                            return null;\n                        }\n                    }\n                    result.values.sort(function (a, b) {\n                        return a.hid - b.hid;\n                    });\n                    return result;\n                }\n            }\n        } else {\n            Galaxy.emit.debug(\"ui-select-content::value()\", \"Invalid value/source '\" + new_value + \"'.\");\n        }\n        return null;\n    },\n\n    /** Change of current select field */\n    _changeCurrent: function _changeCurrent() {\n        var self = this;\n        _.each(this.fields, function (field, i) {\n            if (self.model.get(\"current\") == i) {\n                field.$el.show();\n                _.each(self.$batch, function ($batchfield, batchmode) {\n                    $batchfield[self.config[i].batch == batchmode ? \"show\" : \"hide\"]();\n                });\n                self.button_type.value(i);\n            } else {\n                field.$el.hide();\n            }\n        });\n    },\n\n    /** Change of type */\n    _changeType: function _changeType() {\n        var self = this;\n\n        // identify selector type identifier i.e. [ flavor ]_[ type ]_[ multiple ]\n        var config_id = (this.model.get(\"flavor\") ? this.model.get(\"flavor\") + \"_\" : \"\") + String(this.model.get(\"type\")) + (this.model.get(\"multiple\") ? \"_multiple\" : \"\");\n        if (Configurations[config_id]) {\n            this.config = Configurations[config_id];\n        } else {\n            this.config = Configurations[\"data\"];\n            Galaxy.emit.debug(\"ui-select-content::_changeType()\", \"Invalid configuration/type id '\" + config_id + \"'.\");\n        }\n\n        // prepare extension component of error message\n        var data = self.model.get(\"data\");\n        var extensions = _utils2.default.textify(this.model.get(\"extensions\"));\n        var src_labels = this.model.get(\"src_labels\");\n\n        // build views\n        this.fields = [];\n        this.button_data = [];\n        _.each(this.config, function (c, i) {\n            self.button_data.push({\n                value: i,\n                icon: c.icon,\n                tooltip: c.tooltip\n            });\n            self.fields.push(new _uiSelectDefault2.default.View({\n                optional: self.model.get(\"optional\"),\n                multiple: c.multiple,\n                searchable: !c.multiple || data && data[c.src] && data[c.src].length > self.model.get(\"pagelimit\"),\n                individual: true,\n                error_text: \"No \" + (extensions ? extensions + \" \" : \"\") + (src_labels[c.src] || \"content\") + \" available.\",\n                onchange: function onchange() {\n                    self.trigger(\"change\");\n                }\n            }));\n        });\n        this.button_type = new _uiMisc2.default.RadioButton.View({\n            value: this.model.get(\"current\"),\n            data: this.button_data,\n            onchange: function onchange(value) {\n                self.model.set(\"current\", value);\n                self.trigger(\"change\");\n            }\n        });\n\n        // append views\n        this.$el.empty();\n        var button_width = 0;\n        if (this.fields.length > 1) {\n            this.$el.append(this.button_type.$el);\n            button_width = Math.max(0, this.fields.length * 36) + \"px\";\n        }\n        _.each(this.fields, function (field) {\n            self.$el.append(field.$el.css({ \"margin-left\": button_width }));\n        });\n        _.each(this.$batch, function ($batchfield, batchmode) {\n            self.$el.append($batchfield.css({ \"margin-left\": button_width }));\n        });\n        this.model.set(\"current\", 0);\n        this._changeCurrent();\n        this._changeData();\n    },\n\n    /** Change of wait flag */\n    _changeWait: function _changeWait() {\n        var self = this;\n        _.each(this.fields, function (field) {\n            field[self.model.get(\"wait\") ? \"wait\" : \"unwait\"]();\n        });\n    },\n\n    /** Change of available options */\n    _changeData: function _changeData() {\n        var options = this.model.get(\"data\");\n        var self = this;\n        var select_options = {};\n        _.each(options, function (items, src) {\n            select_options[src] = [];\n            _.each(items, function (item) {\n                select_options[src].push({\n                    hid: item.hid,\n                    keep: item.keep,\n                    label: item.hid + \": \" + item.name,\n                    value: item.id,\n                    tags: item.tags\n                });\n                self.history[item.id + \"_\" + src] = item;\n            });\n        });\n        _.each(this.config, function (c, i) {\n            select_options[c.src] && self.fields[i].add(select_options[c.src], function (a, b) {\n                return b.hid - a.hid;\n            });\n        });\n    },\n\n    /** Change of incoming value */\n    _changeValue: function _changeValue() {\n        var new_value = this.model.get(\"value\");\n        if (new_value && new_value.values && new_value.values.length > 0) {\n            // create list with content ids\n            var list = [];\n            _.each(new_value.values, function (value) {\n                list.push(value.id);\n            });\n            // sniff first suitable field type from config list\n            var src = new_value.values[0].src;\n            var multiple = new_value.values.length > 1;\n            for (var i = 0; i < this.config.length; i++) {\n                var field = this.fields[i];\n                var c = this.config[i];\n                if (c.src == src && [multiple, true].indexOf(c.multiple) !== -1) {\n                    this.model.set(\"current\", i);\n                    field.value(list);\n                    break;\n                }\n            }\n        } else {\n            _.each(this.fields, function (field) {\n                field.value(null);\n            });\n        }\n    },\n\n    /** Handles drop events e.g. from history panel */\n    _handleDrop: function _handleDrop(ev) {\n        try {\n            var data = this.model.get(\"data\");\n            var current = this.model.get(\"current\");\n            var config = this.config[current];\n            var field = this.fields[current];\n            var drop_data = JSON.parse(ev.originalEvent.dataTransfer.getData(\"text\"))[0];\n            var new_id = drop_data.id;\n            var new_src = drop_data.history_content_type == \"dataset\" ? \"hda\" : \"hdca\";\n            var new_value = { id: new_id, src: new_src };\n            if (data && _.findWhere(data[new_src], new_value)) {\n                if (config.src == new_src) {\n                    var current_value = field.value();\n                    if (current_value && config.multiple) {\n                        if (current_value.indexOf(new_id) == -1) {\n                            current_value.push(new_id);\n                        }\n                    } else {\n                        current_value = new_id;\n                    }\n                    field.value(current_value);\n                } else {\n                    this.model.set(\"value\", { values: [new_value] });\n                    this.model.trigger(\"change:value\");\n                }\n                this.trigger(\"change\");\n                this._handleDropStatus(\"success\");\n            } else {\n                this._handleDropStatus(\"danger\");\n            }\n        } catch (e) {\n            this._handleDropStatus(\"danger\");\n        }\n        ev.preventDefault();\n    },\n\n    /** Highlight drag result */\n    _handleDropStatus: function _handleDropStatus(status) {\n        var self = this;\n        this.$el.removeClass(\"ui-dragover\").addClass(\"ui-dragover-\" + status);\n        setTimeout(function () {\n            self.$el.removeClass(\"ui-dragover-\" + status);\n        }, this.model.get(\"statustimer\"));\n    },\n\n    /** Assists in identifying the batch mode */\n    _batch: function _batch(result) {\n        result[\"batch\"] = false;\n        var current = this.model.get(\"current\");\n        var config = this.config[current];\n        if (config.src == \"hdca\" && !config.multiple) {\n            var hdca = this.history[this.fields[current].value() + \"_hdca\"];\n            if (hdca && hdca.map_over_type) {\n                result[\"batch\"] = true;\n            }\n        }\n        if (config.batch == Batch.LINKED || config.batch == Batch.ENABLED) {\n            result[\"batch\"] = true;\n            if (config.batch == Batch.ENABLED && this.button_product.value() === \"true\") {\n                result[\"product\"] = true;\n            }\n        }\n        return result;\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiTable = __webpack_require__(43);\n\nvar _uiTable2 = _interopRequireDefault(_uiTable);\n\nvar _uiList = __webpack_require__(24);\n\nvar _uiList2 = _interopRequireDefault(_uiList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// collection of libraries\n// dependencies\nvar Libraries = Backbone.Collection.extend({\n    url: Galaxy.root + \"api/libraries?deleted=false\"\n});\n\n// collection of dataset\nvar LibraryDatasets = Backbone.Collection.extend({\n    initialize: function initialize() {\n        var self = this;\n        this.config = new Backbone.Model({ library_id: null });\n        this.config.on(\"change\", function () {\n            self.fetch({ reset: true });\n        });\n    },\n    url: function url() {\n        return Galaxy.root + \"api/libraries/\" + this.config.get(\"library_id\") + \"/contents\";\n    }\n});\n\n// hda/hdca content selector ui element\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function initialize(options) {\n        // link this\n        var self = this;\n\n        // collections\n        this.libraries = new Libraries();\n        this.datasets = new LibraryDatasets();\n\n        // link app and options\n        this.options = options;\n\n        // select field for the library\n        // TODO: Remove this once the library API supports searching for library datasets\n        this.library_select = new _uiMisc2.default.Select.View({\n            onchange: function onchange(value) {\n                self.datasets.config.set(\"library_id\", value);\n            }\n        });\n\n        // create ui-list view to keep track of selected data libraries\n        this.dataset_list = new _uiList2.default.View({\n            name: \"dataset\",\n            optional: options.optional,\n            multiple: options.multiple,\n            onchange: function onchange() {\n                self.trigger(\"change\");\n            }\n        });\n\n        // add reset handler for fetched libraries\n        this.libraries.on(\"reset\", function () {\n            var data = [];\n            self.libraries.each(function (model) {\n                data.push({\n                    value: model.id,\n                    label: model.get(\"name\")\n                });\n            });\n            self.library_select.update(data);\n        });\n\n        // add reset handler for fetched library datasets\n        this.datasets.on(\"reset\", function () {\n            var data = [];\n            var library_current = self.library_select.text();\n            if (library_current !== null) {\n                self.datasets.each(function (model) {\n                    if (model.get(\"type\") === \"file\") {\n                        data.push({\n                            value: model.id,\n                            label: model.get(\"name\")\n                        });\n                    }\n                });\n            }\n            self.dataset_list.update(data);\n        });\n\n        // add change event. fires on trigger\n        this.on(\"change\", function () {\n            options.onchange && options.onchange(self.value());\n        });\n\n        // create elements\n        this.setElement(this._template());\n        this.$(\".library-select\").append(this.library_select.$el);\n        this.$el.append(this.dataset_list.$el);\n\n        // initial fetch of libraries\n        this.libraries.fetch({\n            reset: true,\n            success: function success() {\n                self.library_select.trigger(\"change\");\n                if (self.options.value !== undefined) {\n                    self.value(self.options.value);\n                }\n            }\n        });\n    },\n\n    /** Return/Set currently selected library datasets */\n    value: function value(val) {\n        return this.dataset_list.value(val);\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"ui-select-library\">' + '<div class=\"library ui-margin-bottom\">' + '<span class=\"library-title\">Select Library</span>' + '<span class=\"library-select\"/>' + \"</div>\" + \"</div>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiList = __webpack_require__(24);\n\nvar _uiList2 = _interopRequireDefault(_uiList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * FTP file selector\n */\n// dependencies\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function initialize(options) {\n        // link this\n        var self = this;\n\n        // create ui-list view to keep track of selected ftp files\n        this.ftpfile_list = new _uiList2.default.View({\n            name: \"file\",\n            optional: options.optional,\n            multiple: options.multiple,\n            onchange: function onchange() {\n                options.onchange && options.onchange(self.value());\n            }\n        });\n\n        // create elements\n        this.setElement(this.ftpfile_list.$el);\n\n        // initial fetch of ftps\n        _utils2.default.get({\n            url: Galaxy.root + \"api/remote_files\",\n            success: function success(response) {\n                var data = [];\n                for (var i in response) {\n                    data.push({\n                        value: response[i][\"path\"],\n                        label: response[i][\"path\"]\n                    });\n                }\n                self.ftpfile_list.update(data);\n            }\n        });\n    },\n\n    /** Return/Set currently selected ftp datasets */\n    value: function value(val) {\n        return this.ftpfile_list.value(val);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(4);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _toolGenomespace = __webpack_require__(56);\n\nvar _toolGenomespace2 = _interopRequireDefault(_toolGenomespace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * GenomeSpace file selector\n */\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function initialize(options) {\n        // link this\n        var self = this;\n\n        // create insert new list element button\n        this.browse_button = new _uiMisc2.default.ButtonIcon({\n            title: \"Browse\",\n            icon: \"fa fa-sign-in\",\n            tooltip: \"Browse GenomeSpace\",\n            onclick: function onclick() {\n                self.browseGenomeSpace();\n            }\n        });\n\n        // create genomespace filepath textbox\n        this.filename_textbox = new _uiMisc2.default.Input();\n\n        // create genomespace token textbox\n        this.token_textbox = new _uiMisc2.default.Input({\n            type: \"password\"\n        });\n\n        // create elements\n        this.setElement(this._template(options));\n        this.$(\".ui-gs-browse-button\").append(this.browse_button.$el);\n        this.$(\".ui-gs-filename-textbox\").append(this.filename_textbox.$el);\n        this.$(\".ui-gs-token-textbox\").append(this.token_textbox.$el);\n    },\n\n    /** Browse GenomeSpace */\n    browseGenomeSpace: function browseGenomeSpace(options) {\n        var self = this;\n        _toolGenomespace2.default.openFileBrowser({\n            successCallback: function successCallback(data) {\n                self.value(data.destination + \"^\" + data.token);\n            }\n        });\n    },\n\n    /** Main Template */\n    _template: function _template(options) {\n        return '<div class=\"ui-gs-select-file\">' + '<div class=\"ui-gs-browse-field\">' + '<span class=\"ui-gs-browse-button\" />' + '<span class=\"ui-gs-filename-textbox\" />' + \"</div>\" + '<div class=\"ui-gs-token-field\">' + '<span class=ui-gs-label\"><div class=\"ui-gs-token-label\">Token</div></span>' + '<span class=\"ui-gs-token-textbox\" />' + \"</div>\" + \"</div>\";\n    },\n\n    /** Return/Set currently selected genomespace filename/token */\n    value: function value(new_value) {\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        } else {\n            return this._getValue();\n        }\n    },\n\n    // get value\n    _getValue: function _getValue() {\n        return this.filename_textbox.value() + \"^\" + this.token_textbox.value();\n    },\n\n    // set value\n    _setValue: function _setValue(new_value) {\n        if (new_value) {\n            values = new_value.split(\"^\");\n            this.filename_textbox.value(values[0]);\n            this.token_textbox.value(values[1]);\n        }\n    }\n}); // dependencies\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Provides support for interacting with the GenomeSpace File Browser popup dialogue\n\n// tool form templates\nexports.default = {\n    openFileBrowser: function openFileBrowser(options) {\n        var GS_UI_URL = window.Galaxy.config.genomespace_ui_url;\n        var GS_UPLOAD_URL = GS_UI_URL + \"upload/loadUrlToGenomespace.html?getLocation=true\";\n\n        var newWin = window.open(GS_UPLOAD_URL, \"GenomeSpace File Browser\", \"height=360px,width=600px\");\n\n        successCalBack = options[\"successCallback\"];\n        window.addEventListener(\"message\", function (e) {\n            successCalBack(e.data);\n        }, false);\n\n        newWin.focus();\n\n        if (options[\"errorCallback\"] != null) newWin.setCallbackOnGSUploadError = config[\"errorCallback\"];\n    }\n};\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    colors: {\n        standard: [\"c00000\", \"ff0000\", \"ffc000\", \"ffff00\", \"92d050\", \"00b050\", \"00b0f0\", \"0070c0\", \"002060\", \"7030a0\"],\n        base: [\"ffffff\", \"000000\", \"eeece1\", \"1f497d\", \"4f81bd\", \"c0504d\", \"9bbb59\", \"8064a2\", \"4bacc6\", \"f79646\"],\n        theme: [[\"f2f2f2\", \"7f7f7f\", \"ddd9c3\", \"c6d9f0\", \"dbe5f1\", \"f2dcdb\", \"ebf1dd\", \"e5e0ec\", \"dbeef3\", \"fdeada\"], [\"d8d8d8\", \"595959\", \"c4bd97\", \"8db3e2\", \"b8cce4\", \"e5b9b7\", \"d7e3bc\", \"ccc1d9\", \"b7dde8\", \"fbd5b5\"], [\"bfbfbf\", \"3f3f3f\", \"938953\", \"548dd4\", \"95b3d7\", \"d99694\", \"c3d69b\", \"b2a2c7\", \"92cddc\", \"fac08f\"], [\"a5a5a5\", \"262626\", \"494429\", \"17365d\", \"366092\", \"953734\", \"76923c\", \"5f497a\", \"31859b\", \"e36c09\"], [\"7f7f7e\", \"0c0c0c\", \"1d1b10\", \"0f243e\", \"244061\", \"632423\", \"4f6128\", \"3f3151\", \"205867\", \"974806\"]]\n    },\n\n    initialize: function initialize(options) {\n        this.options = _utils2.default.merge(options, {});\n        this.setElement(this._template());\n        this.$panel = this.$(\".ui-color-picker-panel\");\n        this.$view = this.$(\".ui-color-picker-view\");\n        this.$value = this.$(\".ui-color-picker-value\");\n        this.$header = this.$(\".ui-color-picker-header\");\n        this._build();\n        this.visible = false;\n        this.value(this.options.value);\n        this.$boxes = this.$(\".ui-color-picker-box\");\n        var self = this;\n        this.$boxes.on(\"click\", function () {\n            self.value($(this).css(\"background-color\"));\n            self.$header.trigger(\"click\");\n        });\n        this.$header.on(\"click\", function () {\n            self.visible = !self.visible;\n            if (self.visible) {\n                self.$view.fadeIn(\"fast\");\n            } else {\n                self.$view.fadeOut(\"fast\");\n            }\n        });\n    },\n\n    /** Get/set value */\n    value: function value(new_val) {\n        if (new_val !== undefined && new_val !== null) {\n            this.$value.css(\"background-color\", new_val);\n            this.$(\".ui-color-picker-box\").empty();\n            this.$(this._getValue()).html(this._templateCheck());\n            this.options.onchange && this.options.onchange(new_val);\n        }\n        return this._getValue();\n    },\n\n    /** Get value from dom */\n    _getValue: function _getValue() {\n        var rgb = this.$value.css(\"background-color\");\n        rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n        if (rgb) {\n            var hex = function hex(x) {\n                return (\"0\" + parseInt(x).toString(16)).slice(-2);\n            };\n\n            return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n        } else {\n            return null;\n        }\n    },\n\n    /** Build color panel */\n    _build: function _build() {\n        this._content({ colors: this.colors.base });\n        for (var i in this.colors.theme) {\n            var line_def = {};\n            if (i == 0) {\n                line_def[\"bottom\"] = true;\n            } else if (i != this.colors.theme.length - 1) {\n                line_def[\"top\"] = true;\n                line_def[\"bottom\"] = true;\n            } else {\n                line_def[\"top\"] = true;\n            }\n            line_def[\"colors\"] = this.colors.theme[i];\n            this._content(line_def);\n        }\n        this._content({ colors: this.colors.standard });\n    },\n\n    /** Create content */\n    _content: function _content(options) {\n        var colors = options.colors;\n        var $content = $(this._templateContent());\n        var $line = $content.find(\".line\");\n        this.$panel.append($content);\n        for (var i in colors) {\n            var $box = $(this._templateBox(colors[i]));\n            if (options.top) {\n                $box.css(\"border-top\", \"none\");\n                $box.css(\"border-top-left-radius\", \"0px\");\n                $box.css(\"border-top-right-radius\", \"0px\");\n            }\n            if (options.bottom) {\n                $box.css(\"border-bottom\", \"none\");\n                $box.css(\"border-bottom-left-radius\", \"0px\");\n                $box.css(\"border-bottom-right-radius\", \"0px\");\n            }\n            $line.append($box);\n        }\n        return $content;\n    },\n\n    /** Check icon */\n    _templateCheck: function _templateCheck() {\n        return '<div class=\"ui-color-picker-check fa fa-check\"/>';\n    },\n\n    /** Content template */\n    _templateContent: function _templateContent() {\n        return '<div class=\"ui-color-picker-content\">' + '<div class=\"line\"/>' + \"</div>\";\n    },\n\n    /** Box template */\n    _templateBox: function _templateBox(color) {\n        return \"<div id=\\\"\" + color + \"\\\" class=\\\"ui-color-picker-box\\\" style=\\\"background-color: #\" + color + \";\\\"/>\";\n    },\n\n    /** Main template */\n    _template: function _template() {\n        return '<div class=\"ui-color-picker\">' + '<div class=\"ui-color-picker-header\">' + '<div class=\"ui-color-picker-value\"/>' + '<div class=\"ui-color-picker-label\">Select a color</div>' + \"</div>\" + '<div class=\"ui-color-picker-view ui-input\">' + '<div class=\"ui-color-picker-panel\"/>' + \"</div>\";\n        \"</div>\";\n    }\n}); /** Renders the color picker used e.g. in the tool form **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar View = Backbone.View.extend({\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault: {\n        container: \"body\",\n        title: \"ui-modal\",\n        cls: \"ui-modal\",\n        body: \"\",\n        backdrop: true,\n        height: null,\n        width: null,\n        closing_events: false,\n        closing_callback: null,\n        title_separator: true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function initialize(options) {\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        $(this.options.container).prepend(this.el);\n        // optional render\n        if (options) {\n            this.render();\n        }\n    },\n\n    /**\n     * Displays modal\n     */\n    show: function show(options) {\n        if (options) {\n            this.options = _.defaults(options, this.optionsDefault);\n            this.render();\n        }\n        if (!this.visible) {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            if (this.options.closing_events) {\n                var self = this;\n                $(document).on(\"keyup.ui-modal\", function (e) {\n                    if (e.keyCode == 27) {\n                        self.hide(true);\n                    }\n                });\n                this.$backdrop.on(\"click\", function () {\n                    self.hide(true);\n                });\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n     */\n    hide: function hide(canceled) {\n        this.visible = false;\n        this.$el.fadeOut(\"fast\");\n        if (this.options.closing_callback) {\n            this.options.closing_callback(canceled);\n        }\n        $(document).off(\"keyup.ui-modal\");\n        this.$backdrop.off(\"click\");\n    },\n\n    /**\n     * Render modal\n     */\n    render: function render() {\n        var self = this;\n        this.$el.html(this._template());\n\n        // link elements\n        this.$header = this.$(\".modal-header\");\n        this.$dialog = this.$(\".modal-dialog\");\n        this.$body = this.$(\".modal-body\");\n        this.$footer = this.$(\".modal-footer\");\n        this.$backdrop = this.$(\".modal-backdrop\");\n        this.$buttons = this.$(\".buttons\");\n\n        if (this.options.body == \"progress\") {\n            this.options.body = $('<div class=\"progress progress-striped active\">' + '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' + \"</div>\");\n        }\n\n        // fix main content\n        this.$el.removeClass().addClass(\"modal\").addClass(this.options.cls);\n        this.$header.find(\".title\").html(this.options.title);\n        this.$body.html(this.options.body);\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if (this.options.buttons) {\n            var counter = 0;\n            $.each(this.options.buttons, function (name, callback) {\n                var $button = $(\"<button/>\").attr(\"id\", \"button-\" + counter++).text(name).click(callback);\n                self.$buttons.append($button).append(\"&nbsp;\");\n                self.buttonList[name] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[this.options.backdrop && \"addClass\" || \"removeClass\"](\"in\");\n        this.$header[!this.options.title_separator && \"addClass\" || \"removeClass\"](\"no-separator\");\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr(\"style\");\n        if (this.options.height) {\n            this.$body.css(\"height\", this.options.height);\n            this.$body.css(\"overflow\", \"hidden\");\n        } else {\n            this.$body.css(\"max-height\", $(window).height() / 2);\n        }\n        if (this.options.width) {\n            this.$dialog.css(\"width\", this.options.width);\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n     */\n    getButton: function getButton(name) {\n        return this.buttonList[name];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n     */\n    enableButton: function enableButton(name) {\n        this.getButton(name).prop(\"disabled\", false);\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n     */\n    disableButton: function disableButton(name) {\n        this.getButton(name).prop(\"disabled\", true);\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n     */\n    showButton: function showButton(name) {\n        this.getButton(name).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n     */\n    hideButton: function hideButton(name) {\n        this.getButton(name).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n     */\n    scrollTop: function scrollTop() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n     */\n    _template: function _template() {\n        return '<div class=\"modal-backdrop fade\"/>' + '<div class=\"modal-dialog\">' + '<div class=\"modal-content\">' + '<div class=\"modal-header\">' + '<h4 class=\"title\"/>' + \"</div>\" + '<div class=\"modal-body\"/>' + '<div class=\"modal-footer\">' + '<div class=\"buttons\"/>' + \"</div>\" + \"</div>\" + \"</div>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ })\n\n},[308]);\n\n\n// WEBPACK FOOTER //\n// adminToolshed.bundled.js","import Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    visible: false,\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                cls: \"ui-portlet\",\n                title: \"\",\n                icon: \"\",\n                buttons: null,\n                body: null,\n                scrollable: true,\n                nopadding: false,\n                operations: null,\n                collapsible: false,\n                collapsible_button: false,\n                collapsed: false,\n                onchange_title: null\n            }).set(options);\n        this.setElement(this._template());\n\n        // link all dom elements\n        this.$body = this.$(\".portlet-body\");\n        this.$title_text = this.$(\".portlet-title-text\");\n        this.$title_icon = this.$(\".portlet-title-icon\");\n        this.$header = this.$(\".portlet-header\");\n        this.$content = this.$(\".portlet-content\");\n        this.$backdrop = this.$(\".portlet-backdrop\");\n        this.$buttons = this.$(\".portlet-buttons\");\n        this.$operations = this.$(\".portlet-operations\");\n\n        // add body to component list\n        this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n        // add icon for collapsible option\n        this.collapsible_button = new Ui.ButtonIcon({\n            icon: \"fa-eye\",\n            tooltip: \"Collapse/Expand\",\n            cls: \"ui-button-icon-plain\",\n            onclick: function() {\n                self[self.collapsed ? \"expand\" : \"collapse\"]();\n            }\n        });\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(options.cls)\n            .attr(\"id\", options.id);\n        this.$header[options.title ? \"show\" : \"hide\"]();\n        this.$title_text.html(options.title);\n        _.each([this.$content, this.$body], $el => {\n            $el[options.nopadding ? \"addClass\" : \"removeClass\"](\"no-padding\");\n        });\n\n        // render title icon\n        if (options.icon) {\n            this.$title_icon\n                .removeClass()\n                .addClass(\"portlet-title-icon fa\")\n                .addClass(options.icon)\n                .show();\n        } else {\n            this.$title_icon.hide();\n        }\n\n        // make portlet collapsible\n        this.$title_text[options.collapsible ? \"addClass\" : \"removeClass\"](\"no-highlight collapsible\").off();\n        if (options.collapsible) {\n            this.$title_text.on(\"click\", () => {\n                self[self.collapsed ? \"expand\" : \"collapse\"]();\n            });\n            options.collapsed ? this.collapse() : this.expand();\n        }\n\n        // allow title editing\n        this.$title_text.prop(\"disabled\", !options.onchange_title);\n        options.onchange_title &&\n            this.$title_text.make_text_editable({\n                on_finish: function(new_title) {\n                    options.onchange_title(new_title);\n                }\n            });\n\n        // render buttons\n        if (options.buttons) {\n            this.$buttons.empty().show();\n            $.each(this.model.get(\"buttons\"), (name, item) => {\n                item.$el.prop(\"id\", name);\n                self.$buttons.append(item.$el);\n            });\n        } else {\n            this.$buttons.hide();\n        }\n\n        // render operations\n        this.$operations.empty;\n        if (options.collapsible_button) {\n            this.$operations.append(this.collapsible_button.$el);\n        }\n        if (options.operations) {\n            $.each(options.operations, (name, item) => {\n                item.$el.prop(\"id\", name);\n                self.$operations.append(item.$el);\n            });\n        }\n        return this;\n    },\n\n    /** Append new doms to body */\n    append: function($el) {\n        this.$body.append($el);\n    },\n\n    /** Remove all content */\n    empty: function() {\n        this.$body.empty();\n    },\n\n    /** Return header element */\n    header: function() {\n        return this.$header;\n    },\n\n    /** Return body element */\n    body: function() {\n        return this.$body;\n    },\n\n    /** Show portlet */\n    show: function() {\n        this.visible = true;\n        this.$el.fadeIn(\"fast\");\n    },\n\n    /** Hide portlet */\n    hide: function() {\n        this.visible = false;\n        this.$el.hide();\n    },\n\n    /** Enable a particular button */\n    enableButton: function(id) {\n        this.$buttons.find(`#${id}`).prop(\"disabled\", false);\n    },\n\n    /** Disable a particular button */\n    disableButton: function(id) {\n        this.$buttons.find(`#${id}`).prop(\"disabled\", true);\n    },\n\n    /** Hide a particular operation */\n    hideOperation: function(id) {\n        this.$operations.find(`#${id}`).hide();\n    },\n\n    /** Show a particular operation */\n    showOperation: function(id) {\n        this.$operations.find(`#${id}`).show();\n    },\n\n    /** Replaces the event callback of an existing operation */\n    setOperation: function(id, callback) {\n        this.$operations\n            .find(`#${id}`)\n            .off(\"click\")\n            .on(\"click\", callback);\n    },\n\n    /** Change title */\n    title: function(new_title) {\n        new_title && this.$title_text.html(new_title);\n        return this.$title_text.html();\n    },\n\n    /** Collapse portlet */\n    collapse: function() {\n        this.collapsed = true;\n        this.$content.height(\"0%\");\n        this.$body.hide();\n        this.collapsible_button.setIcon(\"fa-eye-slash\");\n    },\n\n    /** Expand portlet */\n    expand: function() {\n        this.collapsed = false;\n        this.$content.height(\"100%\");\n        this.$body.fadeIn(\"fast\");\n        this.collapsible_button.setIcon(\"fa-eye\");\n    },\n\n    /** Disable content access */\n    disable: function() {\n        this.$backdrop.show();\n    },\n\n    /** Enable content access */\n    enable: function() {\n        this.$backdrop.hide();\n    },\n\n    _template: function() {\n        return $(\"<div/>\")\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"portlet-header\")\n                    .append($(\"<div/>\").addClass(\"portlet-operations\"))\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"portlet-title\")\n                            .append($(\"<i/>\").addClass(\"portlet-title-icon\"))\n                            .append($(\"<span/>\").addClass(\"portlet-title-text\"))\n                    )\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"portlet-content\")\n                    .append($(\"<div/>\").addClass(\"portlet-body\"))\n                    .append($(\"<div/>\").addClass(\"portlet-buttons\"))\n            )\n            .append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n    }\n});\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-portlet.js","/** This module contains all button views. */\nimport Utils from \"utils/utils\";\n/** This renders the default button which is used e.g. at the bottom of the upload modal. */\nvar ButtonDefault = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"btn btn-default\",\n                wait: false,\n                wait_text: \"Sending...\",\n                wait_cls: \"btn btn-info\",\n                disabled: false,\n                percentage: -1\n            }).set(options);\n        this.setElement(\n            $(\"<button/>\")\n                .attr(\"type\", \"button\")\n                .append((this.$icon = $(\"<i/>\")))\n                .append((this.$title = $(\"<span/>\")))\n                .append((this.$progress = $(\"<div/>\").append((this.$progress_bar = $(\"<div/>\")))))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(\"ui-button-default\")\n            .addClass(options.disabled && \"disabled\")\n            .attr(\"id\", options.id)\n            .attr(\"disabled\", options.disabled)\n            .off(\"click\")\n            .on(\"click\", () => {\n                $(\".tooltip\").hide();\n                options.onclick && !self.disabled && options.onclick();\n            })\n            .tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$progress.addClass(\"progress\").css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n        this.$progress_bar.addClass(\"progress-bar\").css({ width: `${options.percentage}%` });\n        this.$icon.removeClass().addClass(\"icon fa\");\n        this.$title.removeClass().addClass(\"title\");\n        if (options.wait) {\n            this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n            this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n            this.$title.html(options.wait_text);\n        } else {\n            this.$el.addClass(options.cls);\n            this.$icon.addClass(options.icon);\n            this.$title.html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        }\n    },\n\n    /** Show button */\n    show: function() {\n        this.$el.show();\n    },\n\n    /** Hide button */\n    hide: function() {\n        this.$el.hide();\n    },\n\n    /** Disable button */\n    disable: function() {\n        this.model.set(\"disabled\", true);\n    },\n\n    /** Enable button */\n    enable: function() {\n        this.model.set(\"disabled\", false);\n    },\n\n    /** Show spinner to indicate that the button is not ready to be clicked */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner to indicate that the button is ready to be clicked */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Change icon */\n    setIcon: function(icon) {\n        this.model.set(\"icon\", icon);\n    }\n});\n\n/** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\nvar ButtonLink = ButtonDefault.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"\"\n            }).set(options);\n        this.setElement($(\"<a/>\").append((this.$icon = $(\"<span/>\"))));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(options.cls)\n            .attr({\n                id: options.id,\n                href: options.href || \"javascript:void(0)\",\n                title: options.title,\n                target: options.target || \"_top\",\n                disabled: options.disabled\n            })\n            .tooltip({ placement: \"bottom\" })\n            .off(\"click\")\n            .on(\"click\", () => {\n                options.onclick && !options.disabled && options.onclick();\n            });\n        this.$icon.removeClass().addClass(options.icon);\n    }\n});\n\n/** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\nvar ButtonCheck = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"Select/Unselect all\",\n                icons: [\"fa-square-o\", \"fa-minus-square-o\", \"fa-check-square-o\"],\n                value: 0,\n                onchange: function() {}\n            }).set(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$icon = $(\"<span/>\")))\n                .append((this.$title = $(\"<span/>\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .addClass(\"ui-button-check\")\n            .off(\"click\")\n            .on(\"click\", () => {\n                self.model.set(\"value\", (self.model.get(\"value\") === 0 && 2) || 0);\n                options.onclick && options.onclick();\n            });\n        this.$title.html(options.title);\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa ui-margin-right\")\n            .addClass(options.icons[options.value]);\n    },\n\n    /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n    value: function(new_val, total) {\n        if (new_val !== undefined) {\n            if (total && new_val !== 0) {\n                new_val = (new_val !== total && 1) || 2;\n            }\n            this.model.set(\"value\", new_val);\n            this.model.get(\"onchange\")(this.model.get(\"value\"));\n        }\n        return this.model.get(\"value\");\n    }\n});\n\n/** This renders a differently styled, more compact button version. */\nvar ButtonIcon = ButtonDefault.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"ui-button-icon\",\n                disabled: false\n            }).set(options);\n        this.setElement(\n            $(\"<div/>\").append(\n                (this.$button = $(\"<div/>\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\"))))\n            )\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function(options) {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(options.cls)\n            .addClass(options.disabled && \"disabled\")\n            .attr(\"disabled\", options.disabled)\n            .attr(\"id\", options.id)\n            .off(\"click\")\n            .on(\"click\", () => {\n                $(\".tooltip\").hide();\n                !options.disabled && options.onclick && options.onclick();\n            });\n        this.$button.addClass(\"button\").tooltip({ title: options.tooltip, placement: \"bottom\" });\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa\")\n            .addClass(options.icon);\n        this.$title.addClass(\"title\").html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n    }\n});\n\n/** This class creates a button with dropdown menu. */\nvar ButtonMenu = ButtonDefault.extend({\n    $menu: null,\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: \"\",\n                title: \"\",\n                pull: \"right\",\n                icon: null,\n                onclick: null,\n                cls: \"ui-button-icon ui-button-menu\",\n                tooltip: \"\",\n                target: \"\",\n                href: \"\",\n                onunload: null,\n                visible: true,\n                tag: \"\"\n            }).set(options);\n        this.collection = new Backbone.Collection();\n        this.setElement(\n            $(\"<div/>\").append(\n                (this.$root = $(\"<div/>\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\"))))\n            )\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.listenTo(this.collection, \"change add remove reset\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .removeClass()\n            .addClass(\"dropdown\")\n            .addClass(options.cls)\n            .attr(\"id\", options.id)\n            .css({\n                display: options.visible && this.collection.where({ visible: true }).length > 0 ? \"block\" : \"none\"\n            });\n        this.$root\n            .addClass(\"root button dropdown-toggle\")\n            .attr(\"data-toggle\", \"dropdown\")\n            .tooltip({ title: options.tooltip, placement: \"bottom\" })\n            .off(\"click\")\n            .on(\"click\", e => {\n                $(\".tooltip\").hide();\n                e.preventDefault();\n                options.onclick && options.onclick();\n            });\n        this.$icon\n            .removeClass()\n            .addClass(\"icon fa\")\n            .addClass(options.icon);\n        this.$title\n            .removeClass()\n            .addClass(\"title\")\n            .html(options.title);\n        options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        this.$menu && this.$menu.remove();\n        if (this.collection.length > 0) {\n            this.$menu = $(\"<ul/>\")\n                .addClass(\"menu dropdown-menu\")\n                .addClass(`pull-${self.model.get(\"pull\")}`)\n                .attr(\"role\", \"menu\");\n            this.$el.append(this.$menu);\n        }\n        this.collection.each(submodel => {\n            var suboptions = submodel.attributes;\n            if (suboptions.visible) {\n                var $link = $(\"<a/>\")\n                    .addClass(\"dropdown-item\")\n                    .attr({\n                        href: suboptions.href,\n                        target: suboptions.target\n                    })\n                    .append(\n                        $(\"<i/>\")\n                            .addClass(\"fa\")\n                            .addClass(suboptions.icon)\n                            .css(\"display\", suboptions.icon ? \"inline-block\" : \"none\")\n                    )\n                    .append(suboptions.title)\n                    .on(\"click\", e => {\n                        if (suboptions.onclick) {\n                            e.preventDefault();\n                            suboptions.onclick();\n                        }\n                    });\n                self.$menu.append($(\"<li/>\").append($link));\n                suboptions.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n            }\n        });\n    },\n\n    /** Add a new menu item */\n    addMenu: function(options) {\n        this.collection.add(\n            Utils.merge(options, {\n                title: \"\",\n                target: \"\",\n                href: \"\",\n                onclick: null,\n                divider: false,\n                visible: true,\n                icon: null,\n                cls: \"button-menu btn-group\"\n            })\n        );\n    }\n});\n\nexport default {\n    ButtonDefault: ButtonDefault,\n    ButtonLink: ButtonLink,\n    ButtonIcon: ButtonIcon,\n    ButtonCheck: ButtonCheck,\n    ButtonMenu: ButtonMenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-buttons.js","var ToolShedModel = Backbone.Model.extend({\n    defaults: {\n        url: \"https://toolshed.g2.bx.psu.edu/\",\n        name: \"Galaxy Main Tool Shed\"\n    },\n    urlRoot: `${Galaxy.root}api/tool_shed`\n});\n\nvar ToolShedsCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/tool_shed`,\n    model: ToolShedModel\n});\n\nvar ToolShedCategoriesModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: `${Galaxy.root}api/tool_shed/contents`\n});\n\nvar ToolShedCategoriesCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/tool_shed/contents`,\n    model: ToolShedCategoriesModel\n});\n\nvar ToolShedCategoryModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: `${Galaxy.root}api/tool_shed/category`\n});\n\nvar ToolShedCategoryCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/tool_shed/category`,\n    model: ToolShedCategoryModel\n});\n\nvar ToolShedRepositoryModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: `${Galaxy.root}api/tool_shed/repository`\n});\n\nvar ToolShedRepositoryCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/tool_shed/repository`,\n    model: ToolShedRepositoryModel\n});\n\nvar RepoQueueModel = Backbone.Model.extend({\n    url: \"#\"\n});\n\nvar RepoQueueCollection = Backbone.Collection.extend({\n    url: \"#\",\n    model: RepoQueueModel,\n    fetch: function() {\n        var collection = this;\n        var repositories = Array();\n        var repositories_enc = JSON.parse(localStorage.repositories);\n        var queue_keys = Object.keys(repositories_enc);\n        _.each(queue_keys, key => {\n            var repo = repositories_enc[key];\n            repo.queue_key = key;\n            repositories.push(repo);\n        });\n        collection.reset(repositories);\n        return Backbone.Collection.prototype.fetch.call(this);\n    }\n});\n\nvar RepoStatusModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: `${Galaxy.root}api/tool_shed/status`\n});\n\nvar RepoStatusCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/tool_shed/status`,\n    model: RepoStatusModel\n});\n\nvar WorkflowToolsModel = Backbone.Model.extend({\n    defaults: [{}],\n    urlRoot: `${Galaxy.root}api/workflows?missing_tools=True`\n});\n\nvar WorkflowToolsCollection = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/workflows?missing_tools=True`,\n    model: WorkflowToolsModel\n});\n\nexport default {\n    ShedModel: ToolShedModel,\n    ShedsCollection: ToolShedsCollection,\n    Category: ToolShedCategoriesModel,\n    Categories: ToolShedCategoriesCollection,\n    CategoryModel: ToolShedCategoryModel,\n    CategoryCollection: ToolShedCategoryCollection,\n    RepositoryModel: ToolShedRepositoryModel,\n    RepositoryCollection: ToolShedRepositoryCollection,\n    RepoQueue: RepoQueueCollection,\n    RepoStatus: RepoStatusCollection,\n    WorkflowTools: WorkflowToolsCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/toolshed-model.js","var searchShed = function(request, response) {\n    var that = this;\n    var shed_url = this.shed_url;\n    var base_url = `${Galaxy.root}api/tool_shed/search`;\n    $.get(base_url, { term: request.term, tool_shed_url: shed_url }, data => {\n        var result_list = that.shedParser(data);\n        response(result_list);\n    });\n};\n\nvar shedParser = jsondata => {\n    var results = [];\n    var hits = jsondata.hits;\n    $.each(hits, hit => {\n        var record = hits[hit];\n        var label = `${record.repository.name} by ${record.repository.repo_owner_username}: ${\n            record.repository.description\n        }`;\n        var result = { value: record.repository.id, label: label };\n        results.push(result);\n    });\n    return results;\n};\n\nvar addToQueue = metadata => {\n    if (metadata.tool_shed_url.substr(-1) == \"/\") {\n        metadata.tool_shed_url = metadata.tool_shed_url.substr(0, metadata.tool_shed_url.length - 1);\n    }\n    var key = `${metadata.tool_shed_url}|${metadata.repository_id}|${metadata.changeset_revision}`;\n    var queued_repos = new Object();\n    if (localStorage.repositories) {\n        queued_repos = JSON.parse(localStorage.repositories);\n    }\n    queued_repos[key] = metadata;\n    localStorage.repositories = JSON.stringify(queued_repos);\n};\n\nvar queueLength = () => {\n    if (localStorage.hasOwnProperty(\"repositories\")) {\n        var repo_queue = JSON.parse(localStorage.repositories);\n        var queue_length = Object.keys(repo_queue).length;\n        return queue_length;\n    } else {\n        return 0;\n    }\n};\n\nexport default {\n    searchShed: searchShed,\n    shedParser: shedParser,\n    addToQueue: addToQueue,\n    queueLength: queueLength\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/util.js","/*globals jQuery, define, exports, require, window, document */\n(function (factory) {\n\t\"use strict\";\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery'], factory);\n\t}\n\telse if(typeof exports === 'object') {\n\t\tfactory(require('jquery'));\n\t}\n\telse {\n\t\tfactory(jQuery);\n\t}\n}(function ($, undefined) {\n\t\"use strict\";\n/*!\n * jsTree 3.0.3\n * http://jstree.com/\n *\n * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\n *\n * Licensed same as jquery - under the terms of the MIT License\n *   http://www.opensource.org/licenses/mit-license.php\n */\n/*!\n * if using jslint please allow for the jQuery global and use following options: \n * jslint: browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true\n */\n\n\t// prevent another load? maybe there is a better way?\n\tif($.jstree) {\n\t\treturn;\n\t}\n\n\t/**\n\t * ### jsTree core functionality\n\t */\n\n\t// internal variables\n\tvar instance_counter = 0,\n\t\tccp_node = false,\n\t\tccp_mode = false,\n\t\tccp_inst = false,\n\t\tthemes_loaded = [],\n\t\tsrc = $('script:last').attr('src'),\n\t\t_d = document, _node = _d.createElement('LI'), _temp1, _temp2;\n\n\t_node.setAttribute('role', 'treeitem');\n\t_temp1 = _d.createElement('I');\n\t_temp1.className = 'jstree-icon jstree-ocl';\n\t_node.appendChild(_temp1);\n\t_temp1 = _d.createElement('A');\n\t_temp1.className = 'jstree-anchor';\n\t_temp1.setAttribute('href','#');\n\t_temp2 = _d.createElement('I');\n\t_temp2.className = 'jstree-icon jstree-themeicon';\n\t_temp1.appendChild(_temp2);\n\t_node.appendChild(_temp1);\n\t_temp1 = _temp2 = null;\n\n\n\t/**\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\n\t * @name $.jstree\n\t */\n\t$.jstree = {\n\t\t/** \n\t\t * specifies the jstree version in use\n\t\t * @name $.jstree.version\n\t\t */\n\t\tversion : '3.0.3',\n\t\t/**\n\t\t * holds all the default options used when creating new instances\n\t\t * @name $.jstree.defaults\n\t\t */\n\t\tdefaults : {\n\t\t\t/**\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\n\t\t\t * @name $.jstree.defaults.plugins\n\t\t\t */\n\t\t\tplugins : []\n\t\t},\n\t\t/**\n\t\t * stores all loaded jstree plugins (used internally)\n\t\t * @name $.jstree.plugins\n\t\t */\n\t\tplugins : {},\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%]/g\n\t};\n\t/**\n\t * creates a jstree instance\n\t * @name $.jstree.create(el [, options])\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\n\t * @return {jsTree} the new instance\n\t */\n\t$.jstree.create = function (el, options) {\n\t\tvar tmp = new $.jstree.core(++instance_counter),\n\t\t\topt = options;\n\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\n\t\tif(opt && opt.plugins) {\n\t\t\toptions.plugins = opt.plugins;\n\t\t}\n\t\t$.each(options.plugins, function (i, k) {\n\t\t\tif(i !== 'core') {\n\t\t\t\ttmp = tmp.plugin(k, options[k]);\n\t\t\t}\n\t\t});\n\t\ttmp.init(el, options);\n\t\treturn tmp;\n\t};\n\t/**\n\t * the jstree class constructor, used only internally\n\t * @private\n\t * @name $.jstree.core(id)\n\t * @param {Number} id this instance's index\n\t */\n\t$.jstree.core = function (id) {\n\t\tthis._id = id;\n\t\tthis._cnt = 0;\n\t\tthis._wrk = null;\n\t\tthis._data = {\n\t\t\tcore : {\n\t\t\t\tthemes : {\n\t\t\t\t\tname : false,\n\t\t\t\t\tdots : false,\n\t\t\t\t\ticons : false\n\t\t\t\t},\n\t\t\t\tselected : [],\n\t\t\t\tlast_error : {},\n\t\t\t\tworking : false,\n\t\t\t\tworker_queue : []\n\t\t\t}\n\t\t};\n\t};\n\t/**\n\t * get a reference to an existing instance\n\t *\n\t * __Examples__\n\t *\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\n\t *\t// all of there will return the same instance\n\t *\t$.jstree.reference('tree');\n\t *\t$.jstree.reference('#tree');\n\t *\t$.jstree.reference($('#tree'));\n\t *\t$.jstree.reference(document.getElementByID('tree'));\n\t *\t$.jstree.reference('branch');\n\t *\t$.jstree.reference('#branch');\n\t *\t$.jstree.reference($('#branch'));\n\t *\t$.jstree.reference(document.getElementByID('branch'));\n\t *\n\t * @name $.jstree.reference(needle)\n\t * @param {DOMElement|jQuery|String} needle\n\t * @return {jsTree|null} the instance or `null` if not found\n\t */\n\t$.jstree.reference = function (needle) {\n\t\tvar tmp = null,\n\t\t\tobj = null;\n\t\tif(needle && needle.id) { needle = needle.id; }\n\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\n\t\t}\n\t\tif(!obj || !obj.length) {\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\n\t\t}\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\n\t\t\ttmp = obj;\n\t\t}\n\t\telse {\n\t\t\t$('.jstree').each(function () {\n\t\t\t\tvar inst = $(this).data('jstree');\n\t\t\t\tif(inst && inst._model.data[needle]) {\n\t\t\t\t\ttmp = inst;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn tmp;\n\t};\n\t/**\n\t * Create an instance, get an instance or invoke a command on a instance. \n\t * \n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\n\t * \n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\n\t * \n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\n\t * \n\t * In any other case - nothing is returned and chaining is not broken.\n\t *\n\t * __Examples__\n\t *\n\t *\t$('#tree1').jstree(); // creates an instance\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\n\t *\n\t * @name $().jstree([arg])\n\t * @param {String|Object} arg\n\t * @return {Mixed}\n\t */\n\t$.fn.jstree = function (arg) {\n\t\t// check for string argument\n\t\tvar is_method\t= (typeof arg === 'string'),\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\n\t\t\tresult\t\t= null;\n\t\tthis.each(function () {\n\t\t\t// get the instance (if there is one) and method (if it exists)\n\t\t\tvar instance = $.jstree.reference(this),\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\n\t\t\t// if calling a method, and method is available - execute on the instance\n\t\t\tresult = is_method && method ?\n\t\t\t\tmethod.apply(instance, args) :\n\t\t\t\tnull;\n\t\t\t// if there is no instance and no method is being called - create one\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\n\t\t\t\t$(this).data('jstree', new $.jstree.create(this, arg));\n\t\t\t}\n\t\t\t// if there is an instance and no method is called - return the instance\n\t\t\tif( (instance && !is_method) || arg === true ) {\n\t\t\t\tresult = instance || false;\n\t\t\t}\n\t\t\t// if there was a method call which returned a result - break and return the value\n\t\t\tif(result !== null && result !== undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\n\t\treturn result !== null && result !== undefined ?\n\t\t\tresult : this;\n\t};\n\t/**\n\t * used to find elements containing an instance\n\t *\n\t * __Examples__\n\t *\n\t *\t$('div:jstree').each(function () {\n\t *\t\t$(this).jstree('destroy');\n\t *\t});\n\t *\n\t * @name $(':jstree')\n\t * @return {jQuery}\n\t */\n\t$.expr[':'].jstree = $.expr.createPseudo(function(search) {\n\t\treturn function(a) {\n\t\t\treturn $(a).hasClass('jstree') &&\n\t\t\t\t$(a).data('jstree') !== undefined;\n\t\t};\n\t});\n\n\t/**\n\t * stores all defaults for the core\n\t * @name $.jstree.defaults.core\n\t */\n\t$.jstree.defaults.core = {\n\t\t/**\n\t\t * data configuration\n\t\t * \n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\n\t\t *\n\t\t * You can also pass in a HTML string or a JSON array here.\n\t\t * \n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree. \n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\n\t\t * \n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t// AJAX\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : {\n\t\t *\t\t\t\t'url' : '/get/children/',\n\t\t *\t\t\t\t'data' : function (node) {\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\n\t\t *\t\t\t\t}\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t *\n\t\t *\t// direct data\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : [\n\t\t *\t\t\t\t'Simple root node',\n\t\t *\t\t\t\t{\n\t\t *\t\t\t\t\t'id' : 'node_2',\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\n\t\t *\t\t\t\t}\n\t\t *\t\t\t]\n\t\t *\t\t});\n\t\t *\t\n\t\t *\t// function\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'data' : function (obj, callback) {\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\n\t\t *\t\t\t}\n\t\t *\t\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.data\n\t\t */\n\t\tdata\t\t\t: false,\n\t\t/**\n\t\t * configure the various strings used throughout the tree\n\t\t *\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\n\t\t * If left as `false` no replacement is made.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'strings' : {\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t *\n\t\t * @name $.jstree.defaults.core.strings\n\t\t */\n\t\tstrings\t\t\t: false,\n\t\t/**\n\t\t * determines what happens when a user tries to modify the structure of the tree\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\n\t\t *\n\t\t * __Examples__\n\t\t *\n\t\t *\t$('#tree').jstree({\n\t\t *\t\t'core' : {\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node' or 'copy_node'\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\t});\n\t\t * \n\t\t * @name $.jstree.defaults.core.check_callback\n\t\t */\n\t\tcheck_callback\t: false,\n\t\t/**\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\n\t\t * @name $.jstree.defaults.core.error\n\t\t */\n\t\terror\t\t\t: $.noop,\n\t\t/**\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\n\t\t * @name $.jstree.defaults.core.animation\n\t\t */\n\t\tanimation\t\t: 200,\n\t\t/**\n\t\t * a boolean indicating if multiple nodes can be selected\n\t\t * @name $.jstree.defaults.core.multiple\n\t\t */\n\t\tmultiple\t\t: true,\n\t\t/**\n\t\t * theme configuration object\n\t\t * @name $.jstree.defaults.core.themes\n\t\t */\n\t\tthemes\t\t\t: {\n\t\t\t/**\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\n\t\t\t * @name $.jstree.defaults.core.themes.name\n\t\t\t */\n\t\t\tname\t\t\t: false,\n\t\t\t/**\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\n\t\t\t * @name $.jstree.defaults.core.themes.url\n\t\t\t */\n\t\t\turl\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\n\t\t\t * @name $.jstree.defaults.core.themes.dir\n\t\t\t */\n\t\t\tdir\t\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean indicating if connecting dots are shown\n\t\t\t * @name $.jstree.defaults.core.themes.dots\n\t\t\t */\n\t\t\tdots\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if node icons are shown\n\t\t\t * @name $.jstree.defaults.core.themes.icons\n\t\t\t */\n\t\t\ticons\t\t\t: true,\n\t\t\t/**\n\t\t\t * a boolean indicating if the tree background is striped\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\n\t\t\t */\n\t\t\tstripes\t\t\t: false,\n\t\t\t/**\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\n\t\t\t * @name $.jstree.defaults.core.themes.variant\n\t\t\t */\n\t\t\tvariant\t\t\t: false,\n\t\t\t/**\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\n\t\t\t */\n\t\t\tresponsive\t\t: false\n\t\t},\n\t\t/**\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\n\t\t */\n\t\texpand_selected_onload : true,\n\t\t/**\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\n\t\t * @name $.jstree.defaults.core.worker\n\t\t */\n\t\tworker : true,\n\t\t/**\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\n\t\t * @name $.jstree.defaults.core.force_text\n\t\t */\n\t\tforce_text : false\n\t};\n\t$.jstree.core.prototype = {\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name plugin(deco [, opts])\n\t\t * @param  {String} deco the plugin to decorate with\n\t\t * @param  {Object} opts options for the plugin\n\t\t * @return {jsTree}\n\t\t */\n\t\tplugin : function (deco, opts) {\n\t\t\tvar Child = $.jstree.plugins[deco];\n\t\t\tif(Child) {\n\t\t\t\tthis._data[deco] = {};\n\t\t\t\tChild.prototype = this;\n\t\t\t\treturn new Child(opts, this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t/**\n\t\t * used to decorate an instance with a plugin. Used internally.\n\t\t * @private\n\t\t * @name init(el, optons)\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\n\t\t * @param {Object} options options for this instance\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\n\t\t */\n\t\tinit : function (el, options) {\n\t\t\tthis._model = {\n\t\t\t\tdata : {\n\t\t\t\t\t'#' : {\n\t\t\t\t\t\tid : '#',\n\t\t\t\t\t\tparent : null,\n\t\t\t\t\t\tparents : [],\n\t\t\t\t\t\tchildren : [],\n\t\t\t\t\t\tchildren_d : [],\n\t\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tchanged : [],\n\t\t\t\tforce_full_redraw : false,\n\t\t\t\tredraw_timeout : false,\n\t\t\t\tdefault_state : {\n\t\t\t\t\tloaded : true,\n\t\t\t\t\topened : false,\n\t\t\t\t\tselected : false,\n\t\t\t\t\tdisabled : false\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.element = $(el).addClass('jstree jstree-' + this._id);\n\t\t\tthis.settings = options;\n\t\t\tthis.element.bind(\"destroyed\", $.proxy(this.teardown, this));\n\n\t\t\tthis._data.core.ready = false;\n\t\t\tthis._data.core.loaded = false;\n\t\t\tthis._data.core.rtl = (this.element.css(\"direction\") === \"rtl\");\n\t\t\tthis.element[this._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\n\t\t\tthis.element.attr('role','tree');\n\n\t\t\tthis.bind();\n\t\t\t/**\n\t\t\t * triggered after all events are bound\n\t\t\t * @event\n\t\t\t * @name init.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"init\");\n\n\t\t\tthis._data.core.original_container_html = this.element.find(\" > ul > li\").clone(true);\n\t\t\tthis._data.core.original_container_html\n\t\t\t\t.find(\"li\").addBack()\n\t\t\t\t.contents().filter(function() {\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\n\t\t\t\t})\n\t\t\t\t.remove();\n\t\t\tthis.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\tthis._data.core.li_height = this.get_container_ul().children(\"li:eq(0)\").height() || 24;\n\t\t\t/**\n\t\t\t * triggered after the loading text is shown and before loading starts\n\t\t\t * @event\n\t\t\t * @name loading.jstree\n\t\t\t */\n\t\t\tthis.trigger(\"loading\");\n\t\t\tthis.load_node('#');\n\t\t},\n\t\t/**\n\t\t * destroy an instance\n\t\t * @name destroy()\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\n\t\t */\n\t\tdestroy : function (keep_html) {\n\t\t\tif(!keep_html) { this.element.empty(); }\n\t\t\tthis.element.unbind(\"destroyed\", this.teardown);\n\t\t\tthis.teardown();\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name teardown()\n\t\t */\n\t\tteardown : function () {\n\t\t\tthis.unbind();\n\t\t\tthis.element\n\t\t\t\t.removeClass('jstree')\n\t\t\t\t.removeData('jstree')\n\t\t\t\t.find(\"[class^='jstree']\")\n\t\t\t\t\t.addBack()\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\n\t\t\tthis.element = null;\n\t\t},\n\t\t/**\n\t\t * bind all events. Used internally.\n\t\t * @private\n\t\t * @name bind()\n\t\t */\n\t\tbind : function () {\n\t\t\tthis.element\n\t\t\t\t.on(\"dblclick.jstree\", function () {\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\n\t\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif(window.getSelection) {\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t\t\t\t\tsel.collapse();\n\t\t\t\t\t\t\t\t} catch (ignore) { }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.toggle_node(e.target);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t$(e.currentTarget).focus();\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tif(e.target.tagName === \"INPUT\") { return true; }\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"click\";\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_open(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.close_node(e.currentTarget);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_prev_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tif(this.is_closed(e.currentTarget)) {\n\t\t\t\t\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_next_dom(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// delete\n\t\t\t\t\t\t\tcase 46:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\to = this.is_selected(o) ? this.get_selected() : o;\n\t\t\t\t\t\t\t\t\t// this.delete_node(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// f2\n\t\t\t\t\t\t\tcase 113:\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\to = this.get_node(e.currentTarget);\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\tif(o && o.id && o.id !== '#') {\n\t\t\t\t\t\t\t\t\t// this.edit(o);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tif(data.status) {\n\t\t\t\t\t\t\tif(data.node.id === '#' && !this._data.core.loaded) {\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name loaded.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!this._data.core.ready && !this.get_container_ul().find('.jstree-loading:eq(0)').length) {\n\t\t\t\t\t\t\t\tthis._data.core.ready = true;\n\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\n\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\n\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\n\t\t\t\t\t\t\t\t * @event\n\t\t\t\t\t\t\t\t * @name ready.jstree\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function () { this.trigger(\"ready\"); }, this), 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t// THEME RELATED\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tvar s = this.settings.core.themes;\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t}, this))\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * part of the destroying of an instance. Used internally.\n\t\t * @private\n\t\t * @name unbind()\n\t\t */\n\t\tunbind : function () {\n\t\t\tthis.element.off('.jstree');\n\t\t\t$(document).off('.jstree-' + this._id);\n\t\t},\n\t\t/**\n\t\t * trigger an event. Used internally.\n\t\t * @private\n\t\t * @name trigger(ev [, data])\n\t\t * @param  {String} ev the name of the event to trigger\n\t\t * @param  {Object} data additional data to pass with the event\n\t\t */\n\t\ttrigger : function (ev, data) {\n\t\t\tif(!data) {\n\t\t\t\tdata = {};\n\t\t\t}\n\t\t\tdata.instance = this;\n\t\t\tthis.element.triggerHandler(ev.replace('.jstree','') + '.jstree', data);\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended instance container\n\t\t * @name get_container()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container : function () {\n\t\t\treturn this.element;\n\t\t},\n\t\t/**\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\n\t\t * @private\n\t\t * @name get_container_ul()\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_container_ul : function () {\n\t\t\treturn this.element.children(\".jstree-children:eq(0)\");\n\t\t},\n\t\t/**\n\t\t * gets string replacements (localization). Used internally.\n\t\t * @private\n\t\t * @name get_string(key)\n\t\t * @param  {String} key\n\t\t * @return {String}\n\t\t */\n\t\tget_string : function (key) {\n\t\t\tvar a = this.settings.core.strings;\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\n\t\t\tif(a && a[key]) { return a[key]; }\n\t\t\treturn key;\n\t\t},\n\t\t/**\n\t\t * gets the first child of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _firstChild(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_firstChild : function (dom) {\n\t\t\tdom = dom ? dom.firstChild : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the next sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _nextSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_nextSibling : function (dom) {\n\t\t\tdom = dom ? dom.nextSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.nextSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * gets the previous sibling of a DOM node. Used internally.\n\t\t * @private\n\t\t * @name _previousSibling(dom)\n\t\t * @param  {DOMElement} dom\n\t\t * @return {DOMElement}\n\t\t */\n\t\t_previousSibling : function (dom) {\n\t\t\tdom = dom ? dom.previousSibling : null;\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\n\t\t\t\tdom = dom.previousSibling;\n\t\t\t}\n\t\t\treturn dom;\n\t\t},\n\t\t/**\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\n\t\t * @name get_node(obj [, as_dom])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} as_dom\n\t\t * @return {Object|jQuery}\n\t\t */\n\t\tget_node : function (obj, as_dom) {\n\t\t\tif(obj && obj.id) {\n\t\t\t\tobj = obj.id;\n\t\t\t}\n\t\t\tvar dom;\n\t\t\ttry {\n\t\t\t\tif(this._model.data[obj]) {\n\t\t\t\t\tobj = this._model.data[obj];\n\t\t\t\t}\n\t\t\t\telse if(((dom = $(obj, this.element)).length || (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length) && this._model.data[dom.closest('.jstree-node').attr('id')]) {\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\n\t\t\t\t}\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\n\t\t\t\t\tobj = this._model.data['#'];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif(as_dom) {\n\t\t\t\t\tobj = obj.id === '#' ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t} catch (ex) { return false; }\n\t\t},\n\t\t/**\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\n\t\t * @name get_path(obj [, glue, ids])\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\n\t\t * @return {mixed}\n\t\t */\n\t\tget_path : function (obj, glue, ids) {\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#' || !obj.parents) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = [];\n\t\t\tp.push(ids ? obj.id : obj.text);\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\n\t\t\t}\n\t\t\tp = p.reverse().slice(1);\n\t\t\treturn glue ? p.join(glue) : p;\n\t\t},\n\t\t/**\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_next_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_next_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._nextSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._nextSibling(obj[0])) !== null) {\n\t\t\t\treturn $(tmp);\n\t\t\t}\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").next(\".jstree-node\").eq(0);\n\t\t},\n\t\t/**\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\n\t\t * @name get_prev_dom(obj [, strict])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Boolean} strict\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_prev_dom : function (obj, strict) {\n\t\t\tvar tmp;\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(strict) {\n\t\t\t\ttmp = this._previousSibling(obj[0]);\n\t\t\t\treturn tmp ? $(tmp) : false;\n\t\t\t}\n\t\t\tif((tmp = this._previousSibling(obj[0])) !== null) {\n\t\t\t\tobj = $(tmp);\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\n\t\t\t\t\tobj = obj.children(\".jstree-children:eq(0)\").children(\".jstree-node:last\");\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\ttmp = obj[0].parentNode.parentNode;\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\n\t\t},\n\t\t/**\n\t\t * get the parent ID of a node\n\t\t * @name get_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.parent;\n\t\t},\n\t\t/**\n\t\t * get a jQuery collection of all the children of a node (node must be rendered)\n\t\t * @name get_children_dom(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {jQuery}\n\t\t */\n\t\tget_children_dom : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(obj[0] === this.element[0]) {\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\n\t\t\t}\n\t\t\tif(!obj || !obj.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\n\t\t},\n\t\t/**\n\t\t * checks if a node has children\n\t\t * @name is_parent(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_parent : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\n\t\t},\n\t\t/**\n\t\t * checks if a node is loaded (its children are available)\n\t\t * @name is_loaded(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loaded : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.loaded;\n\t\t},\n\t\t/**\n\t\t * check if a node is currently loading (fetching children)\n\t\t * @name is_loading(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_loading : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.loading;\n\t\t},\n\t\t/**\n\t\t * check if a node is opened\n\t\t * @name is_open(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_open : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node is in a closed state\n\t\t * @name is_closed(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_closed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\n\t\t},\n\t\t/**\n\t\t * check if a node has no children\n\t\t * @name is_leaf(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_leaf : function (obj) {\n\t\t\treturn !this.is_parent(obj);\n\t\t},\n\t\t/**\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\n\t\t * @name load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\n\t\t * @return {Boolean}\n\t\t * @trigger load_node.jstree\n\t\t */\n\t\tload_node : function (obj, callback) {\n\t\t\tvar k, l, i, j, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) {\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\n\t\t\tif(obj.state.loaded) {\n\t\t\t\tobj.state.loaded = false;\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\n\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove_item(this._model.data[obj.parents[i]].children_d, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\n\t\t\t\t\t\tc = true;\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.children_d[k]);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\n\t\t\t\t}\n\t\t\t\tobj.children = [];\n\t\t\t\tobj.children_d = [];\n\t\t\t\tif(c) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.loading = true;\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\");\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\n\t\t\t\tobj = this._model.data[obj.id];\n\t\t\t\tobj.state.loading = false;\n\t\t\t\tobj.state.loaded = status;\n\t\t\t\tvar dom = this.get_node(obj, true);\n\t\t\t\tif(obj.state.loaded && !obj.children.length && dom && dom.length && !dom.hasClass('jstree-leaf')) {\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open').addClass('jstree-leaf');\n\t\t\t\t}\n\t\t\t\tdom.removeClass(\"jstree-loading\");\n\t\t\t\t/**\n\t\t\t\t * triggered after a node is loaded\n\t\t\t\t * @event\n\t\t\t\t * @name load_node.jstree\n\t\t\t\t * @param {Object} node the node that was loading\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\n\t\t\t\t */\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, status);\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\n\t\t * @private\n\t\t * @name _load_nodes(nodes [, callback])\n\t\t * @param  {array} nodes\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\n\t\t */\n\t\t_load_nodes : function (nodes, callback, is_callback) {\n\t\t\tvar r = true,\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\tif(m[nodes[i]] && (!m[nodes[i]].state.loaded || !is_callback)) {\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\n\t\t\t\t\t}\n\t\t\t\t\tr = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(r) {\n\t\t\t\tif(callback && !callback.done) {\n\t\t\t\t\tcallback.call(this, nodes);\n\t\t\t\t\tcallback.done = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * handles the actual loading of a node. Used only internally.\n\t\t * @private\n\t\t * @name _load_node(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\n\t\t * @return {Boolean}\n\t\t */\n\t\t_load_node : function (obj, callback) {\n\t\t\tvar s = this.settings.core.data, t;\n\t\t\t// use original HTML\n\t\t\tif(!s) {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t// return callback.call(this, obj.id === '#' ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\n\t\t\t}\n\t\t\tif($.isFunction(s)) {\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\n\t\t\t\t\tif(d === false) {\n\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(typeof s === 'object') {\n\t\t\t\tif(s.url) {\n\t\t\t\t\ts = $.extend(true, {}, s);\n\t\t\t\t\tif($.isFunction(s.url)) {\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\tif($.isFunction(s.data)) {\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\n\t\t\t\t\t}\n\t\t\t\t\treturn $.ajax(s)\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\n\t\t\t\t\t\t\t\tif(type.indexOf('json') !== -1 || typeof d === \"object\") {\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(type.indexOf('html') !== -1 || typeof d === \"string\") {\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $(d), function (status) { callback.call(this, status); });\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.fail($.proxy(function (f) {\n\t\t\t\t\t\t\t\tcallback.call(this, false);\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\tt = ($.isArray(s) || $.isPlainObject(s)) ? JSON.parse(JSON.stringify(s)) : s;\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_json_data(obj, t) : false) );\n\t\t\t}\n\t\t\tif(typeof s === 'string') {\n\t\t\t\tif(obj.id === '#') {\n\t\t\t\t\treturn this._append_html_data(obj, $(s), function (status) {\n\t\t\t\t\t\tcallback.call(this, status);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\treturn callback.call(this, false);\n\t\t\t\t}\n\t\t\t\t//return callback.call(this, (obj.id === \"#\" ? this._append_html_data(obj, $(s)) : false) );\n\t\t\t}\n\t\t\treturn callback.call(this, false);\n\t\t},\n\t\t/**\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\n\t\t * @private\n\t\t * @name _node_changed(obj [, callback])\n\t\t * @param  {mixed} obj\n\t\t */\n\t\t_node_changed : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj) {\n\t\t\t\tthis._model.changed.push(obj.id);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * appends HTML content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_html_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the HTML string to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_html_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\n\t\t\t\tpar = dom.id,\n\t\t\t\tchd = [],\n\t\t\t\tdpc = [],\n\t\t\t\tm = this._model.data,\n\t\t\t\tp = m[par],\n\t\t\t\ts = this._data.core.selected.length,\n\t\t\t\ttmp, i, j;\n\t\t\tdat.each($.proxy(function (i, v) {\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\n\t\t\t\tif(tmp) {\n\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tp.children = chd;\n\t\t\tp.children_d = dpc;\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when new data is inserted to the tree model\n\t\t\t * @event\n\t\t\t * @name model.jstree\n\t\t\t * @param {Array} nodes an array of node IDs\n\t\t\t * @param {String} parent the parent ID of the nodes\n\t\t\t */\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\n\t\t\tif(par !== '#') {\n\t\t\t\tthis._node_changed(par);\n\t\t\t\tthis.redraw();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\tthis.redraw(true);\n\t\t\t}\n\t\t\tif(this._data.core.selected.length !== s) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t}\n\t\t\tcb.call(this, true);\n\t\t},\n\t\t/**\n\t\t * appends JSON content to the tree. Used internally.\n\t\t * @private\n\t\t * @name _append_json_data(obj, data)\n\t\t * @param  {mixed} obj the node to append to\n\t\t * @param  {String} data the JSON object to parse and append\n\t\t * @trigger model.jstree, changed.jstree\n\t\t */\n\t\t_append_json_data : function (dom, data, cb) {\n\t\t\tdom = this.get_node(dom);\n\t\t\tdom.children = [];\n\t\t\tdom.children_d = [];\n\t\t\t// *%$@!!!\n\t\t\tif(data.d) {\n\t\t\t\tdata = data.d;\n\t\t\t\tif(typeof data === \"string\") {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!$.isArray(data)) { data = [data]; }\n\t\t\tvar w = null,\n\t\t\t\targs = {\n\t\t\t\t\t'df'\t: this._model.default_state,\n\t\t\t\t\t'dat'\t: data,\n\t\t\t\t\t'par'\t: dom.id,\n\t\t\t\t\t'm'\t\t: this._model.data,\n\t\t\t\t\t't_id'\t: this._id,\n\t\t\t\t\t't_cnt'\t: this._cnt,\n\t\t\t\t\t'sel'\t: this._data.core.selected\n\t\t\t\t},\n\t\t\t\tfunc = function (data, undefined) {\n\t\t\t\t\tif(data.data) { data = data.data; }\n\t\t\t\t\tvar dat = data.dat,\n\t\t\t\t\t\tpar = data.par,\n\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\tdpc = [],\n\t\t\t\t\t\tadd = [],\n\t\t\t\t\t\tdf = data.df,\n\t\t\t\t\t\tt_id = data.t_id,\n\t\t\t\t\t\tt_cnt = data.t_cnt,\n\t\t\t\t\t\tm = data.m,\n\t\t\t\t\t\tp = m[par],\n\t\t\t\t\t\tsel = data.sel,\n\t\t\t\t\t\ttmp, i, j, rslt,\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\n\t\t\t\t\t\t\t\ti, j, c, e,\n\t\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\tm[tmp.id].original = d;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\n\t\t\t\t\t\t\t} while(m[tid]);\n\n\t\t\t\t\t\t\ttmp = {\n\t\t\t\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\t\t\t\tchildren\t: [],\n\t\t\t\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\t\t\t\toriginal\t: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfor(i in df) {\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.data) {\n\t\t\t\t\t\t\t\ttmp.data = d.data;\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.state) {\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.id) {\n\t\t\t\t\t\t\t\ttmp.id = tid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\n\t\t\t\t\t\t\t\t\te = m[c];\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\n\t\t\t\t\t\t\t\ttmp.children = [];\n\t\t\t\t\t\t\t\ttmp.children_d = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete d.data;\n\t\t\t\t\t\t\tdelete d.children;\n\t\t\t\t\t\t\ttmp.original = d;\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\n\t\t\t\t\t\t\tif(tmp.state.selected) {\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn tmp.id;\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\n\t\t\t\t\t\t// 1) convert to object (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tif(!dat[i].children) {\n\t\t\t\t\t\t\t\tdat[i].children = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2) populate children (foreach)\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\n\t\t\t\t\t\t\t// populate parent.children_d\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\n\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\n\t\t\t\t\t\t\tif(tmp) {\n\t\t\t\t\t\t\t\tchd.push(tmp);\n\t\t\t\t\t\t\t\tdpc.push(tmp);\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.children = chd;\n\t\t\t\t\t\tp.children_d = dpc;\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trslt = {\n\t\t\t\t\t\t\t'cnt' : t_cnt,\n\t\t\t\t\t\t\t'mod' : m,\n\t\t\t\t\t\t\t'sel' : sel,\n\t\t\t\t\t\t\t'par' : par,\n\t\t\t\t\t\t\t'dpc' : dpc,\n\t\t\t\t\t\t\t'add' : add\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn rslt;\n\t\t\t\t},\n\t\t\t\trslt = function (rslt, worker) {\n\t\t\t\t\tthis._cnt = rslt.cnt;\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\n\n\t\t\t\t\tif(worker) {\n\t\t\t\t\t\tvar i, j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice(), m = this._model.data;\n\t\t\t\t\t\t// if selection was changed while calculating in worker\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\n\n\t\t\t\t\tif(rslt.par !== '#') {\n\t\t\t\t\t\tthis._node_changed(rslt.par);\n\t\t\t\t\t\tthis.redraw();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\n\t\t\t\t\t\tthis.redraw(true);\n\t\t\t\t\t}\n\t\t\t\t\tif(rslt.add.length) {\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\n\t\t\t\t\t}\n\t\t\t\t\tcb.call(this, true);\n\t\t\t\t};\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\n\t\t\t\ttry {\n\t\t\t\t\tif(this._wrk === null) {\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\n\t\t\t\t\t\t\tnew window.Blob(\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString().replace(/return ([^;}]+)[\\s;}]+$/, 'postMessage($1);}')],\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tw = new window.Worker(this._wrk);\n\t\t\t\t\tw.onmessage = $.proxy(function (e) {\n\t\t\t\t\t\trslt.call(this, e.data, true);\n\t\t\t\t\t\tthis._data.core.working = false;\n\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\n\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(!this._data.core.working) {\n\t\t\t\t\t\tthis._data.core.working = true;\n\t\t\t\t\t\tw.postMessage(args);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\trslt.call(this, func(args), false);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\trslt.call(this, func(args), false);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_html(d [, p, ps])\n\t\t * @param  {jQuery} d the jQuery object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_html : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = [].concat(ps); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar c, e, m = this._model.data,\n\t\t\t\tdata = {\n\t\t\t\t\tid\t\t\t: false,\n\t\t\t\t\ttext\t\t: false,\n\t\t\t\t\ticon\t\t: true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: [],\n\t\t\t\t\tchildren_d\t: [],\n\t\t\t\t\tdata\t\t: null,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t}, i, tmp, tid;\n\t\t\tfor(i in this._model.default_state) {\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = $.vakata.attributes(d, true);\n\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\tv = $.trim(v);\n\t\t\t\tif(!v.length) { return true; }\n\t\t\t\tdata.li_attr[i] = v;\n\t\t\t\tif(i === 'id') {\n\t\t\t\t\tdata.id = v.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t\ttmp = d.children('a').eq(0);\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\n\t\t\t\t$.each(tmp, function (i, v) {\n\t\t\t\t\tv = $.trim(v);\n\t\t\t\t\tif(v.length) {\n\t\t\t\t\t\tdata.a_attr[i] = v;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\ttmp = d.children(\"a:eq(0)\").length ? d.children(\"a:eq(0)\").clone() : d.clone();\n\t\t\ttmp.children(\"ins, i, ul\").remove();\n\t\t\ttmp = tmp.html();\n\t\t\ttmp = $('<div />').html(tmp);\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\n\t\t\ttmp = d.data();\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\n\t\t\tif(data.data && data.data.jstree) {\n\t\t\t\tfor(i in data.data.jstree) {\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\n\t\t\tif(tmp.length) {\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\n\t\t\t}\n\t\t\tif(data.state.icon) {\n\t\t\t\tdata.icon = data.state.icon;\n\t\t\t}\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\n\t\t\tif(tmp.length) {\n\t\t\t\ttmp.each($.proxy(function (i, v) {\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\n\t\t\t\t\te = this._model.data[c];\n\t\t\t\t\tdata.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(d.hasClass('jstree-closed')) {\n\t\t\t\t\tdata.state.loaded = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.li_attr['class']) {\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\n\t\t\t}\n\t\t\tif(data.a_attr['class']) {\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\n\t\t\t}\n\t\t\tm[data.id] = data;\n\t\t\tif(data.state.selected) {\n\t\t\t\tthis._data.core.selected.push(data.id);\n\t\t\t}\n\t\t\treturn data.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = d.id.toString(),\n\t\t\t\tm = this._model.data,\n\t\t\t\tdf = this._model.default_state,\n\t\t\t\ti, j, c, e,\n\t\t\t\ttmp = {\n\t\t\t\t\tid\t\t\t: tid,\n\t\t\t\t\ttext\t\t: d.text || '',\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\n\t\t\t\t\tparent\t\t: p,\n\t\t\t\t\tparents\t\t: ps,\n\t\t\t\t\tchildren\t: d.children || [],\n\t\t\t\t\tchildren_d\t: d.children_d || [],\n\t\t\t\t\tdata\t\t: d.data,\n\t\t\t\t\tstate\t\t: { },\n\t\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\t\toriginal\t: false\n\t\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tid;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tm[tmp.id] = tmp;\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\n\t\t\t\te = m[c];\n\t\t\t\ttmp.children_d.push(c);\n\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\tm[tmp.id].original = d;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\n\t\t * @private\n\t\t * @name _parse_model_from_json(d [, p, ps])\n\t\t * @param  {Object} d the JSON object to parse\n\t\t * @param  {String} p the parent ID\n\t\t * @param  {Array} ps list of all parents\n\t\t * @return {String} the ID of the object added to the model\n\t\t */\n\t\t_parse_model_from_json : function (d, p, ps) {\n\t\t\tif(!ps) { ps = []; }\n\t\t\telse { ps = ps.concat(); }\n\t\t\tif(p) { ps.unshift(p); }\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\n\t\t\tdo {\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\n\t\t\t} while(m[tid]);\n\n\t\t\ttmp = {\n\t\t\t\tid\t\t\t: false,\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\n\t\t\t\tparent\t\t: p,\n\t\t\t\tparents\t\t: ps,\n\t\t\t\tchildren\t: [],\n\t\t\t\tchildren_d\t: [],\n\t\t\t\tdata\t\t: null,\n\t\t\t\tstate\t\t: { },\n\t\t\t\tli_attr\t\t: { id : false },\n\t\t\t\ta_attr\t\t: { href : '#' },\n\t\t\t\toriginal\t: false\n\t\t\t};\n\t\t\tfor(i in df) {\n\t\t\t\tif(df.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.state[i] = df[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\n\t\t\tif(d && d.text) { tmp.text = d.text; }\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\n\t\t\t\ttmp.icon = d.data.jstree.icon;\n\t\t\t}\n\t\t\tif(d && d.data) {\n\t\t\t\ttmp.data = d.data;\n\t\t\t\tif(d.data.jstree) {\n\t\t\t\t\tfor(i in d.data.jstree) {\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.state === 'object') {\n\t\t\t\tfor (i in d.state) {\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && typeof d.li_attr === 'object') {\n\t\t\t\tfor (i in d.li_attr) {\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\n\t\t\t}\n\t\t\tif(!tmp.id) {\n\t\t\t\ttmp.id = tid;\n\t\t\t}\n\t\t\tif(!tmp.li_attr.id) {\n\t\t\t\ttmp.li_attr.id = tmp.id;\n\t\t\t}\n\t\t\tif(d && typeof d.a_attr === 'object') {\n\t\t\t\tfor (i in d.a_attr) {\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(d && d.children && d.children.length) {\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\n\t\t\t\t\te = m[c];\n\t\t\t\t\ttmp.children.push(c);\n\t\t\t\t\tif(e.children_d.length) {\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\n\t\t\t}\n\t\t\tif(d && d.children && d.children === true) {\n\t\t\t\ttmp.state.loaded = false;\n\t\t\t\ttmp.children = [];\n\t\t\t\ttmp.children_d = [];\n\t\t\t}\n\t\t\tdelete d.data;\n\t\t\tdelete d.children;\n\t\t\ttmp.original = d;\n\t\t\tm[tmp.id] = tmp;\n\t\t\tif(tmp.state.selected) {\n\t\t\t\tthis._data.core.selected.push(tmp.id);\n\t\t\t}\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn. Used internally.\n\t\t * @private\n\t\t * @name _redraw()\n\t\t * @trigger redraw.jstree\n\t\t */\n\t\t_redraw : function () {\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data['#'].children.concat([]) : this._model.changed.concat([]),\n\t\t\t\tf = document.createElement('UL'), tmp, i, j;\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\n\t\t\t\t\tf.appendChild(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this._model.force_full_redraw) {\n\t\t\t\tf.className = this.get_container_ul()[0].className;\n\t\t\t\tthis.element.empty().append(f);\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\n\t\t\t}\n\t\t\tthis._model.force_full_redraw = false;\n\t\t\tthis._model.changed = [];\n\t\t\t/**\n\t\t\t * triggered after nodes are redrawn\n\t\t\t * @event\n\t\t\t * @name redraw.jstree\n\t\t\t * @param {array} nodes the redrawn nodes\n\t\t\t */\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\n\t\t},\n\t\t/**\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\n\t\t * @name redraw([full])\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\n\t\t */\n\t\tredraw : function (full) {\n\t\t\tif(full) {\n\t\t\t\tthis._model.force_full_redraw = true;\n\t\t\t}\n\t\t\t//if(this._model.redraw_timeout) {\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\n\t\t\t//}\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\n\t\t\tthis._redraw();\n\t\t},\n\t\t/**\n\t\t * redraws a single node. Used internally.\n\t\t * @private\n\t\t * @name redraw_node(node, deep, is_callback)\n\t\t * @param {mixed} node the node to redraw\n\t\t * @param {Boolean} deep should child nodes be redrawn too\n\t\t * @param {Boolean} is_callback is this a recursion call\n\t\t */\n\t\tredraw_node : function (node, deep, is_callback) {\n\t\t\tvar obj = this.get_node(node),\n\t\t\t\tpar = false,\n\t\t\t\tind = false,\n\t\t\t\told = false,\n\t\t\t\ti = false,\n\t\t\t\tj = false,\n\t\t\t\tk = false,\n\t\t\t\tc = '',\n\t\t\t\td = document,\n\t\t\t\tm = this._model.data,\n\t\t\t\tf = false,\n\t\t\t\ts = false,\n\t\t\t\ttmp = null;\n\t\t\tif(!obj) { return false; }\n\t\t\tif(obj.id === '#') {  return this.redraw(true); }\n\t\t\tdeep = deep || obj.children.length === 0;\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\n\t\t\tif(!node) {\n\t\t\t\tdeep = true;\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = obj.parent !== '#' ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m['#'].children : m[obj.parent].children);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode = $(node);\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tpar = node.parent().parent()[0];\n\t\t\t\t\tif(par === this.element[0]) {\n\t\t\t\t\t\tpar = null;\n\t\t\t\t\t}\n\t\t\t\t\tind = node.index();\n\t\t\t\t}\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\n\t\t\t\t\tdeep = true;\n\t\t\t\t}\n\t\t\t\tif(!deep) {\n\t\t\t\t\told = node.children('.jstree-children')[0];\n\t\t\t\t}\n\t\t\t\ts = node.attr('aria-selected');\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\n\t\t\t\tnode.remove();\n\t\t\t\t//node = d.createElement('LI');\n\t\t\t\t//node = node[0];\n\t\t\t}\n\t\t\tnode = _node.cloneNode(true);\n\t\t\t// node is DOM, deep is boolean\n\n\t\t\tc = 'jstree-node ';\n\t\t\tfor(i in obj.li_attr) {\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\n\t\t\t\t\tif(i === 'id') { continue; }\n\t\t\t\t\tif(i !== 'class') {\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += obj.li_attr[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s && s !== \"false\") {\n\t\t\t\tnode.setAttribute('aria-selected', true);\n\t\t\t}\n\t\t\tif(obj.state.loaded && !obj.children.length) {\n\t\t\t\tc += ' jstree-leaf';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\n\t\t\t}\n\t\t\tif(obj.parent !== null && m[obj.parent].children[m[obj.parent].children.length - 1] === obj.id) {\n\t\t\t\tc += ' jstree-last';\n\t\t\t}\n\t\t\tnode.id = obj.id;\n\t\t\tnode.className = c;\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\n\t\t\tfor(j in obj.a_attr) {\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\n\t\t\t\t\tif(j !== 'class') {\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.length) {\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\n\t\t\t}\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\n\t\t\t\tif(obj.icon === false) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\n\t\t\t\t}\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url('+obj.icon+')';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this.settings.core.force_text) {\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\n\t\t\t}\n\n\t\t\tif(deep && obj.children.length && obj.state.opened && obj.state.loaded) {\n\t\t\t\tk = d.createElement('UL');\n\t\t\t\tk.setAttribute('role', 'group');\n\t\t\t\tk.className = 'jstree-children';\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\n\t\t\t\t}\n\t\t\t\tnode.appendChild(k);\n\t\t\t}\n\t\t\tif(old) {\n\t\t\t\tnode.appendChild(old);\n\t\t\t}\n\t\t\tif(!is_callback) {\n\t\t\t\t// append back using par / ind\n\t\t\t\tif(!par) {\n\t\t\t\t\tpar = this.element[0];\n\t\t\t\t}\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\n\t\t\t\t\t\ttmp = par.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!tmp) {\n\t\t\t\t\ttmp = d.createElement('UL');\n\t\t\t\t\ttmp.setAttribute('role', 'group');\n\t\t\t\t\ttmp.className = 'jstree-children';\n\t\t\t\t\tpar.appendChild(tmp);\n\t\t\t\t}\n\t\t\t\tpar = tmp;\n\n\t\t\t\tif(ind < par.childNodes.length) {\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpar.appendChild(node);\n\t\t\t\t}\n\t\t\t\tif(f) {\n\t\t\t\t\tnode.childNodes[1].focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\n\t\t\t\tobj.state.opened = false;\n\t\t\t\tsetTimeout($.proxy(function () {\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\n\t\t\t\t}, this), 0);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/**\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_node(obj [, callback, animation])\n\t\t * @param {mixed} obj the node to open\n\t\t * @param {Function} callback a function to execute once the node is opened\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\n\t\t */\n\t\topen_node : function (obj, callback, animation) {\n\t\t\tvar t1, t2, d, t;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tif(!this.is_closed(obj)) {\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, false);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!this.is_loaded(obj)) {\n\t\t\t\tif(this.is_loading(obj)) {\n\t\t\t\t\treturn setTimeout($.proxy(function () {\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\n\t\t\t\t\t}, this), 500);\n\t\t\t\t}\n\t\t\t\tthis.load_node(obj, function (o, ok) {\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\td = this.get_node(obj, true);\n\t\t\t\tt = this;\n\t\t\t\tif(d.length) {\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\n\t\t\t\t\t\tobj.state.opened = true;\n\t\t\t\t\t\tthis.redraw_node(obj, true);\n\t\t\t\t\t\td = this.get_node(obj, true);\n\t\t\t\t\t}\n\t\t\t\t\tif(!animation) {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t\t\td\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tobj.state.opened = true;\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(this, obj, true);\n\t\t\t\t}\n\t\t\t\tif(!d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name before_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\n\t\t\t\t * @event\n\t\t\t\t * @name open_node.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\n\t\t\t\tif(!animation || !d.length) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name after_open.jstree\n\t\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens every parent of a node (node should be loaded)\n\t\t * @name _open_to(obj)\n\t\t * @param {mixed} obj the node to reveal\n\t\t * @private\n\t\t */\n\t\t_open_to : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar i, j, p = obj.parents;\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\n\t\t\t\tif(i !== '#') {\n\t\t\t\t\tthis.open_node(p[i], false, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\n\t\t},\n\t\t/**\n\t\t * closes a node, hiding its children\n\t\t * @name close_node(obj [, animation])\n\t\t * @param {mixed} obj the node to close\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\n\t\t * @trigger close_node.jstree, after_close.jstree\n\t\t */\n\t\tclose_node : function (obj, animation) {\n\t\t\tvar t1, t2, t, d;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.close_node(obj[t1], animation);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\n\t\t\tt = this;\n\t\t\td = this.get_node(obj, true);\n\t\t\tif(d.length) {\n\t\t\t\tif(!animation) {\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\n\t\t\t\t\t\t\tthis.style.display = \"\";\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\n\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.state.opened = false;\n\t\t\t/**\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\n\t\t\t * @event\n\t\t\t * @name close_node.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\n\t\t\tif(!animation || !d.length) {\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is closed and the animation is complete\n\t\t\t\t * @event\n\t\t\t\t * @name after_close.jstree\n\t\t\t\t * @param {Object} node the closed node\n\t\t\t\t */\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\n\t\t * @name toggle_node(obj)\n\t\t * @param {mixed} obj the node to toggle\n\t\t */\n\t\ttoggle_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.toggle_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif(this.is_closed(obj)) {\n\t\t\t\treturn this.open_node(obj);\n\t\t\t}\n\t\t\tif(this.is_open(obj)) {\n\t\t\t\treturn this.close_node(obj);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\n\t\t * @name open_all([obj, animation, original_obj])\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\n\t\t * @trigger open_all.jstree\n\t\t */\n\t\topen_all : function (obj, animation, original_obj) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\n\t\t\t}\n\t\t\toriginal_obj = original_obj || dom;\n\t\t\t_this = this;\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\n\t\t\tdom.each(function () {\n\t\t\t\t_this.open_node(\n\t\t\t\t\tthis,\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\n\t\t\t\t\tanimation || 0\n\t\t\t\t);\n\t\t\t});\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\n\t\t\t\t/**\n\t\t\t\t * triggered when an `open_all` call completes\n\t\t\t\t * @event\n\t\t\t\t * @name open_all.jstree\n\t\t\t\t * @param {Object} node the opened node\n\t\t\t\t */\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * closes all nodes within a node (or the tree), revaling their children\n\t\t * @name close_all([obj, animation])\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\n\t\t * @trigger close_all.jstree\n\t\t */\n\t\tclose_all : function (obj, animation) {\n\t\t\tif(!obj) { obj = '#'; }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar dom = obj.id === '#' ? this.get_container_ul() : this.get_node(obj, true),\n\t\t\t\t_this = this, i, j;\n\t\t\tif(!dom.length) {\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\n\t\t\t\t}\n\t\t\t\treturn this.trigger('close_all', { \"node\" : obj });\n\t\t\t}\n\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\n\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\n\t\t\t/**\n\t\t\t * triggered when an `close_all` call completes\n\t\t\t * @event\n\t\t\t * @name close_all.jstree\n\t\t\t * @param {Object} node the closed node\n\t\t\t */\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * checks if a node is disabled (not selectable)\n\t\t * @name is_disabled(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_disabled : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn obj && obj.state && obj.state.disabled;\n\t\t},\n\t\t/**\n\t\t * enables a node - so that it can be selected\n\t\t * @name enable_node(obj)\n\t\t * @param {mixed} obj the node to enable\n\t\t * @trigger enable_node.jstree\n\t\t */\n\t\tenable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.enable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = false;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is enabled\n\t\t\t * @event\n\t\t\t * @name enable_node.jstree\n\t\t\t * @param {Object} node the enabled node\n\t\t\t */\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * disables a node - so that it can not be selected\n\t\t * @name disable_node(obj)\n\t\t * @param {mixed} obj the node to disable\n\t\t * @trigger disable_node.jstree\n\t\t */\n\t\tdisable_node : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.disable_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.state.disabled = true;\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled');\n\t\t\t/**\n\t\t\t * triggered when an node is disabled\n\t\t\t * @event\n\t\t\t * @name disable_node.jstree\n\t\t\t * @param {Object} node the disabled node\n\t\t\t */\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\n\t\t},\n\t\t/**\n\t\t * called when a node is selected by the user. Used internally.\n\t\t * @private\n\t\t * @name activate_node(obj, e)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Object} e the related event\n\t\t * @trigger activate_node.jstree\n\t\t */\n\t\tactivate_node : function (obj, e) {\n\t\t\tif(this.is_disabled(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\n\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\n\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.deselect_all(true);\n\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(e.shiftKey) {\n\t\t\t\t\tvar o = this.get_node(obj).id,\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\n\t\t\t\t\t\tc = false,\n\t\t\t\t\t\ti, j;\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\n\t\t\t\t\t\tif(p[i] === o) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(p[i] === l) {\n\t\t\t\t\t\t\tc = !c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(c || p[i] === o || p[i] === l) {\n\t\t\t\t\t\t\tthis.select_node(p[i], false, false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.deselect_node(p[i], false, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!this.is_selected(obj)) {\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when an node is clicked or intercated with by the user\n\t\t\t * @event\n\t\t\t * @name activate_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name hover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger hover_node.jstree\n\t\t */\n\t\thover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\n\t\t\tif(o && o.length) { this.dehover_node(o); }\n\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is hovered\n\t\t\t * @event\n\t\t\t * @name hover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); obj.attr('aria-selected', true); }, 0);\n\t\t},\n\t\t/**\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\n\t\t * @private\n\t\t * @name dehover_node(obj)\n\t\t * @param {mixed} obj\n\t\t * @trigger dehover_node.jstree\n\t\t */\n\t\tdehover_node : function (obj) {\n\t\t\tobj = this.get_node(obj, true);\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tobj.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-hovered');\n\t\t\t/**\n\t\t\t * triggered when an node is no longer hovered\n\t\t\t * @event\n\t\t\t * @name dehover_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t */\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\n\t\t},\n\t\t/**\n\t\t * select a node\n\t\t * @name select_node(obj [, supress_event, prevent_open])\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\n\t\t * @trigger select_node.jstree, changed.jstree\n\t\t */\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.selected) {\n\t\t\t\tobj.state.selected = true;\n\t\t\t\tthis._data.core.selected.push(obj.id);\n\t\t\t\tif(!prevent_open) {\n\t\t\t\t\tdom = this._open_to(obj);\n\t\t\t\t}\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is selected\n\t\t\t\t * @event\n\t\t\t\t * @name select_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when selection changes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name changed.jstree\n\t\t\t\t\t * @param {Object} node\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\n\t\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect a node\n\t\t * @name deselect_node(obj [, supress_event])\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_node.jstree, changed.jstree\n\t\t */\n\t\tdeselect_node : function (obj, supress_event, e) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.selected) {\n\t\t\t\tobj.state.selected = false;\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-clicked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is deselected\n\t\t\t\t * @event\n\t\t\t\t * @name deselect_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\n\t\t\t\t */\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\tif(!supress_event) {\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * select all nodes in the tree\n\t\t * @name select_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger select_all.jstree, changed.jstree\n\t\t */\n\t\tselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tthis._data.core.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are selected\n\t\t\t * @event\n\t\t\t * @name select_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * deselect all selected nodes\n\t\t * @name deselect_all([supress_event])\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\n\t\t * @trigger deselect_all.jstree, changed.jstree\n\t\t */\n\t\tdeselect_all : function (supress_event) {\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.core.selected = [];\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are deselected\n\t\t\t * @event\n\t\t\t * @name deselect_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t */\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\n\t\t\tif(!supress_event) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * checks if a node is selected\n\t\t * @name is_selected(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tis_selected : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn obj.state.selected;\n\t\t},\n\t\t/**\n\t\t * get an array of all selected nodes\n\t\t * @name get_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_selected : function (full) {\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\n\t\t},\n\t\t/**\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\n\t\t * @name get_top_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_top_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t},\n\t\t/**\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\n\t\t * @name get_bottom_selected([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t */\n\t\tget_bottom_selected : function (full) {\n\t\t\tvar tmp = this.get_selected(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t},\n\t\t/**\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\n\t\t * @name get_state()\n\t\t * @private\n\t\t * @return {Object}\n\t\t */\n\t\tget_state : function () {\n\t\t\tvar state\t= {\n\t\t\t\t'core' : {\n\t\t\t\t\t'open' : [],\n\t\t\t\t\t'scroll' : {\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\n\t\t\t\t\t\t'top' : this.element.scrollTop()\n\t\t\t\t\t},\n\t\t\t\t\t/*!\n\t\t\t\t\t'themes' : {\n\t\t\t\t\t\t'name' : this.get_theme(),\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\n\t\t\t\t\t},\n\t\t\t\t\t*/\n\t\t\t\t\t'selected' : []\n\t\t\t\t}\n\t\t\t}, i;\n\t\t\tfor(i in this._model.data) {\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\n\t\t\t\t\tif(i !== '#') {\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\n\t\t\t\t\t\t\tstate.core.open.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\n\t\t\t\t\t\t\tstate.core.selected.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\t/**\n\t\t * sets the state of the tree. Used internally.\n\t\t * @name set_state(state [, callback])\n\t\t * @private\n\t\t * @param {Object} state the state to restore\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\n\t\t * @trigger set_state.jstree\n\t\t */\n\t\tset_state : function (state, callback) {\n\t\t\tif(state) {\n\t\t\t\tif(state.core) {\n\t\t\t\t\tvar res, n, t, _this;\n\t\t\t\t\tif(state.core.open) {\n\t\t\t\t\t\tif(!$.isArray(state.core.open)) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres = true;\n\t\t\t\t\t\tn = false;\n\t\t\t\t\t\tt = this;\n\t\t\t\t\t\t$.each(state.core.open.concat([]), function (i, v) {\n\t\t\t\t\t\t\tn = t.get_node(v);\n\t\t\t\t\t\t\tif(n) {\n\t\t\t\t\t\t\t\tif(t.is_loaded(v)) {\n\t\t\t\t\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, false, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, v);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(!t.is_loading(v)) {\n\t\t\t\t\t\t\t\t\t\tt.open_node(v, $.proxy(function (o, s) {\n\t\t\t\t\t\t\t\t\t\t\tif(!s && state && state.core && state.core.open) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.vakata.array_remove_item(state.core.open, o.id);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t\t\t\t\t}, t), 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// there will be some async activity - so wait for it\n\t\t\t\t\t\t\t\t\tres = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(res) {\n\t\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif(state.core.scroll) {\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.scroll;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t/*!\n\t\t\t\t\tif(state.core.themes) {\n\t\t\t\t\t\tif(state.core.themes.name) {\n\t\t\t\t\t\t\tthis.set_theme(state.core.themes.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.dots !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(typeof state.core.themes.icons !== 'undefined') {\n\t\t\t\t\t\t\tthis[ state.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete state.core.themes;\n\t\t\t\t\t\tdelete state.core.open;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tif(state.core.selected) {\n\t\t\t\t\t\t_this = this;\n\t\t\t\t\t\tthis.deselect_all();\n\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\n\t\t\t\t\t\t\t_this.select_node(v);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdelete state.core.selected;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\n\t\t\t\t\t\tdelete state.core;\n\t\t\t\t\t\tthis.set_state(state, callback);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif($.isEmptyObject(state)) {\n\t\t\t\t\tstate = null;\n\t\t\t\t\tif(callback) { callback.call(this); }\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered when a `set_state` call completes\n\t\t\t\t\t * @event\n\t\t\t\t\t * @name set_state.jstree\n\t\t\t\t\t */\n\t\t\t\t\tthis.trigger('set_state');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\n\t\t * @name refresh()\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\n\t\t * @trigger refresh.jstree\n\t\t */\n\t\trefresh : function (skip_loading, forget_state) {\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\n\t\t\tthis._cnt = 0;\n\t\t\tthis._model.data = {\n\t\t\t\t'#' : {\n\t\t\t\t\tid : '#',\n\t\t\t\t\tparent : null,\n\t\t\t\t\tparents : [],\n\t\t\t\t\tchildren : [],\n\t\t\t\t\tchildren_d : [],\n\t\t\t\t\tstate : { loaded : false }\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar c = this.get_container_ul()[0].className;\n\t\t\tif(!skip_loading) {\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\n\t\t\t}\n\t\t\tthis.load_node('#', function (o, s) {\n\t\t\t\tif(s) {\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered when a `refresh` call completes\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @name refresh.jstree\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.trigger('refresh');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis._data.core.state = null;\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\n\t\t * @name refresh_node(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @trigger refresh_node.jstree\n\t\t */\n\t\trefresh_node : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\n\t\t\tto_load.push(obj.id);\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { opened.push(this.id); });\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\n\t\t\t\tthis.open_node(opened, false, 0);\n\t\t\t\tthis.select_node(this._data.core.selected);\n\t\t\t\t/**\n\t\t\t\t * triggered when a node is refreshed\n\t\t\t\t * @event\n\t\t\t\t * @name refresh_node.jstree\n\t\t\t\t * @param {Object} node - the refreshed node\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\n\t\t\t\t */\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\n\t\t\t}, this));\n\t\t},\n\t\t/**\n\t\t * set (change) the ID of a node\n\t\t * @name set_id(obj, id)\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {String} id the new ID\n\t\t * @return {Boolean}\n\t\t */\n\t\tset_id : function (obj, id) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar i, j, m = this._model.data;\n\t\t\tid = id.toString();\n\t\t\t// update parents (replace current ID with new one in children and children_d)\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\n\t\t\t}\n\t\t\t// update children (replace current ID with new one in parent and parents)\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\tm[obj.children[i]].parent = id;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\n\t\t\t}\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\n\t\t\ti = this.get_node(obj.id, true);\n\t\t\tif(i) {\n\t\t\t\ti.attr('id', id);\n\t\t\t}\n\t\t\tdelete m[obj.id];\n\t\t\tobj.id = id;\n\t\t\tm[id] = obj;\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the text value of a node\n\t\t * @name get_text(obj)\n\t\t * @param  {mixed} obj the node\n\t\t * @return {String}\n\t\t */\n\t\tget_text : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.text;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\n\t\t * @private\n\t\t * @name set_text(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger set_text.jstree\n\t\t */\n\t\tset_text : function (obj, val) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_text(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tobj.text = val;\n\t\t\tif(this.get_node(obj, true).length) {\n\t\t\t\tthis.redraw_node(obj.id);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node text value is changed\n\t\t\t * @event\n\t\t\t * @name set_text.jstree\n\t\t\t * @param {Object} obj\n\t\t\t * @param {String} text the new value\n\t\t\t */\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * gets a JSON representation of a node (or the whole tree)\n\t\t * @name get_json([obj, options])\n\t\t * @param  {mixed} obj\n\t\t * @param  {Object} options\n\t\t * @param  {Boolean} options.no_state do not return state information\n\t\t * @param  {Boolean} options.no_id do not return ID\n\t\t * @param  {Boolean} options.no_children do not include children\n\t\t * @param  {Boolean} options.no_data do not include node data\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\n\t\t * @return {Object}\n\t\t */\n\t\tget_json : function (obj, options, flat) {\n\t\t\tobj = this.get_node(obj || '#');\n\t\t\tif(!obj) { return false; }\n\t\t\tif(options && options.flat && !flat) { flat = []; }\n\t\t\tvar tmp = {\n\t\t\t\t'id' : obj.id,\n\t\t\t\t'text' : obj.text,\n\t\t\t\t'icon' : this.get_icon(obj),\n\t\t\t\t'li_attr' : obj.li_attr,\n\t\t\t\t'a_attr' : obj.a_attr,\n\t\t\t\t'state' : {},\n\t\t\t\t'data' : options && options.no_data ? false : obj.data\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\n\t\t\t}, i, j;\n\t\t\tif(options && options.flat) {\n\t\t\t\ttmp.parent = obj.parent;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.children = [];\n\t\t\t}\n\t\t\tif(!options || !options.no_state) {\n\t\t\t\tfor(i in obj.state) {\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.no_id) {\n\t\t\t\tdelete tmp.id;\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(options && options.flat && obj.id !== '#') {\n\t\t\t\tflat.push(tmp);\n\t\t\t}\n\t\t\tif(!options || !options.no_children) {\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\n\t\t\t\t\tif(options && options.flat) {\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options && options.flat ? flat : (obj.id === '#' ? tmp.children : tmp);\n\t\t},\n\t\t/**\n\t\t * create a new node (do not confuse with load_node)\n\t\t * @name create_node([obj, node, pos, callback, is_loaded])\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\n\t\t * @param  {Function} callback a function to be called once the node is created\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\n\t\t * @return {String}            the ID of the newly create node\n\t\t * @trigger model.jstree, create_node.jstree\n\t\t */\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\n\t\t\tif(par === null) { par = \"#\"; }\n\t\t\tpar = this.get_node(par);\n\t\t\tif(!par) { return false; }\n\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\n\t\t\t}\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\n\t\t\tvar tmp, dpc, i, j;\n\n\t\t\tif(par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\ttmp = this.get_node(par.parent);\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\n\t\t\t\t\tpar = tmp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\n\t\t\tif(!node.id) { node.id = true; }\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\n\n\t\t\tpar.children_d = par.children_d.concat(dpc);\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tnode = tmp;\n\t\t\ttmp = [];\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\n\t\t\t}\n\t\t\ttmp[pos] = node.id;\n\t\t\tpar.children = tmp;\n\n\t\t\tthis.redraw_node(par, true);\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\n\t\t\t/**\n\t\t\t * triggered when a node is created\n\t\t\t * @event\n\t\t\t * @name create_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the new node among the parent's children\n\t\t\t */\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\n\t\t\treturn node.id;\n\t\t},\n\t\t/**\n\t\t * set the text value of a node\n\t\t * @name rename_node(obj, val)\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\n\t\t * @param  {String} val the new text value\n\t\t * @return {Boolean}\n\t\t * @trigger rename_node.jstree\n\t\t */\n\t\trename_node : function (obj, val) {\n\t\t\tvar t1, t2, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.rename_node(obj[t1], val);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.text;\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\n\t\t\t/**\n\t\t\t * triggered when a node is renamed\n\t\t\t * @event\n\t\t\t * @name rename_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} text the new value\n\t\t\t * @param {String} old the old value\n\t\t\t */\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * remove a node\n\t\t * @name delete_node(obj)\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\n\t\t * @return {Boolean}\n\t\t * @trigger delete_node.jstree, changed.jstree\n\t\t */\n\t\tdelete_node : function (obj) {\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.delete_node(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tpar = this.get_node(obj.parent);\n\t\t\tpos = $.inArray(obj.id, par.children);\n\t\t\tc = false;\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(pos !== -1) {\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\n\t\t\t}\n\t\t\ttmp = obj.children_d.concat([]);\n\t\t\ttmp.push(obj.id);\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tpos = $.inArray(tmp[k], this._model.data[obj.parents[i]].children_d);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_remove(this._model.data[obj.parents[i]].children_d, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\n\t\t\t\t\tc = true;\n\t\t\t\t\tpos = $.inArray(tmp[k], this._data.core.selected);\n\t\t\t\t\tif(pos !== -1) {\n\t\t\t\t\t\tthis._data.core.selected = $.vakata.array_remove(this._data.core.selected, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered when a node is deleted\n\t\t\t * @event\n\t\t\t * @name delete_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t */\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\n\t\t\tif(c) {\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\n\t\t\t}\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\n\t\t\t\tdelete this._model.data[tmp[k]];\n\t\t\t}\n\t\t\tthis.redraw_node(par, true);\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * check if an operation is premitted on the tree. Used internally.\n\t\t * @private\n\t\t * @name check(chk, obj, par, pos)\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\n\t\t * @param  {mixed} obj the node\n\t\t * @param  {mixed} par the parent\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheck : function (chk, obj, par, pos, more) {\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\n\t\t\t\tchc = this.settings.core.check_callback;\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || $.inArray(obj.id, par.children) === pos || $.inArray(par.id, obj.children_d) !== -1)) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\n\t\t\t\tif(tmp.functions[chk] === false) {\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t}\n\t\t\t\treturn tmp.functions[chk];\n\t\t\t}\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the last error\n\t\t * @name last_error()\n\t\t * @return {Object}\n\t\t */\n\t\tlast_error : function () {\n\t\t\treturn this._data.core.last_error;\n\t\t},\n\t\t/**\n\t\t * move a node to a new parent\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger move_node.jstree\n\t\t */\n\t\tmove_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.move_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\n\t\t\tif(is_multi) {\n\t\t\t\tif(this.copy_node(obj, par, pos, callback, is_loaded)) {\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//var m = this._model.data;\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(obj.parent === new_par.id) {\n\t\t\t\tdpc = new_par.children.concat();\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\n\t\t\t\tif(tmp !== -1) {\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\n\t\t\t\t\tif(pos > tmp) { pos--; }\n\t\t\t\t}\n\t\t\t\ttmp = [];\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\n\t\t\t\t}\n\t\t\t\ttmp[pos] = obj.id;\n\t\t\t\tnew_par.children = tmp;\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(new_par.id === '#');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// clean old parent and up\n\t\t\t\ttmp = obj.children_d.concat();\n\t\t\t\ttmp.push(obj.id);\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\tdpc = [];\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\n\t\t\t\t\t\t\tdpc.push(p[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\n\t\t\t\t}\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\n\n\t\t\t\t// insert into new parent and up\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\n\t\t\t\t}\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t\t}\n\t\t\t\tdpc[pos] = obj.id;\n\t\t\t\tnew_par.children = dpc;\n\t\t\t\tnew_par.children_d.push(obj.id);\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\n\n\t\t\t\t// update object\n\t\t\t\tobj.parent = new_par.id;\n\t\t\t\ttmp = new_par.parents.concat();\n\t\t\t\ttmp.unshift(new_par.id);\n\t\t\t\tp = obj.parents.length;\n\t\t\t\tobj.parents = tmp;\n\n\t\t\t\t// update object children\n\t\t\t\ttmp = tmp.concat();\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\n\t\t\t\t}\n\n\t\t\t\tthis._node_changed(old_par);\n\t\t\t\tthis._node_changed(new_par.id);\n\t\t\t\tthis.redraw(old_par === '#' || new_par.id === '#');\n\t\t\t}\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is moved\n\t\t\t * @event\n\t\t\t * @name move_node.jstree\n\t\t\t * @param {Object} node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the old position of the node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * copy a node to a new parent\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\n\t\t * @param  {mixed} par the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\n\t\t * @param  {Boolean} internal parameter indicating if the parent node has been loaded\n\t\t * @trigger model.jstree copy_node.jstree\n\t\t */\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded) {\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\n\n\t\t\tpar = this.get_node(par);\n\t\t\tpos = pos === undefined ? 0 : pos;\n\t\t\tif(!par) { return false; }\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true); });\n\t\t\t}\n\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.reverse().slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.copy_node(obj[t1], par, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\n\t\t\told_par = (obj.parent || '#').toString();\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === '#') ? par : this.get_node(par.parent);\n\t\t\told_ins = obj.instance ? obj.instance : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\n\t\t\tif(new_par.id === '#') {\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\n\t\t\t}\n\t\t\tswitch(pos) {\n\t\t\t\tcase \"before\":\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"after\" :\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"inside\":\n\t\t\t\tcase \"first\":\n\t\t\t\t\tpos = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\t\tpos = new_par.children.length;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(!pos) { pos = 0; }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\n\t\t\tif(!node) { return false; }\n\t\t\tif(node.id === true) { delete node.id; }\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\n\t\t\tif(!node) { return false; }\n\t\t\ttmp = this.get_node(node);\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\n\t\t\tdpc = [];\n\t\t\tdpc.push(node);\n\t\t\tdpc = dpc.concat(tmp.children_d);\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\n\n\t\t\t// insert into new parent and up\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\n\t\t\t}\n\t\t\tdpc = [];\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\n\t\t\t}\n\t\t\tdpc[pos] = tmp.id;\n\t\t\tnew_par.children = dpc;\n\t\t\tnew_par.children_d.push(tmp.id);\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\n\n\t\t\tthis._node_changed(new_par.id);\n\t\t\tthis.redraw(new_par.id === '#');\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\n\t\t\t/**\n\t\t\t * triggered when a node is copied\n\t\t\t * @event\n\t\t\t * @name copy_node.jstree\n\t\t\t * @param {Object} node the copied node\n\t\t\t * @param {Object} original the original node\n\t\t\t * @param {String} parent the parent's ID\n\t\t\t * @param {Number} position the position of the node among the parent's children\n\t\t\t * @param {String} old_parent the old parent of the node\n\t\t\t * @param {Number} old_position the position of the original node\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\n\t\t\t * @param {jsTree} old_instance the instance the node came from\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\n\t\t\t */\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\n\t\t\treturn tmp.id;\n\t\t},\n\t\t/**\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\n\t\t * @name cut(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger cut.jstree\n\t\t */\n\t\tcut : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'move_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for moving\n\t\t\t * @event\n\t\t\t * @name cut.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('cut', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\n\t\t * @name copy(obj)\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\n\t\t * @trigger copy.jstre\n\t\t */\n\t\tcopy : function (obj) {\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\n\t\t\tif(!obj.length) { return false; }\n\t\t\tvar tmp = [], o, t1, t2;\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\to = this.get_node(obj[t1]);\n\t\t\t\tif(o && o.id && o.id !== '#') { tmp.push(o); }\n\t\t\t}\n\t\t\tif(!tmp.length) { return false; }\n\t\t\tccp_node = tmp;\n\t\t\tccp_inst = this;\n\t\t\tccp_mode = 'copy_node';\n\t\t\t/**\n\t\t\t * triggered when nodes are added to the buffer for copying\n\t\t\t * @event\n\t\t\t * @name copy.jstree\n\t\t\t * @param {Array} node\n\t\t\t */\n\t\t\tthis.trigger('copy', { \"node\" : obj });\n\t\t},\n\t\t/**\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\n\t\t * @name get_buffer()\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\n\t\t */\n\t\tget_buffer : function () {\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\n\t\t},\n\t\t/**\n\t\t * check if there is something in the buffer to paste\n\t\t * @name can_paste()\n\t\t * @return {Boolean}\n\t\t */\n\t\tcan_paste : function () {\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\n\t\t},\n\t\t/**\n\t\t * copy or move the previously cut or copied nodes to a new parent\n\t\t * @name paste(obj [, pos])\n\t\t * @param  {mixed} obj the new parent\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\n\t\t * @trigger paste.jstree\n\t\t */\n\t\tpaste : function (obj, pos) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos)) {\n\t\t\t\t/**\n\t\t\t\t * triggered when paste is invoked\n\t\t\t\t * @event\n\t\t\t\t * @name paste.jstree\n\t\t\t\t * @param {String} parent the ID of the receiving node\n\t\t\t\t * @param {Array} node the nodes in the buffer\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\n\t\t\t\t */\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\n\t\t\t}\n\t\t\tccp_node = false;\n\t\t\tccp_mode = false;\n\t\t\tccp_inst = false;\n\t\t},\n\t\t/**\n\t\t * put a node in edit mode (input field to rename the node)\n\t\t * @name edit(obj [, default_text])\n\t\t * @param  {mixed} obj\n\t\t * @param  {String} default_text the text to populate the input with (if omitted the node text value is used)\n\t\t */\n\t\tedit : function (obj, default_text) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tif(this.settings.core.check_callback === false) {\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Could not edit node because of check_callback' };\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\n\t\t\tthis.set_text(obj, \"\");\n\t\t\tobj = this._open_to(obj);\n\n\t\t\tvar rtl = this._data.core.rtl,\n\t\t\t\tw  = this.element.width(),\n\t\t\t\ta  = obj.children('.jstree-anchor'),\n\t\t\t\ts  = $('<span>'),\n\t\t\t\t/*!\n\t\t\t\toi = obj.children(\"i:visible\"),\n\t\t\t\tai = a.children(\"i:visible\"),\n\t\t\t\tw1 = oi.width() * oi.length,\n\t\t\t\tw2 = ai.width() * ai.length,\n\t\t\t\t*/\n\t\t\t\tt  = default_text,\n\t\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(\"body\"),\n\t\t\t\th2 = $(\"<\"+\"input />\", {\n\t\t\t\t\t\t\"value\" : t,\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\n\t\t\t\t\t\t// \"size\" : t.length,\n\t\t\t\t\t\t\"css\" : {\n\t\t\t\t\t\t\t\"padding\" : \"0\",\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"blur\" : $.proxy(function () {\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\n\t\t\t\t\t\t\t\tv = i.val();\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\n\t\t\t\t\t\t\th1.remove();\n\t\t\t\t\t\t\ts.replaceWith(a);\n\t\t\t\t\t\t\ts.remove();\n\t\t\t\t\t\t\tthis.set_text(obj, t);\n\t\t\t\t\t\t\tif(this.rename_node(obj, $('<div></div>').text(v)[this.settings.core.force_text ? 'text' : 'html']()) === false) {\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this),\n\t\t\t\t\t\t\"keydown\" : function (event) {\n\t\t\t\t\t\t\tvar key = event.which;\n\t\t\t\t\t\t\tif(key === 27) {\n\t\t\t\t\t\t\t\tthis.value = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n\t\t\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\n\t\t\t\t\t\t\"keyup\" : function (event) {\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"keypress\" : function(event) {\n\t\t\t\t\t\t\tif(event.which === 13) { return false; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\tfn = {\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\n\t\t\t\t};\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\n\t\t\ta.replaceWith(s);\n\t\t\th1.css(fn);\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\n\t\t},\n\n\n\t\t/**\n\t\t * changes the theme\n\t\t * @name set_theme(theme_name [, theme_url])\n\t\t * @param {String} theme_name the name of the new theme to apply\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\n\t\t * @trigger set_theme.jstree\n\t\t */\n\t\tset_theme : function (theme_name, theme_url) {\n\t\t\tif(!theme_name) { return false; }\n\t\t\tif(theme_url === true) {\n\t\t\t\tvar dir = this.settings.core.themes.dir;\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\n\t\t\t}\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\n\t\t\t\tthemes_loaded.push(theme_url);\n\t\t\t}\n\t\t\tif(this._data.core.themes.name) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\n\t\t\t}\n\t\t\tthis._data.core.themes.name = theme_name;\n\t\t\tthis.element.addClass('jstree-' + theme_name);\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\n\t\t\t/**\n\t\t\t * triggered when a theme is set\n\t\t\t * @event\n\t\t\t * @name set_theme.jstree\n\t\t\t * @param {String} theme the new theme\n\t\t\t */\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme name\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme : function () { return this._data.core.themes.name; },\n\t\t/**\n\t\t * changes the theme variant (if the theme has variants)\n\t\t * @name set_theme_variant(variant_name)\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\n\t\t */\n\t\tset_theme_variant : function (variant_name) {\n\t\t\tif(this._data.core.themes.variant) {\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t\tthis._data.core.themes.variant = variant_name;\n\t\t\tif(variant_name) {\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * gets the name of the currently applied theme variant\n\t\t * @name get_theme()\n\t\t * @return {String}\n\t\t */\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\n\t\t/**\n\t\t * shows a striped background on the container (if the theme supports it)\n\t\t * @name show_stripes()\n\t\t */\n\t\tshow_stripes : function () { this._data.core.themes.stripes = true; this.get_container_ul().addClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * hides the striped background on the container\n\t\t * @name hide_stripes()\n\t\t */\n\t\thide_stripes : function () { this._data.core.themes.stripes = false; this.get_container_ul().removeClass(\"jstree-striped\"); },\n\t\t/**\n\t\t * toggles the striped background on the container\n\t\t * @name toggle_stripes()\n\t\t */\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\n\t\t/**\n\t\t * shows the connecting dots (if the theme supports it)\n\t\t * @name show_dots()\n\t\t */\n\t\tshow_dots : function () { this._data.core.themes.dots = true; this.get_container_ul().removeClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * hides the connecting dots\n\t\t * @name hide_dots()\n\t\t */\n\t\thide_dots : function () { this._data.core.themes.dots = false; this.get_container_ul().addClass(\"jstree-no-dots\"); },\n\t\t/**\n\t\t * toggles the connecting dots\n\t\t * @name toggle_dots()\n\t\t */\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\n\t\t/**\n\t\t * show the node icons\n\t\t * @name show_icons()\n\t\t */\n\t\tshow_icons : function () { this._data.core.themes.icons = true; this.get_container_ul().removeClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * hide the node icons\n\t\t * @name hide_icons()\n\t\t */\n\t\thide_icons : function () { this._data.core.themes.icons = false; this.get_container_ul().addClass(\"jstree-no-icons\"); },\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_icons()\n\t\t */\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\n\t\t/**\n\t\t * set the node icon for a node\n\t\t * @name set_icon(obj, icon)\n\t\t * @param {mixed} obj\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t */\n\t\tset_icon : function (obj, icon) {\n\t\t\tvar t1, t2, dom, old;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\told = obj.icon;\n\t\t\tobj.icon = icon;\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\n\t\t\tif(icon === false) {\n\t\t\t\tthis.hide_icon(obj);\n\t\t\t}\n\t\t\telse if(icon === true) {\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\n\t\t\t}\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * get the node icon for a node\n\t\t * @name get_icon(obj)\n\t\t * @param {mixed} obj\n\t\t * @return {String}\n\t\t */\n\t\tget_icon : function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj || obj.id === '#') ? false : obj.icon;\n\t\t},\n\t\t/**\n\t\t * hide the icon on an individual node\n\t\t * @name hide_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\thide_icon : function (obj) {\n\t\t\tvar t1, t2;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.hide_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tobj.icon = false;\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t},\n\t\t/**\n\t\t * show the icon on an individual node\n\t\t * @name show_icon(obj)\n\t\t * @param {mixed} obj\n\t\t */\n\t\tshow_icon : function (obj) {\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.show_icon(obj[t1]);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj === '#') { return false; }\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\n\t\t\tif(!obj.icon) { obj.icon = true; }\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// helpers\n\t$.vakata = {};\n\t// collect attributes\n\t$.vakata.attributes = function(node, with_values) {\n\t\tnode = $(node)[0];\n\t\tvar attr = with_values ? {} : [];\n\t\tif(node && node.attributes) {\n\t\t\t$.each(node.attributes, function (i, v) {\n\t\t\t\tif($.inArray(v.nodeName.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\n\t\t\t\tif(v.nodeValue !== null && $.trim(v.nodeValue) !== '') {\n\t\t\t\t\tif(with_values) { attr[v.nodeName] = v.nodeValue; }\n\t\t\t\t\telse { attr.push(v.nodeName); }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn attr;\n\t};\n\t$.vakata.array_unique = function(array) {\n\t\tvar a = [], i, j, l;\n\t\tfor(i = 0, l = array.length; i < l; i++) {\n\t\t\tfor(j = 0; j <= i; j++) {\n\t\t\t\tif(array[i] === array[j]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(j === i) { a.push(array[i]); }\n\t\t}\n\t\treturn a;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove = function(array, from, to) {\n\t\tvar rest = array.slice((to || from) + 1 || array.length);\n\t\tarray.length = from < 0 ? array.length + from : from;\n\t\tarray.push.apply(array, rest);\n\t\treturn array;\n\t};\n\t// remove item from array\n\t$.vakata.array_remove_item = function(array, item) {\n\t\tvar tmp = $.inArray(item, array);\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\n\t};\n\n/**\n * ### Checkbox plugin\n *\n * This plugin renders checkbox icons in front of each node, making multiple selection much easier. \n * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.\n */\n\n\tvar _i = document.createElement('I');\n\t_i.className = 'jstree-icon jstree-checkbox';\n\t/**\n\t * stores all defaults for the checkbox plugin\n\t * @name $.jstree.defaults.checkbox\n\t * @plugin checkbox\n\t */\n\t$.jstree.defaults.checkbox = {\n\t\t/**\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.visible\n\t\t * @plugin checkbox\n\t\t */\n\t\tvisible\t\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.three_state\n\t\t * @plugin checkbox\n\t\t */\n\t\tthree_state\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.whole_node\n\t\t * @plugin checkbox\n\t\t */\n\t\twhole_node\t\t\t: true,\n\t\t/**\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\n\t\t * @plugin checkbox\n\t\t */\n\t\tkeep_selected_style\t: true,\n\t\t/**\n\t\t * This setting controls how cascading and undetermined nodes are applied. \n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used. \n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\n\t\t * @name $.jstree.defaults.checkbox.cascade\n\t\t * @plugin checkbox\n\t\t */\n\t\tcascade\t\t\t\t: '',\n\t\t/**\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing. \n\t\t * @name $.jstree.defaults.checkbox.tie_selection\n\t\t * @plugin checkbox\n\t\t */\n\t\ttie_selection\t\t: true\n\t};\n\t$.jstree.plugins.checkbox = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis._data.checkbox.uto = false;\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tif(this.settings.checkbox.three_state) {\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\n\t\t\t}\n\t\t\tthis.element\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\n\t\t\t\t\t}, this));\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\n\t\t\t\t\t\t\t// only if undetermined is in setting\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(!this.settings.checkbox.tie_selection) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\ti, j;\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\t\tp = m[data.parent],\n\t\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\t\tchd = [],\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\twhile(par && par.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = this.get_node('#'),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, tmp;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\tvar obj = data.node,\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(obj && obj.original && obj.original.state && obj.original.state.undetermined) {\n\t\t\t\t\t\t\t\tobj.original.state.undetermined = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply down\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.children_d[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// apply up\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttmp = [];\n\t\t\t\t\t\t\tfor(i = 0, j = this._data[ t ? 'core' : 'checkbox' ].selected.length; i < j; i++) {\n\t\t\t\t\t\t\t\t// apply down + apply up\n\t\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t\t(s.indexOf('down') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.children_d) === -1) &&\n\t\t\t\t\t\t\t\t\t(s.indexOf('up') === -1 || $.inArray(this._data[ t ? 'core' : 'checkbox' ].selected[i], obj.parents) === -1)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\ttmp.push(this._data[ t ? 'core' : 'checkbox' ].selected[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(tmp);\n\n\t\t\t\t\t\t\t// apply down (process .children separately?)\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1 && dom.length) {\n\t\t\t\t\t\t\t\tdom.find('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\t\t// apply up (whole handler)\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\n\t\t\t\t\t\t\t\told_par = data.old_parent,\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\n\t\t\t\t\t\t\t\tm = this._model.data,\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\n\t\t\t\t\t\t\tif(!is_multi) {\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\n\t\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tp = new_par;\n\t\t\t\t\t\t\twhile(p && p.id !== '#') {\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c === j) {\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\t\t\t\ttmp.children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this));\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * set the undetermined state where and if necessary. Used internally.\n\t\t * @private\n\t\t * @name _undetermined()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis._undetermined = function () {\n\t\t\tvar i, j, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this;\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\n\t\t\t\t\tp = p.concat(m[s[i]].parents);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt for server side undetermined state\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\n\t\t\t\t.each(function () {\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\n\t\t\t\t\tif(!tmp.state.loaded) {\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\n\t\t\t\t\t\t\tp.push(tmp.id);\n\t\t\t\t\t\t\tp = p.concat(tmp.parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\n\t\t\t\t\t\t\t\tp.push(tmp2.id);\n\t\t\t\t\t\t\t\tp = p.concat(tmp2.parents);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tp = $.vakata.array_unique(p);\n\t\t\tp = $.vakata.array_remove_item(p,'#');\n\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\n\t\t\tfor(i = 0, j = p.length; i < j; i++) {\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\n\t\t\t\t\ts = this.get_node(p[i], true);\n\t\t\t\t\tif(s && s.length) {\n\t\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, is_callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, is_callback);\n\t\t\tif(obj) {\n\t\t\t\tvar i, j, tmp = null;\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\n\t\t\t\t\t\ttmp = obj.childNodes[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp) {\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\n\t\t\t\t\ttmp.insertBefore(_i.cloneNode(false), tmp.childNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t\t/**\n\t\t * show the node checkbox icons\n\t\t * @name show_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * hide the node checkbox icons\n\t\t * @name hide_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\n\t\t/**\n\t\t * toggle the node icons\n\t\t * @name toggle_checkboxes()\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\n\t\t/**\n\t\t * checks if a node is in an undetermined state\n\t\t * @name is_undetermined(obj)\n\t\t * @param  {mixed} obj\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis.is_undetermined = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tthis.activate_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\te.ctrlKey = true;\n\t\t\t}\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\n\t\t\t}\n\t\t\tif(this.is_checked(obj)) {\n\t\t\t\tthis.uncheck_node(obj, e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.check_node(obj, e);\n\t\t\t}\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\n\t\t};\n\n\t\t/**\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\n\t\t * @name check_node(obj)\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\n\t\t * @trigger check_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\n\t\t\tvar dom, t1, t2, th;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.check_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(!obj.state.checked) {\n\t\t\t\tobj.state.checked = true;\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\n\t\t\t\tif(dom && dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name check_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\n\t\t * @name deselect_node(obj)\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\n\t\t * @trigger uncheck_node.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_node = function (obj, e) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\n\t\t\tvar t1, t2, dom;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tdom = this.get_node(obj, true);\n\t\t\tif(obj.state.checked) {\n\t\t\t\tobj.state.checked = false;\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\n\t\t\t\tif(dom.length) {\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t\t * @event\n\t\t\t\t * @name uncheck_node.jstree\n\t\t\t\t * @param {Object} node\n\t\t\t\t * @param {Array} selected the current selection\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\n\t\t\t\t * @plugin checkbox\n\t\t\t\t */\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\n\t\t * @name check_all()\n\t\t * @trigger check_all.jstree, changed.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.check_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tthis._data.checkbox.selected = this._model.data['#'].children_d.concat();\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.redraw(true);\n\t\t\t/**\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name check_all.jstree\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\n\t\t};\n\t\t/**\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\n\t\t * @name uncheck_all()\n\t\t * @trigger uncheck_all.jstree\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.uncheck_all = function () {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.checkbox.selected = [];\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\n\t\t\t/**\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\n\t\t\t * @event\n\t\t\t * @name uncheck_all.jstree\n\t\t\t * @param {Object} node the previous selection\n\t\t\t * @param {Array} selected the current selection\n\t\t\t * @plugin checkbox\n\t\t\t */\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\n\t\t};\n\t\t/**\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\n\t\t * @name is_checked(obj)\n\t\t * @param  {mixed}  obj\n\t\t * @return {Boolean}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.is_checked = function (obj) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\treturn obj.state.checked;\n\t\t};\n\t\t/**\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\n\t\t * @name get_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\n\t\t};\n\t\t/**\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\n\t\t * @name get_top_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_top_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = {}, i, j, k, l;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tobj[tmp[i].id] = tmp[i];\n\t\t\t}\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tfor(i in obj) {\n\t\t\t\tif(obj.hasOwnProperty(i)) {\n\t\t\t\t\ttmp.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\n\t\t};\n\t\t/**\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\n\t\t * @name get_bottom_checked([full])\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\n\t\t * @return {Array}\n\t\t * @plugin checkbox\n\t\t */\n\t\tthis.get_bottom_checked = function (full) {\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\n\t\t\tvar tmp = this.get_checked(true),\n\t\t\t\tobj = [], i, j;\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\tif(!tmp[i].children.length) {\n\t\t\t\t\tobj.push(tmp[i].id);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\n\t\t};\n\t};\n\n\t// include the checkbox plugin by default\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\n\n/**\n * ### Contextmenu plugin\n *\n * Shows a context menu when a node is right-clicked.\n */\n// TODO: move logic outside of function + check multiple move\n\n\t/**\n\t * stores all defaults for the contextmenu plugin\n\t * @name $.jstree.defaults.contextmenu\n\t * @plugin contextmenu\n\t */\n\t$.jstree.defaults.contextmenu = {\n\t\t/**\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\n\t\t * @name $.jstree.defaults.contextmenu.select_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tselect_node : true,\n\t\t/**\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\n\t\t * @plugin contextmenu\n\t\t */\n\t\tshow_at_node : true,\n\t\t/**\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\n\t\t * \n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required):\n\t\t * \n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\n\t\t * * `action` - a function to be executed if this item is chosen\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\n\t\t * \n\t\t * @name $.jstree.defaults.contextmenu.items\n\t\t * @plugin contextmenu\n\t\t */\n\t\titems : function (o, cb) { // Could be an object directly\n\t\t\treturn {\n\t\t\t\t\"create\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: true,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\n\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"rename\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\n\t\t\t\t\t/*\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\n\t\t\t\t\t*/\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tinst.edit(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"remove\" : {\n\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tinst.delete_node(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"ccp\" : {\n\t\t\t\t\t\"separator_before\"\t: true,\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\n\t\t\t\t\t\"action\"\t\t\t: false,\n\t\t\t\t\t\"submenu\" : {\n\t\t\t\t\t\t\"cut\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"copy\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_selected());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"paste\" : {\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\n\t\t\t\t\t\t\t\tinst.paste(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t$.jstree.plugins.contextmenu = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tvar last_ts = 0;\n\t\t\tthis.element\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? e.timeStamp : 0;\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || e.timeStamp - last_ts > 250)) { // work around safari & macOS ctrl+click\n\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this));\n\t\t\t/*\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\n\t\t\t\tvar el = null, tm = null;\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\n\t\t\t\t\t\tel = e.currentTarget;\n\t\t\t\t\t\ttm = +new Date();\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\n\t\t\t\t\t\t\te.currentTarget = e.target;\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tel = null;\n\t\t\t\t\t\t\ttm = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\t$(document).on(\"context_hide.vakata\", $.proxy(function () { this._data.contextmenu.visible = false; }, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this._data.contextmenu.visible) {\n\t\t\t\t$.vakata.context.hide();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\n\t\t/**\n\t\t * prepare and show the context menu for a node\n\t\t * @name show_contextmenu(obj [, x, y])\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Object} e the event if available that triggered the contextmenu\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t */\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj || obj.id === '#') { return false; }\n\t\t\tvar s = this.settings.contextmenu,\n\t\t\t\td = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\"),\n\t\t\t\to = false,\n\t\t\t\ti = false;\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\n\t\t\t\to = a.offset();\n\t\t\t\tx = o.left;\n\t\t\t\ty = o.top + this._data.core.li_height;\n\t\t\t}\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n\t\t\t\tthis.activate_node(obj, e);\n\t\t\t}\n\n\t\t\ti = s.items;\n\t\t\tif($.isFunction(i)) {\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t\t}, this));\n\t\t\t}\n\t\t\tif($.isPlainObject(i)) {\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * show the prepared context menu for a node\n\t\t * @name _show_contextmenu(obj, x, y, i)\n\t\t * @param {mixed} obj the node\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\n\t\t * @param {Number} i the object of items to show\n\t\t * @plugin contextmenu\n\t\t * @trigger show_contextmenu.jstree\n\t\t * @private\n\t\t */\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\n\t\t\tvar d = this.get_node(obj, true),\n\t\t\t\ta = d.children(\".jstree-anchor\");\n\t\t\t$(document).one(\"context_show.vakata\", $.proxy(function (e, data) {\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n\t\t\t\t$(data.element).addClass(cls);\n\t\t\t}, this));\n\t\t\tthis._data.contextmenu.visible = true;\n\t\t\t$.vakata.context.show(a, { 'x' : x, 'y' : y }, i);\n\t\t\t/**\n\t\t\t * triggered when the contextmenu is shown for a node\n\t\t\t * @event\n\t\t\t * @name show_contextmenu.jstree\n\t\t\t * @param {Object} node the node\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\n\t\t\t * @plugin contextmenu\n\t\t\t */\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\n\t\t};\n\t};\n\n\t// contextmenu helper\n\t(function ($) {\n\t\tvar right_to_left = false,\n\t\t\tvakata_context = {\n\t\t\t\telement\t\t: false,\n\t\t\t\treference\t: false,\n\t\t\t\tposition_x\t: 0,\n\t\t\t\tposition_y\t: 0,\n\t\t\t\titems\t\t: [],\n\t\t\t\thtml\t\t: \"\",\n\t\t\t\tis_visible\t: false\n\t\t\t};\n\n\t\t$.vakata.context = {\n\t\t\tsettings : {\n\t\t\t\thide_onmouseleave\t: 0,\n\t\t\t\ticons\t\t\t\t: true\n\t\t\t},\n\t\t\t_trigger : function (event_name) {\n\t\t\t\t$(document).triggerHandler(\"context_\" + event_name + \".vakata\", {\n\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t_execute : function (i) {\n\t\t\t\ti = vakata_context.items[i];\n\t\t\t\treturn i && (!i._disabled || ($.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }))) && i.action ? i.action.call(null, {\n\t\t\t\t\t\t\t\"item\"\t\t: i,\n\t\t\t\t\t\t\t\"reference\"\t: vakata_context.reference,\n\t\t\t\t\t\t\t\"element\"\t: vakata_context.element,\n\t\t\t\t\t\t\t\"position\"\t: {\n\t\t\t\t\t\t\t\t\"x\" : vakata_context.position_x,\n\t\t\t\t\t\t\t\t\"y\" : vakata_context.position_y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) : false;\n\t\t\t},\n\t\t\t_parse : function (o, is_callback) {\n\t\t\t\tif(!o) { return false; }\n\t\t\t\tif(!is_callback) {\n\t\t\t\t\tvakata_context.html\t\t= \"\";\n\t\t\t\t\tvakata_context.items\t= [];\n\t\t\t\t}\n\t\t\t\tvar str = \"\",\n\t\t\t\t\tsep = false,\n\t\t\t\t\ttmp;\n\n\t\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\n\t\t\t\t$.each(o, function (i, val) {\n\t\t\t\t\tif(!val) { return true; }\n\t\t\t\t\tvakata_context.items.push(val);\n\t\t\t\t\tif(!sep && val.separator_before) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t}\n\t\t\t\t\tsep = false;\n\t\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || ($.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\n\t\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (vakata_context.items.length - 1) + \"'>\";\n\t\t\t\t\tif($.vakata.context.settings.icons) {\n\t\t\t\t\t\tstr += \"<\"+\"i \";\n\t\t\t\t\t\tif(val.icon) {\n\t\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\n\t\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += ($.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : vakata_context.reference, \"element\" : vakata_context.element }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\n\t\t\t\t\tif(val.submenu) {\n\t\t\t\t\t\ttmp = $.vakata.context._parse(val.submenu, true);\n\t\t\t\t\t\tif(tmp) { str += tmp; }\n\t\t\t\t\t}\n\t\t\t\t\tstr += \"<\"+\"/li>\";\n\t\t\t\t\tif(val.separator_after) {\n\t\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + ($.vakata.context.settings.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\n\t\t\t\t\t\tsep = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\n\t\t\t\tif(is_callback) { str += \"</ul>\"; }\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\n\t\t\t\t * @event\n\t\t\t\t * @plugin contextmenu\n\t\t\t\t * @name context_parse.vakata\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t */\n\t\t\t\tif(!is_callback) { vakata_context.html = str; $.vakata.context._trigger(\"parse\"); }\n\t\t\t\treturn str.length > 10 ? str : false;\n\t\t\t},\n\t\t\t_show_submenu : function (o) {\n\t\t\t\to = $(o);\n\t\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\n\t\t\t\tvar e = o.children(\"ul\"),\n\t\t\t\t\tx = o.offset().left + o.outerWidth(),\n\t\t\t\t\ty = o.offset().top,\n\t\t\t\t\tw = e.width(),\n\t\t\t\t\th = e.height(),\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\n\t\t\t\tif(right_to_left) {\n\t\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to[x + w + 10 > dw ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\n\t\t\t\t}\n\t\t\t\tif(y + h + 10 > dh) {\n\t\t\t\t\te.css(\"bottom\",\"-1px\");\n\t\t\t\t}\n\t\t\t\te.show();\n\t\t\t},\n\t\t\tshow : function (reference, position, data) {\n\t\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\n\t\t\t\tif(vakata_context.element && vakata_context.element.length) {\n\t\t\t\t\tvakata_context.element.width('');\n\t\t\t\t}\n\t\t\t\tswitch(cond) {\n\t\t\t\t\tcase (!position && !reference):\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase (!!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!position && !!reference):\n\t\t\t\t\t\tvakata_context.reference\t= reference;\n\t\t\t\t\t\to = reference.offset();\n\t\t\t\t\t\tvakata_context.position_x\t= o.left + reference.outerHeight();\n\t\t\t\t\t\tvakata_context.position_y\t= o.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase (!!position && !reference):\n\t\t\t\t\t\tvakata_context.position_x\t= position.x;\n\t\t\t\t\t\tvakata_context.position_y\t= position.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\n\t\t\t\t\tdata = $(reference).data('vakata_contextmenu');\n\t\t\t\t}\n\t\t\t\tif($.vakata.context._parse(data)) {\n\t\t\t\t\tvakata_context.element.html(vakata_context.html);\n\t\t\t\t}\n\t\t\t\tif(vakata_context.items.length) {\n\t\t\t\t\te = vakata_context.element;\n\t\t\t\t\tx = vakata_context.position_x;\n\t\t\t\t\ty = vakata_context.position_y;\n\t\t\t\t\tw = e.width();\n\t\t\t\t\th = e.height();\n\t\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\n\t\t\t\t\tdh = $(window).height() + $(window).scrollTop();\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tx -= e.outerWidth();\n\t\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\n\t\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(x + w + 20 > dw) {\n\t\t\t\t\t\tx = dw - (w + 20);\n\t\t\t\t\t}\n\t\t\t\t\tif(y + h + 20 > dh) {\n\t\t\t\t\t\ty = dh - (h + 20);\n\t\t\t\t\t}\n\n\t\t\t\t\tvakata_context.element\n\t\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\n\t\t\t\t\t\t.show()\n\t\t\t\t\t\t.find('a:eq(0)').focus().parent().addClass(\"vakata-context-hover\");\n\t\t\t\t\tvakata_context.is_visible = true;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is shown\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_show.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"show\");\n\t\t\t\t}\n\t\t\t},\n\t\t\thide : function () {\n\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\tvakata_context.element.hide().find(\"ul\").hide().end().find(':focus').blur();\n\t\t\t\t\tvakata_context.is_visible = false;\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when the contextmenu is hidden\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin contextmenu\n\t\t\t\t\t * @name context_hide.vakata\n\t\t\t\t\t * @param {jQuery} reference the element that was right clicked\n\t\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\n\t\t\t\t\t * @param {Object} position the x & y coordinates of the menu\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.context._trigger(\"hide\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t$(function () {\n\t\t\tright_to_left = $(\"body\").css(\"direction\") === \"rtl\";\n\t\t\tvar to = false;\n\n\t\t\tvakata_context.element = $(\"<ul class='vakata-context'></ul>\");\n\t\t\tvakata_context.element\n\t\t\t\t.on(\"mouseenter\", \"li\", function (e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) {\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\n\n\t\t\t\t\t$(this)\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\n\t\t\t\t\t$.vakata.context._show_submenu(this);\n\t\t\t\t})\n\t\t\t\t// тестово - дали не натоварва?\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\n\t\t\t\t\tif($.contains(this, e.relatedTarget)) { return; }\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\n\t\t\t\t})\n\t\t\t\t.on(\"mouseleave\", function (e) {\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\n\t\t\t\t\tif($.vakata.context.settings.hide_onmouseleave) {\n\t\t\t\t\t\tto = setTimeout(\n\t\t\t\t\t\t\t(function (t) {\n\t\t\t\t\t\t\t\treturn function () { $.vakata.context.hide(); };\n\t\t\t\t\t\t\t}(this)), $.vakata.context.settings.hide_onmouseleave);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on(\"click\", \"a\", function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t//})\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && $.vakata.context._execute($(this).attr(\"rel\")) !== false) {\n\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown', 'a', function (e) {\n\t\t\t\t\t\tvar o = null;\n\t\t\t\t\t\tswitch(e.which) {\n\t\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\t\te.type = \"mouseup\";\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().parents(\"li:eq(0)\").find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\tvakata_context.element.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\t\tif(vakata_context.is_visible) {\n\t\t\t\t\t\t\t\t\to = vakata_context.element.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\n\t\t\t\t\t\t\t\t\tif(!o.length) { o = vakata_context.element.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\n\t\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 27:\n\t\t\t\t\t\t\t\t$.vakata.context.hide();\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t//console.log(e.which);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t.on('keydown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar a = vakata_context.element.find('.vakata-contextmenu-shortcut-' + e.which).parent();\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\n\t\t\t\t\t\ta.mouseup();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.appendTo(\"body\");\n\n\t\t\t$(document)\n\t\t\t\t.on(\"mousedown\", function (e) {\n\t\t\t\t\tif(vakata_context.is_visible && !$.contains(vakata_context.element[0], e.target)) { $.vakata.context.hide(); }\n\t\t\t\t})\n\t\t\t\t.on(\"context_show.vakata\", function (e, data) {\n\t\t\t\t\tvakata_context.element.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\n\t\t\t\t\tif(right_to_left) {\n\t\t\t\t\t\tvakata_context.element.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\n\t\t\t\t\t}\n\t\t\t\t\t// also apply a RTL class?\n\t\t\t\t\tvakata_context.element.find(\"ul\").hide().end();\n\t\t\t\t});\n\t\t});\n\t}($));\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\n\n/**\n * ### Drag'n'drop plugin\n *\n * Enables dragging and dropping of nodes in the tree, resulting in a move or copy operations.\n */\n\n\t/**\n\t * stores all defaults for the drag'n'drop plugin\n\t * @name $.jstree.defaults.dnd\n\t * @plugin dnd\n\t */\n\t$.jstree.defaults.dnd = {\n\t\t/**\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\n\t\t * @name $.jstree.defaults.dnd.copy\n\t\t * @plugin dnd\n\t\t */\n\t\tcopy : true,\n\t\t/**\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\n\t\t * @name $.jstree.defaults.dnd.open_timeout\n\t\t * @plugin dnd\n\t\t */\n\t\topen_timeout : 500,\n\t\t/**\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) - return `false` to prevent dragging\n\t\t * @name $.jstree.defaults.dnd.is_draggable\n\t\t * @plugin dnd\n\t\t */\n\t\tis_draggable : true,\n\t\t/**\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\n\t\t * @plugin dnd\n\t\t */\n\t\tcheck_while_dragging : true,\n\t\t/**\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\n\t\t * @name $.jstree.defaults.dnd.always_copy\n\t\t * @plugin dnd\n\t\t */\n\t\talways_copy : false,\n\t\t/**\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\n\t\t * @name $.jstree.defaults.dnd.inside_pos\n\t\t * @plugin dnd\n\t\t */\n\t\tinside_pos : 0\n\t};\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\n\t// TODO: drop somewhere else - maybe demo only?\n\t$.jstree.plugins.dnd = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('mousedown.jstree touchstart.jstree', '.jstree-anchor', $.proxy(function (e) {\n\t\t\t\t\tvar obj = this.get_node(e.target),\n\t\t\t\t\t\tmlt = this.is_selected(obj) ? this.get_selected().length : 1;\n\t\t\t\t\tif(obj && obj.id && obj.id !== \"#\" && (e.which === 1 || e.type === \"touchstart\") &&\n\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_selected(true) : [obj]))))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\n\t\t\t\t\t\treturn $.vakata.dnd.start(e, { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_selected() : [obj.id] }, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget, true)) + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\n\t\t\t\t\t}\n\t\t\t\t}, this));\n\t\t};\n\t};\n\n\t$(function() {\n\t\t// bind only once for all instances\n\t\tvar lastmv = false,\n\t\t\tlaster = false,\n\t\t\topento = false,\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide().appendTo('body');\n\n\t\t$(document)\n\t\t\t.bind('dnd_start.vakata', function (e, data) {\n\t\t\t\tlastmv = false;\n\t\t\t})\n\t\t\t.bind('dnd_move.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\n\t\t\t\t\tref = false,\n\t\t\t\t\toff = false,\n\t\t\t\t\trel = false,\n\t\t\t\t\tl, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm;\n\t\t\t\t// if we are over an instance\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\n\t\t\t\t\tdata.helper\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\n\t\t\t\t\t\t.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'show' : 'hide' ]();\n\n\n\t\t\t\t\t// if are hovering the container itself add a new root node\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), '#', 'last', { 'dnd' : true, 'ref' : ins.get_node('#'), 'pos' : 'i', 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\n\t\t\t\t\t\t\tif(!ok) { break; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : '#', 'pos' : 'last' };\n\t\t\t\t\t\t\tmarker.hide();\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if we are hovering a tree node\n\t\t\t\t\t\tref = $(data.event.target).closest('.jstree-anchor');\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\n\t\t\t\t\t\t\toff = ref.offset();\n\t\t\t\t\t\t\trel = data.event.pageY - off.top;\n\t\t\t\t\t\t\th = ref.height();\n\t\t\t\t\t\t\tif(rel < h / 3) {\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\n\t\t\t\t\t\t\t\tswitch(v) {\n\t\t\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 'a':\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/*!\n\t\t\t\t\t\t\t\t// TODO: moving inside, but the node is not yet loaded?\n\t\t\t\t\t\t\t\t// the check will work anyway, as when moving the node will be loaded first and checked again\n\t\t\t\t\t\t\t\tif(v === 'i' && !ins.is_loaded(p)) { }\n\t\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\n\t\t\t\t\t\t\t\t\tps = i;\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\n\t\t\t\t\t\t\t\t\tif(!ok) {\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(ok) {\n\t\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-er').addClass('jstree-ok');\n\t\t\t\t\t\t\t\t\tlaster = {};\n\t\t\t\t\t\t\t\t\to = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(o === true) { return; }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t\tmarker.hide();\n\t\t\t})\n\t\t\t.bind('dnd_scroll.vakata', function (e, data) {\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tlastmv = false;\n\t\t\t\tdata.helper.find('.jstree-icon:eq(0)').removeClass('jstree-ok').addClass('jstree-er');\n\t\t\t})\n\t\t\t.bind('dnd_stop.vakata', function (e, data) {\n\t\t\t\tif(opento) { clearTimeout(opento); }\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\n\t\t\t\tmarker.hide();\n\t\t\t\tvar i, j, nodes = [];\n\t\t\t\tif(lastmv) {\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\n\t\t\t\t\t\tif(data.data.origin) {\n\t\t\t\t\t\t\tnodes[i].instance = data.data.origin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\n\t\t\t\t\t\ti = i.jstree(true);\n\t\t\t\t\t\tif(i) {\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.bind('keyup keydown', function (e, data) {\n\t\t\t\tdata = $.vakata.dnd._get();\n\t\t\t\tif(data && data.data && data.data.jstree) {\n\t\t\t\t\tdata.helper.find('.jstree-copy:eq(0)')[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\t// helpers\n\t(function ($) {\n\t\t// private variable\n\t\tvar vakata_dnd = {\n\t\t\telement\t: false,\n\t\t\ttarget\t: false,\n\t\t\tis_down\t: false,\n\t\t\tis_drag\t: false,\n\t\t\thelper\t: false,\n\t\t\thelper_w: 0,\n\t\t\tdata\t: false,\n\t\t\tinit_x\t: 0,\n\t\t\tinit_y\t: 0,\n\t\t\tscroll_l: 0,\n\t\t\tscroll_t: 0,\n\t\t\tscroll_e: false,\n\t\t\tscroll_i: false,\n\t\t\tis_touch: false\n\t\t};\n\t\t$.vakata.dnd = {\n\t\t\tsettings : {\n\t\t\t\tscroll_speed\t\t: 10,\n\t\t\t\tscroll_proximity\t: 20,\n\t\t\t\thelper_left\t\t\t: 5,\n\t\t\t\thelper_top\t\t\t: 10,\n\t\t\t\tthreshold\t\t\t: 5,\n\t\t\t\tthreshold_touch\t\t: 50\n\t\t\t},\n\t\t\t_trigger : function (event_name, e) {\n\t\t\t\tvar data = $.vakata.dnd._get();\n\t\t\t\tdata.event = e;\n\t\t\t\t$(document).triggerHandler(\"dnd_\" + event_name + \".vakata\", data);\n\t\t\t},\n\t\t\t_get : function () {\n\t\t\t\treturn {\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\n\t\t\t\t};\n\t\t\t},\n\t\t\t_clean : function () {\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\tvakata_dnd = {\n\t\t\t\t\telement\t: false,\n\t\t\t\t\ttarget\t: false,\n\t\t\t\t\tis_down\t: false,\n\t\t\t\t\tis_drag\t: false,\n\t\t\t\t\thelper\t: false,\n\t\t\t\t\thelper_w: 0,\n\t\t\t\t\tdata\t: false,\n\t\t\t\t\tinit_x\t: 0,\n\t\t\t\t\tinit_y\t: 0,\n\t\t\t\t\tscroll_l: 0,\n\t\t\t\t\tscroll_t: 0,\n\t\t\t\t\tscroll_e: false,\n\t\t\t\t\tscroll_i: false,\n\t\t\t\t\tis_touch: false\n\t\t\t\t};\n\t\t\t\t$(document).off(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).off(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t},\n\t\t\t_scroll : function (init_only) {\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.scroll_i) {\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(init_only === true) { return false; }\n\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_scroll.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\n\t\t\t\t}\n\t\t\t},\n\t\t\tstart : function (e, data, html) {\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\n\t\t\t\ttry {\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\n\t\t\t\t\tif(e.currentTarget.style) { e.currentTarget.style.MozUserSelect = \"none\"; }\n\t\t\t\t} catch(ignore) { }\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\n\t\t\t\tvakata_dnd.data\t\t= data;\n\t\t\t\tvakata_dnd.is_down\t= true;\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\n\t\t\t\tvakata_dnd.target\t= e.target;\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\n\t\t\t\tif(html !== false) {\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$(document).bind(\"mousemove touchmove\", $.vakata.dnd.drag);\n\t\t\t\t$(document).bind(\"mouseup touchend\", $.vakata.dnd.stop);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdrag : function (e) {\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\n\t\t\t\tif(!vakata_dnd.is_drag) {\n\t\t\t\t\tif(\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(\"body\");\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * triggered on the document when a drag starts\n\t\t\t\t\t\t * @event\n\t\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t\t * @name dnd_start.vakata\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\n\t\t\t\t\t\t */\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\n\t\t\t\t\t}\n\t\t\t\t\telse { return; }\n\t\t\t\t}\n\n\t\t\t\tvar d  = false, w  = false,\n\t\t\t\t\tdh = false, wh = false,\n\t\t\t\t\tdw = false, ww = false,\n\t\t\t\t\tdt = false, dl = false,\n\t\t\t\t\tht = false, hl = false;\n\n\t\t\t\tvakata_dnd.scroll_t = 0;\n\t\t\t\tvakata_dnd.scroll_l = 0;\n\t\t\t\tvakata_dnd.scroll_e = false;\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\n\t\t\t\t\t.filter(function () {\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\n\t\t\t\t\t})\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tif(!vakata_dnd.scroll_e) {\n\t\t\t\t\td  = $(document); w = $(window);\n\t\t\t\t\tdh = d.height(); wh = w.height();\n\t\t\t\t\tdw = d.width(); ww = w.width();\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\n\n\t\t\t\tif(vakata_dnd.helper) {\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\n\t\t\t\t\tvakata_dnd.helper.css({\n\t\t\t\t\t\tleft\t: hl + \"px\",\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * triggered on the document when a drag is in progress\n\t\t\t\t * @event\n\t\t\t\t * @plugin dnd\n\t\t\t\t * @name dnd_move.vakata\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\n\t\t\t\t */\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tstop : function (e) {\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\n\t\t\t\t}\n\t\t\t\tif(vakata_dnd.is_drag) {\n\t\t\t\t\t/**\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\n\t\t\t\t\t * @event\n\t\t\t\t\t * @plugin dnd\n\t\t\t\t\t * @name dnd_stop.vakata\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\n\t\t\t\t\t * @param {Object} event the event that caused the stop\n\t\t\t\t\t */\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.vakata.dnd._clean();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}($));\n\n\t// include the dnd plugin by default\n\t// $.jstree.defaults.plugins.push(\"dnd\");\n\n\n/**\n * ### Search plugin\n *\n * Adds search functionality to jsTree.\n */\n\n\t/**\n\t * stores all defaults for the search plugin\n\t * @name $.jstree.defaults.search\n\t * @plugin search\n\t */\n\t$.jstree.defaults.search = {\n\t\t/**\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results. \n\t\t * \n\t\t * A `str` (which is the search string) parameter will be added with the request. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 2 parameters - the search string and the callback to call with the array of nodes to load.\n\t\t * @name $.jstree.defaults.search.ajax\n\t\t * @plugin search\n\t\t */\n\t\tajax : false,\n\t\t/**\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\n\t\t * @name $.jstree.defaults.search.fuzzy\n\t\t * @plugin search\n\t\t */\n\t\tfuzzy : false,\n\t\t/**\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.search.case_sensitive\n\t\t * @plugin search\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * Indicates if the tree should be filtered to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers). Default is `false`.\n\t\t * @name $.jstree.defaults.search.show_only_matches\n\t\t * @plugin search\n\t\t */\n\t\tshow_only_matches : false,\n\t\t/**\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\n\t\t * @plugin search\n\t\t */\n\t\tclose_opened_onclear : true,\n\t\t/**\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_leaves_only\n\t\t * @plugin search\n\t\t */\n\t\tsearch_leaves_only : false,\n\t\t/**\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\n\t\t * @name $.jstree.defaults.search.search_callback\n\t\t * @plugin search\n\t\t */\n\t\tsearch_callback : false\n\t};\n\n\t$.jstree.plugins.search = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tthis.element.on('before_open.jstree', $.proxy(function (e, data) {\n\t\t\t\tvar i, j, f, r = this._data.search.res, s = [], o = $();\n\t\t\t\tif(r && r.length) {\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t\t\tif(this.settings.search.show_only_matches && this._data.search.res.length) {\n\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\n\t\t\t\t\t\t\ts = s.concat(this.get_node(r[i]).parents);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = $.vakata.array_remove_item($.vakata.array_unique(s),'#');\n\t\t\t\t\t\to = s.length ? $(this.element[0].querySelectorAll('#' + $.map(s, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))) : $();\n\n\t\t\t\t\t\tthis.element.find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\to = o.add(this._data.search.dom);\n\t\t\t\t\t\to.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif(this.settings.search.show_only_matches) {\n\t\t\t\tthis.element\n\t\t\t\t\t.on(\"search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").hide().filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t\tdata.nodes.parentsUntil(\".jstree\").addBack().show()\n\t\t\t\t\t\t\t\t.filter(\".jstree-children\").each(function () { $(this).children(\".jstree-node:visible\").eq(-1).addClass(\"jstree-last\"); });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"clear_search.jstree\", function (e, data) {\n\t\t\t\t\t\tif(data.nodes.length) {\n\t\t\t\t\t\t\t$(this).find(\".jstree-node\").css(\"display\",\"\").filter('.jstree-last').filter(function() { return this.nextSibling; }).removeClass('jstree-last');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t/**\n\t\t * used to search the tree nodes for a given string\n\t\t * @name search(str [, skip_async])\n\t\t * @param {String} str the search string\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\n\t\t * @plugin search\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.search = function (str, skip_async) {\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\n\t\t\t\treturn this.clear_search();\n\t\t\t}\n\t\t\tstr = str.toString();\n\t\t\tvar s = this.settings.search,\n\t\t\t\ta = s.ajax ? s.ajax : false,\n\t\t\t\tf = null,\n\t\t\t\tr = [],\n\t\t\t\tp = [], i, j;\n\t\t\tif(this._data.search.res.length) {\n\t\t\t\tthis.clear_search();\n\t\t\t}\n\t\t\tif(!skip_async && a !== false) {\n\t\t\t\tif($.isFunction(a)) {\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ta = $.extend({}, a);\n\t\t\t\t\tif(!a.data) { a.data = {}; }\n\t\t\t\t\ta.data.str = str;\n\t\t\t\t\treturn $.ajax(a)\n\t\t\t\t\t\t.fail($.proxy(function () {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\n\t\t\t\t\t\t}, this))\n\t\t\t\t\t\t.done($.proxy(function (d) {\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\n\t\t\t\t\t\t\t\tthis.search(str, true);\n\t\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t}, this));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.search.str = str;\n\t\t\tthis._data.search.dom = $();\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\n\n\t\t\t$.each(this._model.data, function (i, v) {\n\t\t\t\tif(v.text && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) ) {\n\t\t\t\t\tr.push(i);\n\t\t\t\t\tp = p.concat(v.parents);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(r.length) {\n\t\t\t\tp = $.vakata.array_unique(p);\n\t\t\t\tthis._search_open(p);\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\n\t\t\t\tthis._data.search.res = r;\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\n\t\t\t * @param {String} str the search string\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res });\n\t\t};\n\t\t/**\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\n\t\t * @name clear_search()\n\t\t * @plugin search\n\t\t * @trigger clear_search.jstree\n\t\t */\n\t\tthis.clear_search = function () {\n\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\n\t\t\tif(this.settings.search.close_opened_onclear) {\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\n\t\t\t}\n\t\t\t/**\n\t\t\t * triggered after search is complete\n\t\t\t * @event\n\t\t\t * @name clear_search.jstree\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\n\t\t\t * @param {String} str the search string (the last search string)\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\n\t\t\t * @plugin search\n\t\t\t */\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\n\t\t\tthis._data.search.str = \"\";\n\t\t\tthis._data.search.res = [];\n\t\t\tthis._data.search.opn = [];\n\t\t\tthis._data.search.dom = $();\n\t\t};\n\t\t/**\n\t\t * opens nodes that need to be opened to reveal the search results. Used only internally.\n\t\t * @private\n\t\t * @name _search_open(d)\n\t\t * @param {Array} d an array of node IDs\n\t\t * @plugin search\n\t\t */\n\t\tthis._search_open = function (d) {\n\t\t\tvar t = this;\n\t\t\t$.each(d.concat([]), function (i, v) {\n\t\t\t\tif(v === \"#\") { return true; }\n\t\t\t\ttry { v = $('#' + v.replace($.jstree.idregex,'\\\\$&'), t.element); } catch(ignore) { }\n\t\t\t\tif(v && v.length) {\n\t\t\t\t\tif(t.is_closed(v)) {\n\t\t\t\t\t\tt._data.search.opn.push(v[0].id);\n\t\t\t\t\t\tt.open_node(v, function () { t._search_open(d); }, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t};\n\n\t// helpers\n\t(function ($) {\n\t\t// from http://kiro.me/projects/fuse.html\n\t\t$.vakata.search = function(pattern, txt, options) {\n\t\t\toptions = options || {};\n\t\t\tif(options.fuzzy !== false) {\n\t\t\t\toptions.fuzzy = true;\n\t\t\t}\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\n\t\t\tvar MATCH_LOCATION\t= options.location || 0,\n\t\t\t\tMATCH_DISTANCE\t= options.distance || 100,\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\n\t\t\t\tpatternLen = pattern.length,\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\n\t\t\tif(patternLen > 32) {\n\t\t\t\toptions.fuzzy = false;\n\t\t\t}\n\t\t\tif(options.fuzzy) {\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\n\t\t\t\tpattern_alphabet = (function () {\n\t\t\t\t\tvar mask = {},\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\n\t\t\t\t\t}\n\t\t\t\t\treturn mask;\n\t\t\t\t}());\n\t\t\t\tmatch_bitapScore = function (e, x) {\n\t\t\t\t\tvar accuracy = e / patternLen,\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\n\t\t\t\t\tif(!MATCH_DISTANCE) {\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\n\t\t\t\t\t}\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\n\t\t\t\t};\n\t\t\t}\n\t\t\tsearch = function (text) {\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: true,\n\t\t\t\t\t\tscore: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif(!options.fuzzy) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tisMatch: false,\n\t\t\t\t\t\tscore: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar i, j,\n\t\t\t\t\ttextLen = text.length,\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\n\t\t\t\t\tbinMin, binMid,\n\t\t\t\t\tbinMax = patternLen + textLen,\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\n\t\t\t\t\tscore = 1,\n\t\t\t\t\tlocations = [];\n\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\n\t\t\t\t\tif (bestLoc !== -1) {\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbestLoc = -1;\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\n\t\t\t\t\tbinMin = 0;\n\t\t\t\t\tbinMid = binMax;\n\t\t\t\t\twhile (binMin < binMid) {\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\n\t\t\t\t\t\t\tbinMin = binMid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\n\t\t\t\t\t}\n\t\t\t\t\tbinMax = binMid;\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\n\t\t\t\t\trd = new Array(finish + 2);\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rd[j] & matchmask) {\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\n\t\t\t\t\t\t\t\tscoreThreshold = score;\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlastRd = rd;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tisMatch: bestLoc >= 0,\n\t\t\t\t\tscore: score\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\n\t\t};\n\t}($));\n\n\t// include the search plugin by default\n\t// $.jstree.defaults.plugins.push(\"search\");\n\n/**\n * ### Sort plugin\n *\n * Autmatically sorts all siblings in the tree according to a sorting function.\n */\n\n\t/**\n\t * the settings function used to sort the nodes.\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\n\t * @name $.jstree.defaults.sort\n\t * @plugin sort\n\t */\n\t$.jstree.defaults.sort = function (a, b) {\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\n\t};\n\t$.jstree.plugins.sort = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tthis.element\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.sort(data.parent, false);\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * used to sort a node's children\n\t\t * @private\n\t\t * @name sort(obj [, deep])\n\t\t * @param  {mixed} obj the node\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\n\t\t * @plugin sort\n\t\t * @trigger search.jstree\n\t\t */\n\t\tthis.sort = function (obj, deep) {\n\t\t\tvar i, j;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(obj && obj.children && obj.children.length) {\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\n\t\t\t\tif(deep) {\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// include the sort plugin by default\n\t// $.jstree.defaults.plugins.push(\"sort\");\n\n/**\n * ### State plugin\n *\n * Saves the state of the tree (selected nodes, opened nodes) on the user's computer using available options (localStorage, cookies, etc)\n */\n\n\tvar to = false;\n\t/**\n\t * stores all defaults for the state plugin\n\t * @name $.jstree.defaults.state\n\t * @plugin state\n\t */\n\t$.jstree.defaults.state = {\n\t\t/**\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\n\t\t * @name $.jstree.defaults.state.key\n\t\t * @plugin state\n\t\t */\n\t\tkey\t\t: 'jstree',\n\t\t/**\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\n\t\t * @name $.jstree.defaults.state.events\n\t\t * @plugin state\n\t\t */\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree',\n\t\t/**\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\n\t\t * @name $.jstree.defaults.state.ttl\n\t\t * @plugin state\n\t\t */\n\t\tttl\t\t: false,\n\t\t/**\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\n\t\t * @name $.jstree.defaults.state.filter\n\t\t * @plugin state\n\t\t */\n\t\tfilter\t: false\n\t};\n\t$.jstree.plugins.state = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\t\t\tvar bind = $.proxy(function () {\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\n\t\t\t\t\tif(to) { clearTimeout(to); }\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\n\t\t\t\t}, this));\n\t\t\t}, this);\n\t\t\tthis.element\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\n\t\t\t\t\t}, this));\n\t\t};\n\t\t/**\n\t\t * save the state\n\t\t * @name save_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.save_state = function () {\n\t\t\tvar st = { 'state' : this.get_state(), 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\n\t\t};\n\t\t/**\n\t\t * restore the state from the user's computer\n\t\t * @name restore_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.restore_state = function () {\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\n\t\t\tif(!!k && k.state) { k = k.state; }\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\n\t\t\tif(!!k) {\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\n\t\t\t\tthis.set_state(k);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t/**\n\t\t * clear the state on the user's computer\n\t\t * @name clear_state()\n\t\t * @plugin state\n\t\t */\n\t\tthis.clear_state = function () {\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\n\t\t};\n\t};\n\n\t(function ($, undefined) {\n\t\t$.vakata.storage = {\n\t\t\t// simply specifying the functions in FF throws an error\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\n\t\t};\n\t}($));\n\n\t// include the state plugin by default\n\t// $.jstree.defaults.plugins.push(\"state\");\n\n/**\n * ### Types plugin\n *\n * Makes it possible to add predefined types for groups of nodes, which make it possible to easily control nesting rules and icon for each group.\n */\n\n\t/**\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\n\t * \n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\n\t *\n\t * There are two predefined types:\n\t * \n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\n\t * \n\t * @name $.jstree.defaults.types\n\t * @plugin types\n\t */\n\t$.jstree.defaults.types = {\n\t\t'#' : {},\n\t\t'default' : {}\n\t};\n\n\t$.jstree.plugins.types = function (options, parent) {\n\t\tthis.init = function (el, options) {\n\t\t\tvar i, j;\n\t\t\tif(options && options.types && options.types['default']) {\n\t\t\t\tfor(i in options.types) {\n\t\t\t\t\tif(i !== \"default\" && i !== \"#\" && options.types.hasOwnProperty(i)) {\n\t\t\t\t\t\tfor(j in options.types['default']) {\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent.init.call(this, el, options);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.refresh = function (skip_loading, forget_state) {\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\n\t\t\tthis._model.data['#'].type = '#';\n\t\t};\n\t\tthis.bind = function () {\n\t\t\tthis.element\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\n\t\t\t\t\t\tvar m = this._model.data,\n\t\t\t\t\t\t\tdpc = data.nodes,\n\t\t\t\t\t\t\tt = this.settings.types,\n\t\t\t\t\t\t\ti, j, c = 'default';\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\n\t\t\t\t\t\t\tc = 'default';\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tm['#'].type = '#';\n\t\t\t\t\t}, this));\n\t\t\tparent.bind.call(this);\n\t\t};\n\t\tthis.get_json = function (obj, options, flat) {\n\t\t\tvar i, j,\n\t\t\t\tm = this._model.data,\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\n\t\t\tif(tmp === false) { return false; }\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\n\t\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\t\tdelete tmp[i].id;\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\n\t\t\t\tif(options && options.no_id) {\n\t\t\t\t\ttmp = this._delete_ids(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis._delete_ids = function (tmp) {\n\t\t\tif($.isArray(tmp)) {\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\tdelete tmp.id;\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\n\t\t\t\tdelete tmp.li_attr.id;\n\t\t\t}\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t};\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tvar m = obj && obj.id ? $.jstree.reference(obj.id) : null, tmp, d, i, j;\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"create_node\":\n\t\t\t\tcase \"move_node\":\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\n\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray(obj.type, tmp.valid_children) === -1) {\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\n\t\t\t\t\t\t\td = 0;\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\n\t\t\t\t\t\t\td++;\n\t\t\t\t\t\t} while(par);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type settings object for a node\n\t\t * @name get_rules(obj)\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @return {Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_rules = function (obj) {\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!obj) { return false; }\n\t\t\tvar tmp = this.get_type(obj, true);\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\n\t\t\treturn tmp;\n\t\t};\n\t\t/**\n\t\t * used to retrieve the type string or settings object for a node\n\t\t * @name get_type(obj [, rules])\n\t\t * @param {mixed} obj the node to find the rules for\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\n\t\t * @return {String|Object}\n\t\t * @plugin types\n\t\t */\n\t\tthis.get_type = function (obj, rules) {\n\t\t\tobj = this.get_node(obj);\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\n\t\t};\n\t\t/**\n\t\t * used to change a node's type\n\t\t * @name set_type(obj, type)\n\t\t * @param {mixed} obj the node to change\n\t\t * @param {String} type the new type\n\t\t * @plugin types\n\t\t */\n\t\tthis.set_type = function (obj, type) {\n\t\t\tvar t, t1, t2, old_type, old_icon;\n\t\t\tif($.isArray(obj)) {\n\t\t\t\tobj = obj.slice();\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\n\t\t\t\t\tthis.set_type(obj[t1], type);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tt = this.settings.types;\n\t\t\tobj = this.get_node(obj);\n\t\t\tif(!t[type] || !obj) { return false; }\n\t\t\told_type = obj.type;\n\t\t\told_icon = this.get_icon(obj);\n\t\t\tobj.type = type;\n\t\t\tif(old_icon === true || (t[old_type] && t[old_type].icon && old_icon === t[old_type].icon)) {\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t};\n\t// include the types plugin by default\n\t// $.jstree.defaults.plugins.push(\"types\");\n\n/**\n * ### Unique plugin\n *\n * Enforces that no nodes with the same name can coexist as siblings.\n */\n\n\t/**\n\t * stores all defaults for the unique plugin\n\t * @name $.jstree.defaults.unique\n\t * @plugin unique\n\t */\n\t$.jstree.defaults.unique = {\n\t\t/**\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\n\t\t * @name $.jstree.defaults.unique.case_sensitive\n\t\t * @plugin unique\n\t\t */\n\t\tcase_sensitive : false,\n\t\t/**\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\n\t\t * @name $.jstree.defaults.unique.duplicate\n\t\t * @plugin unique\n\t\t */\n\t\tduplicate : function (name, counter) {\n\t\t\treturn name + ' (' + counter + ')';\n\t\t}\n\t};\n\n\t$.jstree.plugins.unique = function (options, parent) {\n\t\tthis.check = function (chk, obj, par, pos, more) {\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\n\t\t\tpar = par && par.id ? par : this.get_node(par);\n\t\t\tif(!par || !par.children) { return true; }\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\n\t\t\t\tc = [],\n\t\t\t\ts = this.settings.unique.case_sensitive,\n\t\t\t\tm = this._model.data, i, j;\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\tc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t}\n\t\t\tif(!s) { n = n.toLowerCase(); }\n\t\t\tswitch(chk) {\n\t\t\t\tcase \"delete_node\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"rename_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && obj.text[ s ? 'toString' : 'toLowerCase']() === n));\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"create_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"copy_node\":\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\tcase \"move_node\":\n\t\t\t\t\ti = (obj.parent === par.id || $.inArray(n, c) === -1);\n\t\t\t\t\tif(!i) {\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\n\t\t\tif(!node || node.text === undefined) {\n\t\t\t\tif(par === null) {\n\t\t\t\t\tpar = \"#\";\n\t\t\t\t}\n\t\t\t\tpar = this.get_node(par);\n\t\t\t\tif(!par) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t\t\t}\n\t\t\t\tif(!node) { node = {}; }\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, cb = this.settings.unique.duplicate;\n\t\t\t\tn = tmp = this.get_string('New node');\n\t\t\t\tdpc = [];\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\n\t\t\t\t\tdpc.push(s ? m[par.children[i]].text : m[par.children[i]].text.toLowerCase());\n\t\t\t\t}\n\t\t\t\ti = 1;\n\t\t\t\twhile($.inArray(s ? n : n.toLowerCase(), dpc) !== -1) {\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\n\t\t\t\t}\n\t\t\t\tnode.text = n;\n\t\t\t}\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\n\t\t};\n\t};\n\n\t// include the unique plugin by default\n\t// $.jstree.defaults.plugins.push(\"unique\");\n\n\n/**\n * ### Wholerow plugin\n *\n * Makes each node appear block level. Making selection easier. May cause slow down for large trees in old browsers.\n */\n\n\tvar div = document.createElement('DIV');\n\tdiv.setAttribute('unselectable','on');\n\tdiv.className = 'jstree-wholerow';\n\tdiv.innerHTML = '&#160;';\n\t$.jstree.plugins.wholerow = function (options, parent) {\n\t\tthis.bind = function () {\n\t\t\tparent.bind.call(this);\n\n\t\t\tthis.element\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\n\t\t\t\t\t\tthis.hide_dots();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\n\t\t\t\t\t\tvar tmp = false, i, j;\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp);\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t})\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor:eq(0)\").trigger(tmp).focus();\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}, this))\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\n\t\t\t\t\t}, this));\n\t\t};\n\t\tthis.teardown = function () {\n\t\t\tif(this.settings.wholerow) {\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\n\t\t\t}\n\t\t\tparent.teardown.call(this);\n\t\t};\n\t\tthis.redraw_node = function(obj, deep, callback) {\n\t\t\tobj = parent.redraw_node.call(this, obj, deep, callback);\n\t\t\tif(obj) {\n\t\t\t\tvar tmp = div.cloneNode(true);\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\t};\n\t// include the wholerow plugin by default\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/jquery/jstree.js\n// module id = 198\n// module chunks = 6 7","/**\n    This is the main class of the form plugin. It is referenced as 'app' in lower level modules.\n*/\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormSection from \"mvc/form/form-section\";\nimport FormData from \"mvc/form/form-data\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model({\n            initial_errors: false,\n            cls: \"ui-portlet-limited\",\n            icon: null,\n            always_refresh: true,\n            status: \"warning\",\n            hide_operations: false,\n            onchange: function() {}\n        }).set(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Update available options */\n    update: function(new_model) {\n        var self = this;\n        this.data.matchModel(new_model, (node, input_id) => {\n            var input = self.input_list[input_id];\n            if (input && input.options) {\n                if (!_.isEqual(input.options, node.options)) {\n                    input.options = node.options;\n                    var field = self.field_list[input_id];\n                    if (field.update) {\n                        var new_options = [];\n                        if ([\"data\", \"data_collection\", \"drill_down\"].indexOf(input.type) != -1) {\n                            new_options = input.options;\n                        } else {\n                            for (var i in node.options) {\n                                var opt = node.options[i];\n                                if (opt.length > 2) {\n                                    new_options.push({\n                                        label: opt[0],\n                                        value: opt[1]\n                                    });\n                                }\n                            }\n                        }\n                        field.update(new_options);\n                        field.trigger(\"change\");\n                        Galaxy.emit.debug(\"form-view::update()\", `Updating options for ${input_id}`);\n                    }\n                }\n            }\n        });\n    },\n\n    /** Set form into wait mode */\n    wait: function(active) {\n        for (var i in this.input_list) {\n            var field = this.field_list[i];\n            var input = this.input_list[i];\n            if (input.is_dynamic && field.wait && field.unwait) {\n                field[active ? \"wait\" : \"unwait\"]();\n            }\n        }\n    },\n\n    /** Highlight and scroll to input element (currently only used for error notifications) */\n    highlight: function(input_id, message, silent) {\n        var input_element = this.element_list[input_id];\n        if (input_element) {\n            input_element.error(message || \"Please verify this parameter.\");\n            this.portlet.expand();\n            this.trigger(\"expand\", input_id);\n            if (!silent) {\n                var $panel = this.$el\n                    .parents()\n                    .filter(function() {\n                        return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n                    })\n                    .first();\n                $panel.animate(\n                    {\n                        scrollTop: $panel.scrollTop() + input_element.$el.offset().top - 120\n                    },\n                    500\n                );\n            }\n        }\n    },\n\n    /** Highlights errors */\n    errors: function(options) {\n        this.trigger(\"reset\");\n        if (options && options.errors) {\n            var error_messages = this.data.matchResponse(options.errors);\n            for (var input_id in this.element_list) {\n                var input = this.element_list[input_id];\n                if (error_messages[input_id]) {\n                    this.highlight(input_id, error_messages[input_id], true);\n                }\n            }\n        }\n    },\n\n    /** Render tool form */\n    render: function() {\n        var self = this;\n        this.off(\"change\");\n        this.off(\"reset\");\n        // contains the dom field elements as created by the parameter factory i.e. form-parameters\n        this.field_list = {};\n        // contains input definitions/dictionaries as provided by the parameters to_dict() function through the api\n        this.input_list = {};\n        // contains the dom elements of each input element i.e. form-input which wraps the actual input field\n        this.element_list = {};\n        // converts the form into a json data structure\n        this.data = new FormData.Manager(this);\n        this._renderForm();\n        this.data.create();\n        this.model.get(\"initial_errors\") && this.errors(this.model.attributes);\n        // add listener which triggers on checksum change, and reset the form input wrappers\n        var current_check = this.data.checksum();\n        this.on(\"change\", input_id => {\n            var input = self.input_list[input_id];\n            if (!input || input.refresh_on_change || self.model.get(\"always_refresh\")) {\n                var new_check = self.data.checksum();\n                if (new_check != current_check) {\n                    current_check = new_check;\n                    self.model.get(\"onchange\")();\n                }\n            }\n        });\n        this.on(\"reset\", () => {\n            _.each(self.element_list, input_element => {\n                input_element.reset();\n            });\n        });\n        return this;\n    },\n\n    /** Renders/appends dom elements of the form */\n    _renderForm: function() {\n        $(\".tooltip\").remove();\n        var options = this.model.attributes;\n        this.message = new Ui.UnescapedMessage();\n        this.section = new FormSection.View(this, {\n            inputs: options.inputs\n        });\n        this.portlet = new Portlet.View({\n            icon: options.icon,\n            title: options.title,\n            cls: options.cls,\n            operations: !options.hide_operations && options.operations,\n            buttons: options.buttons,\n            collapsible: options.collapsible,\n            collapsed: options.collapsed,\n            onchange_title: options.onchange_title\n        });\n        this.portlet.append(this.message.$el);\n        this.portlet.append(this.section.$el);\n        this.$el.empty();\n        options.inputs && this.$el.append(this.portlet.$el);\n        options.message &&\n            this.message.update({\n                persistent: true,\n                status: options.status,\n                message: options.message\n            });\n        Galaxy.emit.debug(\"form-view::initialize()\", \"Completed\");\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-view.js","/**\n *  This class creates/wraps a default html select field as backbone class.\n */\nimport Utils from \"utils/utils\";\nimport Buttons from \"mvc/ui/ui-buttons\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.data = [];\n        this.data2 = [];\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                cls: \"ui-select\",\n                error_text: \"No options available\",\n                empty_text: \"Nothing selected\",\n                visible: true,\n                wait: false,\n                multiple: false,\n                searchable: true,\n                optional: false,\n                disabled: false,\n                readonly: false,\n                onchange: function() {},\n                value: null,\n                individual: false,\n                pagesize: 20\n            }).set(options);\n        this.on(\"change\", () => {\n            self.model.get(\"onchange\") && self.model.get(\"onchange\")(self.value());\n        });\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:disabled\", this._changeDisabled, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:multiple change:searchable change:cls change:id\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.model.get(\"searchable\") ? this._renderSearchable() : this._renderClassic();\n        this.$el.addClass(this.model.get(\"cls\")).attr(\"id\", this.model.get(\"id\"));\n        this.$select\n            .empty()\n            .addClass(\"select\")\n            .attr(\"id\", `${this.model.get(\"id\")}_select`)\n            .prop(\"multiple\", this.model.get(\"multiple\"))\n            .on(\"change\", () => {\n                self.value(self._getValue());\n                self.trigger(\"change\");\n            });\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n        this._changeDisabled();\n    },\n\n    /** Renders the classic selection field */\n    _renderClassic: function() {\n        var self = this;\n        this.$el\n            .addClass(this.model.get(\"multiple\") ? \"ui-select-multiple\" : \"ui-select\")\n            .append((this.$select = $(\"<select/>\")))\n            .append((this.$dropdown = $(\"<div/>\")))\n            .append((this.$resize = $(\"<div/>\").append((this.$resize_icon = $(\"<i/>\")))));\n        if (this.model.get(\"multiple\")) {\n            this.$dropdown.hide();\n            this.$resize_icon.addClass(\"fa fa-angle-double-right fa-rotate-45\").show();\n            this.$resize\n                .removeClass()\n                .addClass(\"icon-resize\")\n                .show()\n                .off(\"mousedown\")\n                .on(\"mousedown\", event => {\n                    var currentY = event.pageY;\n                    var currentHeight = self.$select.height();\n                    self.minHeight = self.minHeight || currentHeight;\n                    $(\"#dd-helper\")\n                        .show()\n                        .on(\"mousemove\", event => {\n                            self.$select.height(Math.max(currentHeight + (event.pageY - currentY), self.minHeight));\n                        })\n                        .on(\"mouseup mouseleave\", () => {\n                            $(\"#dd-helper\")\n                                .hide()\n                                .off();\n                        });\n                });\n        } else {\n            this.$dropdown.show();\n            this.$resize.hide();\n            this.$resize_icon.hide();\n        }\n    },\n\n    /** Renders the default select2 field */\n    _renderSearchable: function() {\n        var self = this;\n        this.$el.append((this.$select = $(\"<div/>\"))).append((this.$dropdown = $(\"<div/>\")));\n        this.$dropdown.hide();\n        if (!this.model.get(\"multiple\")) {\n            this.$dropdown.show().on(\"click\", () => {\n                self.$select.select2 && self.$select.select2(\"open\");\n            });\n        }\n        this.all_button = null;\n        if (this.model.get(\"multiple\") && !this.model.get(\"individual\") && !this.model.get(\"readonly\")) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    var new_value = [];\n                    self.all_button.value() !== 0 &&\n                        _.each(self.model.get(\"data\"), option => {\n                            new_value.push(option.value);\n                        });\n                    self.value(new_value);\n                    self.trigger(\"change\");\n                }\n            });\n            this.$el.prepend(this.all_button.$el);\n        }\n    },\n\n    /** Matches a search term with a given text */\n    _match: function(term, text) {\n        return (\n            !term ||\n            term == \"\" ||\n            String(text)\n                .toUpperCase()\n                .indexOf(term.toUpperCase()) >= 0\n        );\n    },\n\n    /** Updates the selection options */\n    _changeData: function() {\n        var self = this;\n        this.data = [];\n        if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n            this.data.push({\n                value: \"__null__\",\n                label: self.model.get(\"empty_text\")\n            });\n        }\n        _.each(this.model.get(\"data\"), option => {\n            self.data.push(option);\n        });\n        if (this.length() == 0) {\n            this.data.push({\n                value: \"__null__\",\n                label: this.model.get(\"error_text\")\n            });\n        }\n        if (this.model.get(\"searchable\")) {\n            this.data2 = [];\n            _.each(this.data, (option, index) => {\n                self.data2.push({\n                    order: index,\n                    id: option.value,\n                    text: option.label,\n                    tags: option.tags\n                });\n            });\n            this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n            this.matched_tags = {};\n            this.$select.select2({\n                data: self.data2,\n                closeOnSelect: !this.model.get(\"multiple\"),\n                multiple: this.model.get(\"multiple\"),\n                query: function(q) {\n                    self.matched_tags = {};\n                    var pagesize = self.model.get(\"pagesize\");\n                    var results = _.filter(self.data2, e => {\n                        var found = false;\n                        _.each(e.tags, tag => {\n                            if (self._match(q.term, tag)) {\n                                found = self.matched_tags[tag] = true;\n                            }\n                        });\n                        return found || self._match(q.term, e.text);\n                    });\n                    q.callback({\n                        results: results.slice((q.page - 1) * pagesize, q.page * pagesize),\n                        more: results.length >= q.page * pagesize\n                    });\n                },\n                formatResult: function(result) {\n                    return `${_.escape(result.text)}<div class=\"ui-tags\">${_.reduce(\n                        result.tags,\n                        (memo, tag) => {\n                            if (self.matched_tags[tag]) {\n                                return `${memo}&nbsp;<div class=\"label label-info\">${_.escape(tag)}</div>`;\n                            }\n                            return memo;\n                        },\n                        \"\"\n                    )}</div>`;\n                }\n            });\n            this.$(\".select2-container .select2-search input\").off(\"blur\");\n        } else {\n            this.$select.find(\"option\").remove();\n            _.each(this.data, option => {\n                self.$select.append(\n                    $(\"<option/>\")\n                        .attr(\"value\", option.value)\n                        .html(_.escape(option.label))\n                );\n            });\n        }\n        this.model.set(\"disabled\", this.model.get(\"readonly\") || this.length() == 0);\n        this._changeValue();\n    },\n\n    /** Handles field enabling/disabling, usually used when no options are available */\n    _changeDisabled: function() {\n        if (this.model.get(\"searchable\")) {\n            this.$select.select2(this.model.get(\"disabled\") ? \"disable\" : \"enable\");\n        } else {\n            this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n        }\n    },\n\n    /** Searchable fields may display a spinner e.g. while waiting for a server response */\n    _changeWait: function() {\n        this.$dropdown\n            .removeClass()\n            .addClass(\"icon-dropdown fa\")\n            .addClass(this.model.get(\"wait\") ? \"fa-spinner fa-spin\" : \"fa-caret-down\");\n    },\n\n    /** Handles field visibility */\n    _changeVisible: function() {\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n    },\n\n    /** Synchronizes the model value with the actually selected field value */\n    _changeValue: function() {\n        this._setValue(this.model.get(\"value\"));\n        if (this.model.get(\"multiple\")) {\n            if (this.all_button) {\n                var value = this._getValue();\n                this.all_button.value($.isArray(value) ? value.length : 0, this.length());\n            }\n        } else if (this._getValue() === null && !this.model.get(\"optional\")) {\n            this._setValue(this.first());\n        }\n    },\n\n    /** Return/Set current selection */\n    value: function(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        return this._getValue();\n    },\n\n    /** Return the first select option */\n    first: function() {\n        return this.data.length > 0 ? this.data[0].value : null;\n    },\n\n    /** Check if a value is an existing option */\n    exists: function(value) {\n        return _.findWhere(this.data, { value: value });\n    },\n\n    /** Return the label/text of the current selection */\n    text: function() {\n        var v = this._getValue();\n        var d = this.exists($.isArray(v) ? v[0] : v);\n        return d ? d.label : \"\";\n    },\n\n    /** Show the select field */\n    show: function() {\n        this.model.set(\"visible\", true);\n    },\n\n    /** Hide the select field */\n    hide: function() {\n        this.model.set(\"visible\", false);\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Returns true if the field is disabled */\n    disabled: function() {\n        return this.model.get(\"disabled\");\n    },\n\n    /** Enable the select field */\n    enable: function() {\n        this.model.set(\"disabled\", false);\n    },\n\n    /** Disable the select field */\n    disable: function() {\n        this.model.set(\"disabled\", true);\n    },\n\n    /** Update all available options at once */\n    add: function(options, sorter) {\n        _.each(this.model.get(\"data\"), v => {\n            v.keep && !_.findWhere(options, { value: v.value }) && options.push(v);\n        });\n        sorter && options && options.sort(sorter);\n        this.model.set(\"data\", options);\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.model.set(\"data\", options);\n    },\n\n    /** Set the custom onchange callback function */\n    setOnChange: function(callback) {\n        this.model.set(\"onchange\", callback);\n    },\n\n    /** Number of available options */\n    length: function() {\n        return $.isArray(this.model.get(\"data\")) ? this.model.get(\"data\").length : 0;\n    },\n\n    /** Set value to dom */\n    _setValue: function(new_value) {\n        var self = this;\n        if (new_value === null || new_value === undefined) {\n            new_value = \"__null__\";\n        }\n        if (this.model.get(\"multiple\")) {\n            new_value = $.isArray(new_value) ? new_value : [new_value];\n        } else if ($.isArray(new_value)) {\n            if (new_value.length > 0) {\n                new_value = new_value[0];\n            } else {\n                new_value = \"__null__\";\n            }\n        }\n        if (this.model.get(\"searchable\")) {\n            if ($.isArray(new_value)) {\n                var val = [];\n                _.each(new_value, v => {\n                    var d = _.findWhere(self.data2, { id: v });\n                    d && val.push(d);\n                });\n                new_value = val;\n            } else {\n                var d = _.findWhere(this.data2, { id: new_value });\n                new_value = d;\n            }\n            this.$select.select2(\"data\", new_value);\n        } else {\n            this.$select.val(new_value);\n        }\n    },\n\n    /** Get value from dom */\n    _getValue: function() {\n        var val = null;\n        if (this.model.get(\"searchable\")) {\n            var selected = this.$select.select2(\"data\");\n            if (selected) {\n                if ($.isArray(selected)) {\n                    val = [];\n                    selected.sort((a, b) => a.order - b.order);\n                    _.each(selected, v => {\n                        val.push(v.id);\n                    });\n                } else {\n                    val = selected.id;\n                }\n            }\n        } else {\n            val = this.$select.val();\n        }\n        return Utils.isEmpty(val) ? null : val;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-default.js","/** Base class for options based ui elements **/\nimport Utils from \"utils/utils\";\nimport Buttons from \"mvc/ui/ui-buttons\";\nvar Base = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                visible: true,\n                data: [],\n                id: Utils.uid(),\n                error_text: \"No options available.\",\n                wait_text: \"Please wait...\",\n                multiple: false,\n                optional: false,\n                onchange: function() {}\n            }).set(options);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n        this.on(\"change\", () => {\n            self.model.get(\"onchange\")(self.value());\n        });\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$el\n            .empty()\n            .removeClass()\n            .addClass(\"ui-options\")\n            .append((this.$message = $(\"<div/>\")))\n            .append((this.$menu = $(\"<div/>\").addClass(\"ui-options-menu\")))\n            .append((this.$options = $(this._template())));\n\n        // add select/unselect all button\n        this.all_button = null;\n        if (this.model.get(\"multiple\")) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    self.$(\"input\").prop(\"checked\", self.all_button.value() !== 0);\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                }\n            });\n            this.$menu.append(this.all_button.$el);\n        }\n\n        // finalize dom\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.model.set(\"data\", options);\n    },\n\n    _changeData: function() {\n        var self = this;\n        this.$options.empty();\n        if (this._templateOptions) {\n            this.$options.append(this._templateOptions(this.model.get(\"data\")));\n        } else {\n            _.each(this.model.get(\"data\"), option => {\n                self.$options.append(\n                    $(self._templateOption(option))\n                        .addClass(\"ui-option\")\n                        .tooltip({\n                            title: option.tooltip,\n                            placement: \"bottom\"\n                        })\n                );\n            });\n        }\n        var self = this;\n        this.$(\"input\").on(\"change\", () => {\n            self.value(self._getValue());\n            self.trigger(\"change\");\n        });\n        this._changeValue();\n        this._changeWait();\n    },\n\n    _changeVisible: function() {\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n    },\n\n    _changeWait: function() {\n        if (this.model.get(\"wait\")) {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"wait_text\"), \"info\");\n                this.$options.hide();\n                this.$menu.hide();\n            }\n        } else {\n            if (this.length() === 0) {\n                this._messageShow(this.model.get(\"error_text\"), \"danger\");\n                this.$options.hide();\n                this.$menu.hide();\n            } else {\n                this.$message.hide();\n                this.$options.css(\"display\", \"inline-block\");\n                this.$menu.show();\n            }\n        }\n    },\n\n    _changeValue: function() {\n        this._setValue(this.model.get(\"value\"));\n        if (this._getValue() === null && !this.model.get(\"multiple\") && !this.model.get(\"optional\")) {\n            this._setValue(this.first());\n        }\n        this.all_button &&\n            this.all_button.value($.isArray(this._getValue()) ? this._getValue().length : 0, this.length());\n    },\n\n    /** Return/Set current selection */\n    value: function(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        return this._getValue();\n    },\n\n    /** Return first available option */\n    first: function() {\n        var options = this.$(\"input\").first();\n        return options.length > 0 ? options.val() : null;\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Returns the number of options */\n    length: function() {\n        return this.$(\".ui-option\").length;\n    },\n\n    /** Set value to dom */\n    _setValue: function(new_value) {\n        var self = this;\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            if (new_value !== null) {\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, v => {\n                    self\n                        .$(`input[value=\"${v}\"]`)\n                        .first()\n                        .prop(\"checked\", true);\n                });\n            }\n        }\n    },\n\n    /** Return current selection */\n    _getValue: function() {\n        var selected = [];\n        this.$(\":checked\").each(function() {\n            selected.push($(this).val());\n        });\n        if (Utils.isEmpty(selected)) {\n            return null;\n        }\n        return this.model.get(\"multiple\") ? selected : selected[0];\n    },\n\n    /** Show message instead if options */\n    _messageShow: function(text, status) {\n        this.$message\n            .show()\n            .removeClass()\n            .addClass(`ui-message alert alert-${status}`)\n            .html(text);\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $(\"<div/>\").addClass(\"ui-options-list\");\n    }\n});\n\n/** Iconized **/\nvar BaseIcons = Base.extend({\n    _templateOption: function(pair) {\n        var id = Utils.uid();\n        return $(\"<div/>\")\n            .addClass(\"ui-option\")\n            .append(\n                $(\"<input/>\").attr({\n                    id: id,\n                    type: this.model.get(\"type\"),\n                    name: this.model.id,\n                    value: pair.value\n                })\n            )\n            .append(\n                $(\"<label/>\")\n                    .addClass(\"ui-options-label\")\n                    .attr(\"for\", id)\n                    .html(pair.label)\n            );\n    }\n});\n\n/** Radio button field **/\nvar Radio = {};\nRadio.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.type = \"radio\";\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Checkbox options field **/\nvar Checkbox = {};\nCheckbox.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.type = \"checkbox\";\n        options.multiple = true;\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Radio button options field styled as classic buttons **/\nvar RadioButton = {};\nRadioButton.View = Base.extend({\n    initialize: function(options) {\n        Base.prototype.initialize.call(this, options);\n    },\n\n    /** Set current value */\n    _setValue: function(new_value) {\n        if (new_value !== undefined) {\n            this.$(\"input\").prop(\"checked\", false);\n            this.$(\"label\").removeClass(\"active\");\n            this.$(`[value=\"${new_value}\"]`)\n                .prop(\"checked\", true)\n                .closest(\"label\")\n                .addClass(\"active\");\n        }\n    },\n\n    /** Template for a single option */\n    _templateOption: function(pair) {\n        var $el = $(\"<label/>\").addClass(\"btn btn-default\");\n        pair.icon &&\n            $el.append(\n                $(\"<i/>\")\n                    .addClass(\"fa\")\n                    .addClass(pair.icon)\n                    .addClass(!pair.label && \"no-padding\")\n            );\n        $el.append(\n            $(\"<input/>\").attr({\n                type: \"radio\",\n                name: this.model.id,\n                value: pair.value\n            })\n        );\n        pair.label && $el.append(pair.label);\n        return $el;\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"btn-group ui-radiobutton\")\n            .attr(\"data-toggle\", \"buttons\");\n    }\n});\n\nexport default {\n    Base: Base,\n    BaseIcons: BaseIcons,\n    Radio: Radio,\n    RadioButton: RadioButton,\n    Checkbox: Checkbox\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-options.js","// dependencies\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || \"element\";\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new Ui.Message();\n\n        // create portlet\n        this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new Ui.Select.View({ optional: options.optional });\n\n        // create insert new list element button\n        this.button = new Ui.ButtonIcon({\n            icon: \"fa fa-sign-in\",\n            tooltip: `Insert new ${this.name}`,\n            onclick: function() {\n                self.add({\n                    id: self.select.value(),\n                    name: self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$(\".ui-list-message\").append(this.message.$el);\n        this.$(\".ui-list-portlet\").append(this.portlet.$el);\n        this.$(\".ui-list-button\").append(this.button.$el);\n        this.$(\".ui-list-select\").append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != \"string\") {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id: v_id,\n                            name: v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$(\".ui-list-id\").each(function() {\n            lst.push({\n                id: $(this).prop(\"id\"),\n                name: $(this)\n                    .find(\".ui-list-name\")\n                    .html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function(options) {\n        var self = this;\n        if (this.$(`[id=\"${options.id}\"]`).length === 0) {\n            if (!Utils.isEmpty(options.id)) {\n                var $el = $(\n                    this._templateRow({\n                        id: options.id,\n                        name: options.name\n                    })\n                );\n                $el.on(\"click\", () => {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on(\"mouseover\", () => {\n                    $el.addClass(\"portlet-highlight\");\n                });\n                $el.on(\"mouseout\", () => {\n                    $el.removeClass(\"portlet-highlight\");\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({\n                    message: `Please select a valid ${this.name}.`,\n                    status: \"danger\"\n                });\n            }\n        } else {\n            this.message.update({\n                message: `This ${this.name} is already in the list.`\n            });\n        }\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        if (this.$(\".ui-list-id\").length > 0) {\n            !this.multiple && this.button.disable();\n            this.$(\".ui-list-portlet\").show();\n        } else {\n            this.button.enable();\n            this.$(\".ui-list-portlet\").hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return (\n            '<div class=\"ui-list\">' +\n            '<div class=\"ui-margin-top\">' +\n            '<span class=\"ui-list-button\"/>' +\n            '<span class=\"ui-list-select\"/>' +\n            \"</div>\" +\n            '<div class=\"ui-list-message\"/>' +\n            '<div class=\"ui-list-portlet\"/>' +\n            \"</div>\"\n        );\n    },\n\n    /** Row Template */\n    _templateRow: function(options) {\n        return `<div id=\"${\n            options.id\n        }\" class=\"ui-list-id\"><span class=\"ui-list-delete fa fa-trash\"/><span class=\"ui-list-name\">${\n            options.name\n        }</span></div>`;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-list.js","import AdminToolshed from \"admin.toolshed\";\n\nexport function App(options) {\n    new AdminToolshed.GalaxyApp(options);\n}\n\nwindow.adminToolshedApp = App;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/admin-toolshed.js","import mod_shed_list_view from \"mvc/toolshed/shed-list-view\";\nimport mod_categories_view from \"mvc/toolshed/categories-view\";\nimport mod_repositories_view from \"mvc/toolshed/repositories-view\";\nimport mod_repository_view from \"mvc/toolshed/repository-view\";\nimport mod_repoqueue_view from \"mvc/toolshed/repository-queue-view\";\nimport mod_repo_status_view from \"mvc/toolshed/repo-status-view\";\nimport mod_workflows_view from \"mvc/toolshed/workflows-view\";\nvar AdminToolshedRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"toolsheds\",\n        sheds: \"toolsheds\",\n        queue: \"queue\",\n        workflows: \"workflows\",\n        \"status/r/:repositories\": \"status\",\n        status: \"status\",\n        \"categories/s/:tool_shed\": \"categories\",\n        \"category/s/:tool_shed/c/:cateory_id\": \"repositories\",\n        \"repository/s/:tool_shed/r/:repository_id\": \"repository\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    }\n});\n\nvar GalaxyAdminToolshedApp = Backbone.View.extend({\n    app_config: {\n        known_views: [\"toolsheds\", \"queue\", \"status\", \"categories\", \"repositories\", \"repoository\"]\n    },\n\n    initialize: function() {\n        Galaxy.admintoolshedapp = this;\n        this.admin_toolshed_router = new AdminToolshedRouter();\n\n        this.admin_toolshed_router.on(\"route:queue\", () => {\n            if (Galaxy.admintoolshedapp.adminRepoQueueView) {\n                Galaxy.admintoolshedapp.adminRepoQueueView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminRepoQueueView = new mod_repoqueue_view.RepoQueueView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:toolsheds\", () => {\n            if (Galaxy.admintoolshedapp.adminShedListView) {\n                Galaxy.admintoolshedapp.adminShedListView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminShedListView = new mod_shed_list_view.ShedListView();\n            }\n        });\n        this.admin_toolshed_router.on(\"route:categories\", tool_shed => {\n            if (Galaxy.admintoolshedapp.adminShedCategoriesView) {\n                Galaxy.admintoolshedapp.adminShedCategoriesView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoriesView = new mod_categories_view.CategoryView({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repositories\", (tool_shed, category_id) => {\n            if (Galaxy.admintoolshedapp.adminShedCategoryView) {\n                Galaxy.admintoolshedapp.adminShedCategoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminShedCategoryView = new mod_repositories_view.Category({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    category_id: category_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:repository\", (tool_shed, repository_id) => {\n            if (Galaxy.admintoolshedapp.adminRepositoryView) {\n                Galaxy.admintoolshedapp.adminRepositoryView.reDraw({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepositoryView = new mod_repository_view.RepoDetails({\n                    tool_shed: tool_shed.replace(/\\//g, \"%2f\"),\n                    repository_id: repository_id\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:status\", repositories => {\n            if (Galaxy.admintoolshedapp.adminRepoStatusView) {\n                Galaxy.admintoolshedapp.adminRepoStatusView.reDraw({\n                    repositories: repositories.split(\"|\")\n                });\n            } else {\n                Galaxy.admintoolshedapp.adminRepoStatusView = new mod_repo_status_view.RepoStatus({\n                    repositories: repositories.split(\"|\")\n                });\n            }\n        });\n        this.admin_toolshed_router.on(\"route:workflows\", () => {\n            if (Galaxy.admintoolshedapp.adminWorkflowsView) {\n                Galaxy.admintoolshedapp.adminWorkflowsView.reDraw();\n            } else {\n                Galaxy.admintoolshedapp.adminWorkflowsView = new mod_workflows_view.Workflows();\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyAdminToolshedApp\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/admin.toolshed.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    defaults: {\n        tool_sheds: [\n            {\n                url: \"https://toolshed.g2.bx.psu.edu/\",\n                name: \"Galaxy Main Tool Shed\"\n            }\n        ]\n    },\n\n    initialize: function(options) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new toolshed_model.ShedsCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n    },\n\n    el: \"#center\",\n\n    render: function(options) {\n        this.options = _.defaults(this.options || {}, options, this.defaults);\n        var toolshed_list_template = this.templateToolshedList;\n        this.$el.html(\n            toolshed_list_template({\n                title: \"Configured Galaxy Tool Sheds\",\n                tool_sheds: this.model.models,\n                queue: toolshed_util.queueLength()\n            })\n        );\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.render(options);\n    },\n\n    templateToolshedList: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"list_toolsheds\">',\n            '<div class=\"form-row\">',\n            '<table class=\"grid\">',\n            \"<% _.each(tool_sheds, function(shed) { %>\",\n            '<tr class=\"libraryTitle\">',\n            \"<td>\",\n            '<div style=\"float: left; margin-left: 1px;\" class=\"menubutton split\">',\n            '<a class=\"view-info shed-selector\" href=\"#/categories/s/<%= shed.get(\"url\") %>\"><%= shed.get(\"name\") %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</table>\",\n            \"</div>\",\n            '<div style=\"clear: both\"></div>',\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    ShedListView: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/shed-list-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nimport \"libs/jquery/jquery-ui\";\nvar ToolShedCategories = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: {\n        tool_shed: \"https://toolshed.g2.bx.psu.edu/\"\n    },\n\n    initialize: function(options) {\n        var self = this;\n        var shed = options.tool_shed.replace(/\\//g, \"%2f\");\n        this.options = _.defaults(this.options || options, this.defaults);\n        this.model = new toolshed_model.Categories();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.url = `${this.model.url}?tool_shed_url=${this.options.tool_shed}`;\n        this.model.tool_shed = shed;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        this.options.categories = this.model.models;\n        this.options.queue = toolshed_util.queueLength();\n        var category_list_template = this.templateCategoryList;\n        this.$el.html(category_list_template(this.options));\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#search_box\").autocomplete({\n            source: function(request, response) {\n                var shed_url = that.model.tool_shed.replace(/%2f/g, \"/\");\n                var base_url = `${Galaxy.root}api/tool_shed/search`;\n                var params = {\n                    term: request.term,\n                    tool_shed_url: shed_url\n                };\n                $.post(base_url, params, data => {\n                    console.log(data);\n                    var result_list = toolshed_util.shedParser(data);\n                    response(result_list);\n                });\n            },\n            minLength: 3,\n            select: function(event, ui) {\n                var tsr_id = ui.item.value;\n                var api_url = `${Galaxy.root}api/tool_shed/repository`;\n                var params = {\n                    tool_shed_url: that.model.tool_shed,\n                    tsr_id: tsr_id\n                };\n                var new_route = `repository/s/${that.model.tool_shed}/r/${tsr_id}`;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            }\n        });\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.model.url = `${this.model.url}?tool_shed_url=${this.options.tool_shed}`;\n        this.initialize(options);\n    },\n\n    templateCategoryList: _.template(\n        [\n            '<style type=\"text/css\">',\n            \".ui-autocomplete { background-color: #fff; }\",\n            \"li.ui-menu-item { list-style-type: none; }\",\n            \"</style>\",\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\" style=\"layout: inline;\">Categories in <%= tool_shed.replace(/%2f/g, \"/\") %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"list_categories\">',\n            '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">',\n            '<span class=\"ui-widget\" >',\n            '<input class=\"search-box-input\" id=\"search_box\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" name=\"search\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />',\n            \"</span>\",\n            \"</div>\",\n            '<div style=\"clear: both; margin-top: 1em;\">',\n            '<table class=\"grid\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            \"<th>Name</th>\",\n            \"<th>Description</th>\",\n            \"<th>Repositories</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            \"<% _.each(categories, function(category) { %>\",\n            \"<tr>\",\n            \"<td>\",\n            '<a href=\"#/category/s/<%= tool_shed %>/c/<%= category.get(\"id\") %>\"><%= category.get(\"name\") %></a>',\n            \"</td>\",\n            '<td><%= category.get(\"description\") %></td>',\n            '<td><%= category.get(\"repositories\") %></td>',\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    CategoryView: ToolShedCategories\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/categories-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nimport \"libs/jquery/jquery-ui\";\nvar ToolShedCategoryContentsView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(params) {\n        var self = this;\n        this.model = new toolshed_model.CategoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += `?tool_shed_url=${shed}&category_id=${params.category_id}`;\n        this.model.tool_shed = shed;\n        this.model.category = params.category_id;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var category_contents_template = this.templateCategoryContents;\n        this.$el.html(\n            category_contents_template({\n                category: this.model.models[0],\n                tool_shed: this.model.tool_shed,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#search_box\").autocomplete({\n            source: function(request, response) {\n                var shed_url = that.model.tool_shed.replace(/%2f/g, \"/\");\n                var base_url = `${Galaxy.root}api/tool_shed/search`;\n                var params = {\n                    term: request.term,\n                    tool_shed_url: shed_url\n                };\n                $.post(base_url, params, data => {\n                    var result_list = toolshed_util.shedParser(data);\n                    response(result_list);\n                });\n            },\n            minLength: 3,\n            select: function(event, ui) {\n                var tsr_id = ui.item.value;\n                var new_route = `repository/s/${that.model.tool_shed}/r/${tsr_id}`;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            }\n        });\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateCategoryContents: _.template(\n        [\n            '<style type=\"text/css\">',\n            \".ui-autocomplete { background-color: #fff; }\",\n            \"li.ui-menu-item { list-style-type: none; }\",\n            \"</style>\",\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">Repositories in <%= category.get(\"name\") %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"list_repositories\">',\n            '<div id=\"standard-search\" style=\"height: 2em; margin: 1em;\">',\n            '<span class=\"ui-widget\" >',\n            '<input class=\"search-box-input\" id=\"search_box\" name=\"search\" data-shedurl=\"<%= tool_shed.replace(/%2f/g, \"/\") %>\" placeholder=\"Search repositories by name or id\" size=\"60\" type=\"text\" />',\n            \"</span>\",\n            \"</div>\",\n            '<div style=\"clear: both; margin-top: 1em;\">',\n            '<table class=\"grid\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th style=\"width: 10%;\">Owner</th>',\n            '<th style=\"width: 15%;\">Name</th>',\n            \"<th>Synopsis</th>\",\n            '<th style=\"width: 10%;\">Type</th>',\n            \"</tr>\",\n            \"</thead>\",\n            '<% _.each(category.get(\"repositories\"), function(repository) { %>',\n            \"<tr>\",\n            \"<td><%= repository.owner %></td>\",\n            \"<td>\",\n            '<div style=\"float: left; margin-left: 1px;\" class=\"menubutton split\">',\n            '<a href=\"#/repository/s/<%= tool_shed %>/r/<%= repository.id %>\"><%= repository.name %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"<td><%= repository.description %></td>\",\n            \"<td><%= repository.type %></td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    Category: ToolShedCategoryContentsView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/repositories-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport jstree from \"libs/jquery/jstree\";\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport FormView from \"mvc/form/form-view\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar ToolShedRepositoryView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(params) {\n        var self = this;\n        this.options = _.defaults(this.options || {}, this.defaults);\n        this.model = new toolshed_model.RepositoryCollection();\n        this.listenTo(this.model, \"sync\", this.render);\n        var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n        this.model.url += `?tool_shed_url=${shed}&repository_id=${params.repository_id}`;\n        this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n        this.model.tool_shed = shed;\n        this.model.category = params.repository_id;\n        this.model.fetch();\n    },\n\n    render: function(options) {\n        var repo_details_template = this.templateRepoDetails;\n        var models = this.model.models[0];\n        this.options = {\n            repository: models.get(\"repository\"),\n            tool_shed: this.model.tool_shed,\n            queue: toolshed_util.queueLength()\n        };\n        var changesets = Object.keys(this.options.repository.metadata);\n        this.options.current_changeset = this.options.current_changeset || changesets[changesets.length - 1];\n        this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n        this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n        this.options.tools = this.options.current_metadata.tools;\n        this.options.repository_dependencies_template = this.templateRepoDependencies;\n        this.options.repository_dependency_template = this.templateRepoDependency;\n        this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n        this.options.tps_template_tool_select = this.templateToolSectionSelect;\n        this.options.tps_select_options = this.templatePanelSelectOptions;\n        this.options.tool_dependencies = models.get(\"tool_dependencies\");\n        this.options.shed_tool_conf = this.templateShedToolConf({\n            stc_html: models.get(\"shed_conf\")\n        });\n        this.options.panel_section_dict = models.get(\"panel_section_dict\");\n        this.options.api_url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        this.options = _.extend(this.options, options);\n        this.$el.html(repo_details_template(this.options));\n        this.checkInstalled(this.options.current_metadata);\n        this.bindEvents();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\"#changeset\").on(\"change\", () => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            that.checkInstalled(that.options.current_metadata);\n            that.reDraw();\n        });\n        $(\"#tool_panel_section_select\").on(\"change\", () => {\n            that.tpsSelection();\n        });\n        $(\"#install_repository\").on(\"click\", ev => {\n            var form = $(\"#repository_installation\");\n            ev.preventDefault();\n            var params = {};\n            params.repositories = JSON.stringify([\n                [\n                    $(\"#install_repository\").attr(\"data-tsrid\"),\n                    $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val()\n                ]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([$(\"#install_repository\").attr(\"data-tsrid\")]);\n            params.tool_shed_url = that.model.tool_shed_url;\n            params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            var tps = that.panelSelect(params);\n            params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n            params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            params.changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var url = $(\"#repository_installation\").attr(\"action\");\n            that.prepareInstall(params, url);\n        });\n        $(\"#queue_install\").on(\"click\", ev => {\n            that.options.current_changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .text();\n            that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n            var changeset = that.options.current_changeset;\n            var repository_metadata = {};\n            _.each(Object.keys(that.options.current_metadata), key => {\n                if (!repository_metadata[key]) {\n                    repository_metadata[key] = that.options.current_metadata[key];\n                }\n            });\n            repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n            repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n            repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n            repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n            repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                .find(\"option:selected\")\n                .val();\n            repository_metadata.tool_shed_url = that.model.tool_shed_url;\n            if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                    0,\n                    repository_metadata.tool_shed_url.length - 1\n                );\n            }\n            toolshed_util.addToQueue(repository_metadata);\n            that.checkInstalled(repository_metadata);\n        });\n        $(\".tool_panel_section_picker\").on(\"change\", function() {\n            var new_value = $(this)\n                .find(\"option:selected\")\n                .val();\n            var default_tps = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n            if (new_value == default_tps) {\n                $(this).attr(\"default\", \"active\");\n            } else {\n                $(this).removeAttr(\"default\");\n            }\n        });\n        $(() => {\n            $(\"#repository_dependencies\").jstree();\n        });\n        $(\".tool_form\").on(\"click\", function() {\n            var guid = $(this).attr(\"data-guid\");\n            var clean = $(this).attr(\"data-clean\");\n            var name = $(this).attr(\"data-name\");\n            var desc = $(this).attr(\"data-desc\");\n            var tool_shed_url = that.model.tool_shed_url;\n            var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n            var changeset = $(\"#changeset\")\n                .find(\"option:selected\")\n                .val();\n            var api_url = `${Galaxy.root}api/tool_shed/tool_json`;\n            var params = {\n                guid: guid,\n                tool_shed_url: tool_shed_url,\n                tsr_id: tsr_id,\n                changeset: changeset\n            };\n            $.get(api_url, params, data => {\n                data.cls = \"ui-portlet-plain\";\n                var toolform = new FormView(data);\n                Utils.deepeach(data.inputs, input => {\n                    if (input.type) {\n                        if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                            input.type = \"hidden\";\n                            input.info = `Data input '${input.name}' (${Utils.textify(input.extensions)})`;\n                        }\n                    }\n                });\n                var modal = new Modal.View();\n                var modal_title = `<u>${name}</u> ${desc}`;\n                modal.show({\n                    closing_events: true,\n                    title: modal_title,\n                    body: toolform.$el,\n                    buttons: {\n                        Close: function() {\n                            modal.hide();\n                        }\n                    }\n                });\n            });\n        });\n    },\n\n    checkInstalled: function(metadata) {\n        var that = this;\n        var params = { name: metadata.name, owner: metadata.owner };\n        var already_installed = false;\n        var queued = that.repoQueued(metadata);\n        $.get(`${Galaxy.root}api/tool_shed_repositories`, params, data => {\n            for (var index = 0; index < data.length; index++) {\n                var repository = data[index];\n                var installed = !repository.deleted && !repository.uninstalled;\n                var changeset_match =\n                    repository.changeset_revision == metadata.changeset_revision ||\n                    repository.installed_changeset_revision == metadata.changeset_revision;\n                if (\n                    repository.name == metadata.repository.name &&\n                    repository.owner == metadata.repository.owner &&\n                    installed &&\n                    changeset_match\n                ) {\n                    already_installed = true;\n                }\n                if (already_installed) {\n                    $(\"#install_repository\").prop(\"disabled\", true);\n                    $(\"#install_repository\").val(\"This revision is already installed\");\n                } else {\n                    $(\"#install_repository\").prop(\"disabled\", false);\n                    $(\"#install_repository\").val(\"Install this revision\");\n                }\n            }\n            if (that.repoQueued(metadata) || already_installed) {\n                $(\"#queue_install\").hide();\n                $(\"#queue_install\").val(\"This revision is already in the queue\");\n            } else {\n                $(\"#queue_install\").show();\n                $(\"#queue_install\").val(\"Install this revision later\");\n            }\n        });\n    },\n\n    panelSelect: function(params) {\n        var tool_panel_section = {};\n        if ($(\"#tool_panel_section_select\").length) {\n            params.tool_panel_section_id = $(\"#tool_panel_section_select\")\n                .find(\"option:selected\")\n                .val();\n        } else {\n            params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n        }\n        $(\".tool_panel_section_picker\").each(function() {\n            var element_name = $(this).attr(\"name\");\n            var tool_guid = $(this).attr(\"data-toolguid\");\n            if (element_name === \"tool_panel_section_id\") {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this)\n                        .find(\"option:selected\")\n                        .val(),\n                    action: \"append\"\n                };\n            } else {\n                tool_panel_section[tool_guid] = {\n                    tool_panel_section: $(this).val(),\n                    action: \"create\"\n                };\n            }\n        });\n        return tool_panel_section;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    repoQueued: function(metadata) {\n        var that = this;\n        if (!localStorage.repositories) {\n            return;\n        }\n        var repository_queue = JSON.parse(localStorage.repositories);\n        var changeset = metadata.changeset_revision;\n        var queue_key = that.queueKey(metadata);\n        if (localStorage.repositories) {\n            queued_repos = JSON.parse(localStorage.repositories);\n        }\n        if (queued_repos.hasOwnProperty(queue_key)) {\n            return true;\n        }\n        return false;\n    },\n\n    queueKey: function(metadata) {\n        var shed_url = this.model.tool_shed_url;\n        // Make sure there is never a trailing slash on the shed URL.\n        if (shed_url.substr(-1) == \"/\") {\n            shed_url = shed_url.substr(0, shed_url.length - 1);\n        }\n        return `${shed_url}|${metadata.repository_id}|${metadata.changeset_revision}`;\n    },\n\n    tpsSelection: function() {\n        new_tps = $(\"#tool_panel_section_select\")\n            .find(\"option:selected\")\n            .val();\n        $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n            $(this).val(new_tps);\n        });\n    },\n\n    prepareInstall: function(params, api_url) {\n        var that = this;\n        $.post(api_url, params, data => {\n            var iri_parameters = JSON.parse(data);\n            that.doInstall(iri_parameters);\n        });\n    },\n\n    doInstall: function(params) {\n        var controller_url = `${Galaxy.root}admin_toolshed/install_repositories`;\n        var repositories = params.repositories;\n        var new_route = `status/r/${repositories.join(\"|\")}`;\n        $.post(controller_url, params, data => {\n            console.log(\"Initializing repository installation succeeded\");\n        });\n        Backbone.history.navigate(new_route, {\n            trigger: true,\n            replace: true\n        });\n    },\n\n    templateRepoDetails: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n            '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n            '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n            '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">Changeset</div>',\n            '<div class=\"toolFormBody changeset\">',\n            '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n            \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n            '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n            '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n            \"<% }); %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n            '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n            \"</div>\",\n            \"</div>\",\n            \"<%= shed_tool_conf %>\",\n            \"<% if (current_metadata.has_repository_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_repository_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n            '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n            \"</p>\",\n            \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n            '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n            \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n            \"</a>\",\n            \"</div>\",\n            \"<%= repository_dependencies_template(current_metadata) %>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n            '<div class=\"toolFormTitle\">Tool dependencies</div>',\n            '<div class=\"toolFormBody\">',\n            '<p id=\"install_resolver_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n            '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n            \"</p>\",\n            '<p id=\"install_tool_dependencies_checkbox\">',\n            '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n            '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n            \"</p>\",\n            '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n            '<div class=\"expandLink\">',\n            '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n            \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n            \"</a>\",\n            \"</div>\",\n            '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Version</th>\",\n            \"<th>Type</th>\",\n            \"</tr>\",\n            \"</thead>\",\n            '<tbody id=\"tool_deps\">',\n            \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n            '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n            '<td style=\"padding-left: 40px;\">',\n            \"<%= dependency.name %></td>\",\n            \"<td><%= dependency.version %></td>\",\n            \"<td><%= dependency.type %></td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n            '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tables container-table\" id=\"tools_toggle\">',\n            '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            \"<thead>\",\n            '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n            '<th style=\"padding-left: 40px;\">Name</th>',\n            \"<th>Description</th>\",\n            \"<th>Version</th>\",\n            \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n            \"</thead>\",\n            '<tbody id=\"tools_in_repo\">',\n            \"<% _.each(current_metadata.tools, function(tool) { %>\",\n            '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n            '<td style=\"padding-left: 40px;\">',\n            '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n            '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n            \"</div>\",\n            \"</td>\",\n            \"<td><%= tool.description %></td>\",\n            '<td style=\"width: 15%\"><%= tool.version %></td>',\n            '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n            \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            \"</div>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</form>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependencies: _.template(\n        [\n            '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n            '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n            \"<ul>\",\n            \"<li>Repository installation requires the following\",\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"<% } %>\",\n            \"</li>\",\n            \"</ul>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateRepoDependency: _.template(\n        [\n            '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n            \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n            \"<% if (has_repository_dependencies) { %>\",\n            '<ul class=\"child_dependencies\">',\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n            \"<%= repository_dependency_template(dependency) %>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"<% } %>\",\n            \"</li>\"\n        ].join(\"\")\n    ),\n\n    templateShedToolConf: _.template(\n        [\n            '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"form-row\">',\n            \"<%= stc_html %>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolDependency: _.template(\n        [\n            \"<% if (has_repository_dependencies) { %>\",\n            \"<% _.each(repository_dependencies, function(dependency) { %>\",\n            \"<% if (dependency.includes_tool_dependencies) { %>\",\n            \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n            \"<%= tool_dependency_template(dependency) %>\",\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"<% } %>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionCreate: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"form-row\" id=\"new_tps\">',\n            '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Add a new tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateGlobalSectionSelect: _.template(\n        [\n            '<div id=\"tool_panel_section\">',\n            '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n            '<div class=\"toolFormBody\">',\n            '<div class=\"tab-pane\" id=\"select_tps\">',\n            '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"Select an existing tool panel section to contain the installed tools (optional).\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionCreate: _.template(\n        [\n            '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n            '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n            '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templateToolSectionSelect: _.template(\n        [\n            '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n            '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n            \"<%= tps_select_options({sections: tps.sections}) %>\",\n            \"</select>\",\n            '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n            '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n            \"</div>\"\n        ].join(\"\")\n    ),\n\n    templatePanelSelectOptions: _.template(\n        [\n            \"<% _.each(sections, function(section) { %>\",\n            '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n            \"<% }); %>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoDetails: ToolShedRepositoryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/repository-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function(options) {\n        var that = this;\n        this.model = new toolshed_model.RepoQueue();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function(options) {\n        var that = this;\n        var repo_queue_template = that.templateRepoQueue;\n        var repositories = that.model.models;\n        that.$el.html(\n            repo_queue_template({\n                title: \"Repository Installation Queue\",\n                repositories: repositories,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\".install_one\").on(\"click\", function() {\n            var repository_metadata = that.loadFromQueue($(this).attr(\"data-repokey\"));\n            that.installFromQueue(repository_metadata, $(this).attr(\"data-repokey\"));\n        });\n        $(\".remove_one\").on(\"click\", function() {\n            var queue_key = $(this).attr(\"data-repokey\");\n            var repo_queue = JSON.parse(localStorage.repositories);\n            if (repo_queue.hasOwnProperty(queue_key)) {\n                var repository_id = repo_queue[queue_key].repository.id;\n                delete repo_queue[queue_key];\n                $(`#queued_repository_${repository_id}`).remove();\n            }\n            localStorage.repositories = JSON.stringify(repo_queue);\n        });\n        $(\"#clear_queue\").on(\"click\", () => {\n            localStorage.repositories = \"{}\";\n        });\n        $(\"#from_workflow\").on(\"click\", () => {\n            Backbone.history.navigate(\"workflows\", {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    installFromQueue: function(repository_metadata, queue_key) {\n        var that = this;\n        var params = Object();\n        params.install_tool_dependencies = repository_metadata.install_tool_dependencies;\n        params.install_repository_dependencies = repository_metadata.install_repository_dependencies;\n        params.install_resolver_dependencies = repository_metadata.install_resolver_dependencies;\n        params.tool_panel_section = repository_metadata.tool_panel_section;\n        params.shed_tool_conf = repository_metadata.shed_tool_conf;\n        params.repositories = JSON.stringify([\n            [repository_metadata.repository.id, repository_metadata.changeset_revision]\n        ]);\n        params.tool_shed_repository_ids = JSON.stringify([repository_metadata.repository.id]);\n        params.tool_shed_url = queue_key.split(\"|\")[0];\n        params.changeset = repository_metadata.changeset_revision;\n        var url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        $(`#queued_repository_${repository_metadata.repository.id}`).remove();\n        if (localStorage.repositories) {\n            if (queue_key === undefined) {\n                queue_key = toolshed_util.queueKey(repository_metadata);\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                delete repository_queue[queue_key];\n                localStorage.repositories = JSON.stringify(repository_queue);\n            }\n        }\n\n        $.post(url, params, data => {\n            var iri_params = JSON.parse(data);\n            var repositories = iri_params.repositories;\n            var new_route = `status/r/${repositories.join(\"|\")}`;\n            $.post(`${Galaxy.root}admin_toolshed/install_repositories`, iri_params, data => {\n                console.log(\"Initializing repository installation succeeded\");\n            });\n            Backbone.history.navigate(new_route, {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    loadFromQueue: function(queue_key) {\n        var repository_queue = JSON.parse(localStorage.repositories);\n        if (repository_queue.hasOwnProperty(queue_key)) {\n            return repository_queue[queue_key];\n        }\n        return undefined;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n        this.model.fetch();\n        this.render(options);\n    },\n\n    templateRepoQueue: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n            '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th class=\"datasetRow\">Name</th>',\n            '<th class=\"datasetRow\">Owner</th>',\n            '<th class=\"datasetRow\">Revision</th>',\n            '<th class=\"datasetRow\">ToolShed</th>',\n            '<th class=\"datasetRow\">Install</th>',\n            '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n            \"</tr>\",\n            \"</thead>\",\n            \"<tbody>\",\n            \"<% _.each(repositories, function(repository) { %>\",\n            '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n            \"</td>\",\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoQueueView: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/repository-queue-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar ToolShedRepoStatusView = Backbone.View.extend({\n    el: \"#center\",\n\n    initialize: function(options) {\n        var self = this;\n        this.options = _.defaults(this.options || [{}], options, this.defaults);\n        this.model = new toolshed_model.RepoStatus();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.url += `?repositories=${this.options.repositories.join(\"|\")}`;\n        this.model.fetch();\n        this.timer = setInterval(\n            self => {\n                var terminal_states = [\"installed\", \"error\"];\n                var all_done = true;\n                _.some(self.model.models, repository => {\n                    repo_id = repository.get(\"id\");\n                    var repo_status = repository.get(\"status\").toLowerCase();\n                    if (terminal_states.indexOf(repo_status) === -1) {\n                        all_done = false;\n                        return true;\n                    }\n                });\n                if (all_done) {\n                    clearInterval(self.timer);\n                } else {\n                    self.model.fetch();\n                }\n            },\n            2000,\n            this\n        );\n    },\n\n    close: function() {\n        clearInterval(this.timer);\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        var repo_status_template = this.templateRepoStatus;\n        this.$el.html(\n            repo_status_template({\n                title: \"Repository Status\",\n                repositories: this.model.models,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        this.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateRepoStatus: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<style type=\"text/css\">',\n            \".state-color-new,\",\n            \".state-color-deactivated,\",\n            \".state-color-uninstalled { border-color:#bfbfbf; background:#eee }\",\n            \".state-color-cloning,\",\n            \".state-color-setting-tool-versions,\",\n            \".state-color-installing-repository-dependencies,\",\n            \".state-color-installing-tool-dependencies,\",\n            \".state-color-loading-proprietary-datatypes { border-color:#AAAA66; background:#FFFFCC }\",\n            \".state-color-installed { border-color:#20b520; background:#b0f1b0 }\",\n            \".state-color-error { border-color:#dd1b15; background:#f9c7c5 }\",\n            \"</style>\",\n            '<table id=\"grid-table\" class=\"grid\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th id=\"null-header\">Name<span class=\"sort-arrow\"></span></th>',\n            '<th id=\"null-header\">Description<span class=\"sort-arrow\"></span></th>',\n            '<th id=\"null-header\">Owner<span class=\"sort-arrow\"></span></th>',\n            '<th id=\"null-header\">Revision<span class=\"sort-arrow\"></span></th>',\n            '<th id=\"null-header\">Installation Status<span class=\"sort-arrow\"></span></th>',\n            \"</tr>\",\n            \"</thead>\",\n            '<tbody id=\"grid-table-body\">',\n            \"<% _.each(repositories, function(repository) { %>\",\n            \"<tr>\",\n            \"<td>\",\n            '<div id=\"\" class=\"\">',\n            '<label id=\"repo-name-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">',\n            '<%= repository.get(\"name\") %>',\n            \"</label>\",\n            \"</div>\",\n            \"</td>\",\n            \"<td>\",\n            '<div id=\"\" class=\"\">',\n            '<label id=\"repo-desc-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">',\n            '<%= repository.get(\"description\") %>',\n            \"</label>\",\n            \"</div>\",\n            \"</td>\",\n            \"<td>\",\n            '<div id=\"\" class=\"\">',\n            '<label id=\"repo-user-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">',\n            '<%= repository.get(\"owner\") %>',\n            \"</label>\",\n            \"</div>\",\n            \"</td>\",\n            \"<td>\",\n            '<div id=\"\" class=\"\">',\n            '<label id=\"repo-changeset-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">',\n            '<%= repository.get(\"changeset_revision\") %>',\n            \"</label>\",\n            \"</div>\",\n            \"</td>\",\n            \"<td>\",\n            '<div id=\"\" class=\"\">',\n            '<label id=\"RepositoryStatus-<%= repository.get(\"id\") %>\" for=\"<%= repository.get(\"id\") %>\">',\n            '<div class=\"repo-status count-box state-color-<%= repository.get(\"status\").toLowerCase().replace(/ /g, \"-\") %>\" id=\"RepositoryStatus-<%= repository.get(\"id\") %>\">',\n            '<%= repository.get(\"status\") %>',\n            \"</div>\",\n            \"</label>\",\n            \"</div>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            '<tfoot id=\"grid-table-footer\"></tfoot>',\n            \"</table>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoStatus: ToolShedRepoStatusView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/repo-status-view.js","import toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function(options) {\n        var that = this;\n        this.model = new toolshed_model.WorkflowTools();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function(options) {\n        var that = this;\n        var workflows_missing_tools = that.templateWorkflows;\n        var workflows = that.model.models;\n        that.$el.html(\n            workflows_missing_tools({\n                title: \"Workflows Missing Tools\",\n                workflows: workflows,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        var repository_id;\n        $(\".show_wf_repo\").on(\"click\", function() {\n            var tool_ids = $(this).attr(\"data-toolids\");\n            var toolshed = $(this).attr(\"data-shed\");\n            var api_url = `${Galaxy.root}api/tool_shed/repository`;\n            var params = { tool_ids: tool_ids };\n            $.get(api_url, params, data => {\n                repository_id = data.repository.id;\n                var new_route = `repository/s/${toolshed.replace(/:/g, \"%3a\").replace(/\\//g, \"%2f\")}/r/${\n                    data.repository.id\n                }`;\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        });\n        $(\".queue_wf_repo\").on(\"click\", function() {\n            var elem = $(this);\n            var tool_ids = elem.attr(\"data-toolids\");\n            var toolshed = elem.attr(\"data-shed\");\n            var api_url = `${Galaxy.root}api/tool_shed/repository`;\n            var params = { tool_ids: tool_ids };\n            $.get(api_url, params, data => {\n                repository_id = data.repository.id;\n                params = {\n                    tool_shed_url: toolshed,\n                    repository_id: repository_id\n                };\n                $.get(api_url, params, data => {\n                    var changesets = Object.keys(data.repository.metadata);\n                    var current_changeset = changesets[0];\n                    var current_metadata = data.repository.metadata[current_changeset];\n                    current_metadata.tool_shed_url = toolshed;\n                    toolshed_util.addToQueue(current_metadata);\n                    elem.remove();\n                });\n            });\n        });\n        $(\"#from_workflow\").on(\"click\", that.loadWorkflows);\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n    },\n\n    templateWorkflows: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<style type=\"text/css\">',\n            \".workflow_names, .workflow_tools { list-style-type: none; } ul.workflow_tools, ul.workflow_names {  padding-left: 0px; }\",\n            \"</style>\",\n            '<table id=\"workflows_missing_tools\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th class=\"datasetRow\">Workflows</th>',\n            '<th class=\"datasetRow\">Tool IDs</th>',\n            '<th class=\"datasetRow\">Shed</th>',\n            '<th class=\"datasetRow\">Name</th>',\n            '<th class=\"datasetRow\">Owner</th>',\n            '<th class=\"datasetRow\">Actions</th>',\n            \"</tr>\",\n            \"</thead>\",\n            \"<tbody>\",\n            \"<% _.each(workflows, function(workflow) { %>\",\n            \"<tr>\",\n            '<td class=\"datasetRow\">',\n            '<ul class=\"workflow_names\">',\n            '<% _.each(workflow.get(\"workflows\"), function(name) { %>',\n            '<li class=\"workflow_names\"><%= name %></li>',\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</td>\",\n            '<td class=\"datasetRow\">',\n            '<ul class=\"workflow_tools\">',\n            '<% _.each(workflow.get(\"tools\"), function(tool) { %>',\n            '<li class=\"workflow_tools\"><%= tool %></li>',\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</td>\",\n            '<td class=\"datasetRow\"><%= workflow.get(\"shed\") %></td>',\n            '<td class=\"datasetRow\"><%= workflow.get(\"repository\") %></td>',\n            '<td class=\"datasetRow\"><%= workflow.get(\"owner\") %></td>',\n            '<td class=\"datasetRow\">',\n            '<ul class=\"workflow_tools\">',\n            '<li class=\"workflow_tools\">',\n            '<input type=\"button\" class=\"show_wf_repo btn btn-primary\" data-shed=\"<%= workflow.get(\"shed\") %>\" data-owner=\"<%= workflow.get(\"owner\") %>\" data-repo=\"<%= workflow.get(\"repository\") %>\" data-toolids=\"<%= workflow.get(\"tools\").join(\",\") %>\" value=\"Show Repository\" /></li>',\n            \"</ul>\",\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    Workflows: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/toolshed/workflows-view.js","/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\nimport Utils from \"utils/utils\";\nimport Select from \"mvc/ui/ui-select-default\";\nimport Slider from \"mvc/ui/ui-slider\";\nimport Options from \"mvc/ui/ui-options\";\nimport Drilldown from \"mvc/ui/ui-drilldown\";\nimport Buttons from \"mvc/ui/ui-buttons\";\nimport Modal from \"mvc/ui/ui-modal\";\n/** Label wrapper */\nvar Label = Backbone.View.extend({\n    tagName: \"label\",\n    initialize: function(options) {\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.tagName = options.tagName || this.tagName;\n        this.setElement($(`<${this.tagName}/>`));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    title: function(new_title) {\n        this.model.set(\"title\", new_title);\n    },\n    value: function() {\n        return this.model.get(\"title\");\n    },\n    render: function() {\n        this.$el\n            .removeClass()\n            .addClass(\"ui-label\")\n            .addClass(this.model.get(\"cls\"))\n            .html(this.model.get(\"title\"));\n        return this;\n    }\n});\n\n/** Displays messages used e.g. in the tool form */\nvar Message = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                message: null,\n                status: \"info\",\n                cls: \"\",\n                persistent: false,\n                fade: true\n            }).set(options);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    update: function(options) {\n        this.model.set(options);\n    },\n    render: function() {\n        this.$el\n            .removeClass()\n            .addClass(\"ui-message\")\n            .addClass(this.model.get(\"cls\"));\n        var status = this.model.get(\"status\");\n        if (this.model.get(\"large\")) {\n            this.$el.addClass(\n                `${(status == \"success\" && \"done\") || (status == \"danger\" && \"error\") || status}messagelarge`\n            );\n        } else {\n            this.$el.addClass(\"alert\").addClass(`alert-${status}`);\n        }\n        if (this.model.get(\"message\")) {\n            this.$el.html(this.messageForDisplay());\n            this.$el[this.model.get(\"fade\") ? \"fadeIn\" : \"show\"]();\n            this.timeout && window.clearTimeout(this.timeout);\n            if (!this.model.get(\"persistent\")) {\n                var self = this;\n                this.timeout = window.setTimeout(() => {\n                    self.model.set(\"message\", \"\");\n                }, 3000);\n            }\n        } else {\n            this.$el.fadeOut();\n        }\n        return this;\n    },\n    messageForDisplay: function() {\n        return _.escape(this.model.get(\"message\"));\n    }\n});\n\nvar UnescapedMessage = Message.extend({\n    messageForDisplay: function() {\n        return this.model.get(\"message\");\n    }\n});\n\n/** Renders an input element used e.g. in the tool form */\nvar Input = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                type: \"text\",\n                placeholder: \"\",\n                disabled: false,\n                readonly: false,\n                visible: true,\n                cls: \"\",\n                area: false,\n                color: null,\n                style: null\n            }).set(options);\n        this.tagName = this.model.get(\"area\") ? \"textarea\" : \"input\";\n        this.setElement($(`<${this.tagName}/>`));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    events: {\n        input: \"_onchange\"\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", typeof new_val === \"string\" ? new_val : \"\");\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        var self = this;\n        this.$el\n            .removeClass()\n            .addClass(`ui-${this.tagName}`)\n            .addClass(this.model.get(\"cls\"))\n            .addClass(this.model.get(\"style\"))\n            .attr(\"id\", this.model.id)\n            .attr(\"type\", this.model.get(\"type\"))\n            .attr(\"placeholder\", this.model.get(\"placeholder\"))\n            .css(\"color\", this.model.get(\"color\") || \"\")\n            .css(\"border-color\", this.model.get(\"color\") || \"\");\n        var datalist = this.model.get(\"datalist\");\n        if ($.isArray(datalist) && datalist.length > 0) {\n            this.$el.autocomplete({\n                source: function(request, response) {\n                    response(self.model.get(\"datalist\"));\n                },\n                change: function() {\n                    self._onchange();\n                }\n            });\n        }\n        if (this.model.get(\"value\") !== this.$el.val()) {\n            this.$el.val(this.model.get(\"value\"));\n        }\n        _.each([\"readonly\", \"disabled\"], attr_name => {\n            self.model.get(attr_name) ? self.$el.attr(attr_name, true) : self.$el.removeAttr(attr_name);\n        });\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        return this;\n    },\n    _onchange: function() {\n        this.value(this.$el.val());\n        this.model.get(\"onchange\") && this.model.get(\"onchange\")(this.model.get(\"value\"));\n    }\n});\n\n/** Creates a hidden element input field used e.g. in the tool form */\nvar Hidden = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$info = $(\"<div/>\")))\n                .append((this.$hidden = $(\"<div/>\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        this.$el.attr(\"id\", this.model.id);\n        this.$hidden.val(this.model.get(\"value\"));\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        return this;\n    }\n});\n\n/** Creates a upload element input field */\nvar Upload = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$info = $(\"<div/>\")))\n                .append(\n                    (this.$file = $(\"<input/>\")\n                        .attr(\"type\", \"file\")\n                        .addClass(\"ui-margin-bottom\"))\n                )\n                .append(\n                    (this.$text = $(\"<textarea/>\")\n                        .addClass(\"ui-textarea\")\n                        .attr(\"disabled\", true))\n                )\n                .append((this.$wait = $(\"<i/>\").addClass(\"fa fa-spinner fa-spin\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.$file.on(\"change\", e => {\n            self._readFile(e);\n        });\n        this.render();\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        this.$el.attr(\"id\", this.model.id);\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        this.model.get(\"value\") ? this.$text.text(this.model.get(\"value\")).show() : this.$text.hide();\n        this.model.get(\"wait\") ? this.$wait.show() : this.$wait.hide();\n        return this;\n    },\n    _readFile: function(e) {\n        var self = this;\n        var file = e.target.files && e.target.files[0];\n        if (file) {\n            var reader = new FileReader();\n            reader.onload = function() {\n                self.model.set({ wait: false, value: this.result });\n            };\n            this.model.set({ wait: true, value: null });\n            reader.readAsText(file);\n        }\n    }\n});\n\nexport default {\n    Button: Buttons.ButtonDefault,\n    ButtonIcon: Buttons.ButtonIcon,\n    ButtonCheck: Buttons.ButtonCheck,\n    ButtonMenu: Buttons.ButtonMenu,\n    ButtonLink: Buttons.ButtonLink,\n    Input: Input,\n    Label: Label,\n    Message: Message,\n    UnescapedMessage: UnescapedMessage,\n    Upload: Upload,\n    Modal: Modal,\n    RadioButton: Options.RadioButton,\n    Checkbox: Options.Checkbox,\n    Radio: Options.Radio,\n    Select: Select,\n    Hidden: Hidden,\n    Slider: Slider,\n    Drilldown: Drilldown\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-misc.js","/** This class creates a ui table element. */\nimport Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.options = Utils.merge(options, {\n            content: \"No content available.\",\n            onchange: null,\n            ondblclick: null,\n            onconfirm: null,\n            cls: \"ui-table\",\n            selectable: true,\n            cls_tr: \"\"\n        });\n        this.setElement(this._template());\n        this.$thead = this.$(\"thead\");\n        this.$tbody = this.$(\"tbody\");\n        this.$tmessage = this.$(\"tmessage\");\n        this.row = this._row();\n        this.row_count = 0;\n    },\n\n    events: {\n        click: \"_onclick\",\n        dblclick: \"_ondblclick\"\n    },\n\n    /** Add cell to header row */\n    addHeader: function($el) {\n        this.row.append($(\"<th/>\").append($el));\n    },\n\n    /** Append header row to table */\n    appendHeader: function() {\n        this.$thead.append(this.row);\n        this.row = $(\"<tr/>\");\n    },\n\n    /** Add cell to row */\n    add: function($el, width, align) {\n        var wrapper = $(\"<td/>\");\n        if (width) {\n            wrapper.css(\"width\", width);\n        }\n        if (align) {\n            wrapper.css(\"text-align\", align);\n        }\n        this.row.append(wrapper.append($el));\n    },\n\n    /** Append row to table */\n    append: function(id, fade) {\n        this._commit(id, fade, false);\n    },\n\n    /** Prepend row to table */\n    prepend: function(id, fade) {\n        this._commit(id, fade, true);\n    },\n\n    /** Helper to get row element */\n    get: function(id) {\n        return this.$(`#${id}`);\n    },\n\n    /** Delete row by id */\n    del: function(id) {\n        var item = this.$tbody.find(`#${id}`);\n        if (item.length > 0) {\n            item.remove();\n            this.row_count--;\n            this._refresh();\n        }\n    },\n\n    /** Delete all rows */\n    delAll: function() {\n        this.$tbody.empty();\n        this.row_count = 0;\n        this._refresh();\n    },\n\n    /** Set a value i.e. selects/highlights a particular row by id */\n    value: function(new_value) {\n        if (this.options.selectable) {\n            this.before = this.$tbody.find(\".current\").attr(\"id\");\n            if (new_value !== undefined) {\n                this.$tbody.find(\"tr\").removeClass(\"current\");\n                if (new_value) {\n                    this.$tbody.find(`#${new_value}`).addClass(\"current\");\n                }\n            }\n            var after = this.$tbody.find(\".current\").attr(\"id\");\n            if (after === undefined) {\n                return null;\n            } else {\n                if (after != this.before && this.options.onchange) {\n                    this.options.onchange(new_value);\n                }\n                return after;\n            }\n        }\n    },\n\n    /** Return the number of rows */\n    size: function() {\n        return this.$tbody.find(\"tr\").length;\n    },\n\n    /** Helper to append rows */\n    _commit: function(id, fade, prepend) {\n        this.del(id);\n        this.row.attr(\"id\", id);\n        if (prepend) {\n            this.$tbody.prepend(this.row);\n        } else {\n            this.$tbody.append(this.row);\n        }\n        if (fade) {\n            this.row.hide();\n            this.row.fadeIn();\n        }\n        this.row = this._row();\n        this.row_count++;\n        this._refresh();\n    },\n\n    /** Helper to create new row */\n    _row: function() {\n        return $(`<tr class=\"${this.options.cls_tr}\"></tr>`);\n    },\n\n    /** Handles onclick events */\n    _onclick: function(e) {\n        var old_value = this.value();\n        var new_value = $(e.target)\n            .closest(\"tr\")\n            .attr(\"id\");\n        if (new_value != \"\") {\n            if (new_value && old_value != new_value) {\n                if (this.options.onconfirm) {\n                    this.options.onconfirm(new_value);\n                } else {\n                    this.value(new_value);\n                }\n            }\n        }\n    },\n\n    /** Handles ondblclick events */\n    _ondblclick: function(e) {\n        var value = this.value();\n        if (value && this.options.ondblclick) {\n            this.options.ondblclick(value);\n        }\n    },\n\n    /** Refresh helper */\n    _refresh: function() {\n        if (this.row_count == 0) {\n            this.$tmessage.show();\n        } else {\n            this.$tmessage.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return `<div><table class=\"${this.options.cls}\"><thead/><tbody/></table><tmessage>${\n            this.options.content\n        }</tmessage><div>`;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-table.js","/* This class maps the form dom to an api compatible javascript dictionary. */\nimport Utils from \"utils/utils\";\nvar Manager = Backbone.Model.extend({\n    initialize: function(app) {\n        this.app = app;\n    },\n\n    /** Creates a checksum. */\n    checksum: function() {\n        var sum = \"\";\n        var self = this;\n        this.app.section.$el.find(\".section-row\").each(function() {\n            var id = $(this).attr(\"id\");\n            var field = self.app.field_list[id];\n            if (field) {\n                sum += `${id}:${JSON.stringify(field.value && field.value())}:${field.collapsed};`;\n            }\n        });\n        return sum;\n    },\n\n    /** Convert dom into a dictionary of flat id/value pairs used e.g. on job submission. */\n    create: function() {\n        var self = this;\n\n        // get raw dictionary from dom\n        var dict = {};\n        this._iterate(this.app.section.$el, dict);\n\n        // add to result dictionary, label elements\n        var result_dict = {};\n        this.flat_dict = {};\n        function add(flat_id, input_id, input_value) {\n            self.flat_dict[flat_id] = input_id;\n            result_dict[flat_id] = input_value;\n            self.app.element_list[input_id] && self.app.element_list[input_id].$el.attr(\"tour_id\", flat_id);\n        }\n        // converter between raw dictionary and job dictionary\n        function convert(identifier, head) {\n            for (var index in head) {\n                var node = head[index];\n                if (node.input) {\n                    var input = node.input;\n                    var flat_id = identifier;\n                    if (identifier != \"\") {\n                        flat_id += \"|\";\n                    }\n                    flat_id += input.name;\n                    switch (input.type) {\n                        case \"repeat\":\n                            var section_label = \"section-\";\n                            var block_indices = [];\n                            var block_prefix = null;\n                            for (var block_label in node) {\n                                var pos = block_label.indexOf(section_label);\n                                if (pos != -1) {\n                                    pos += section_label.length;\n                                    block_indices.push(parseInt(block_label.substr(pos)));\n                                    if (!block_prefix) {\n                                        block_prefix = block_label.substr(0, pos);\n                                    }\n                                }\n                            }\n                            block_indices.sort((a, b) => a - b);\n                            var index = 0;\n                            for (var i in block_indices) {\n                                convert(`${flat_id}_${index++}`, node[block_prefix + block_indices[i]]);\n                            }\n                            break;\n                        case \"conditional\":\n                            var value = self.app.field_list[input.id].value();\n                            add(`${flat_id}|${input.test_param.name}`, input.id, value);\n                            var selectedCase = matchCase(input, value);\n                            if (selectedCase != -1) {\n                                convert(flat_id, head[`${input.id}-section-${selectedCase}`]);\n                            }\n                            break;\n                        case \"section\":\n                            convert((!input.flat && flat_id) || \"\", node);\n                            break;\n                        default:\n                            var field = self.app.field_list[input.id];\n                            if (field && field.value) {\n                                var value = field.value();\n                                if (input.ignore === undefined || input.ignore != value) {\n                                    if (field.collapsed && input.collapsible_value) {\n                                        value = input.collapsible_value;\n                                    }\n                                    add(flat_id, input.id, value);\n                                    if (input.payload) {\n                                        for (var p_id in input.payload) {\n                                            add(p_id, input.id, input.payload[p_id]);\n                                        }\n                                    }\n                                }\n                            }\n                    }\n                }\n            }\n        }\n        convert(\"\", dict);\n        return result_dict;\n    },\n\n    /** Matches flat ids to corresponding input element\n     * @param{string} flat_id - Flat input id to be looked up.\n     */\n    match: function(flat_id) {\n        return this.flat_dict && this.flat_dict[flat_id];\n    },\n\n    /** Match conditional values to selected cases\n     */\n    matchCase: function(input, value) {\n        return matchCase(input, value);\n    },\n\n    /** Matches a new tool model to the current input elements e.g. used to update dynamic options\n     */\n    matchModel: function(model, callback) {\n        var self = this;\n        visitInputs(model.inputs, (input, name) => {\n            self.flat_dict[name] && callback(input, self.flat_dict[name]);\n        });\n    },\n\n    /** Matches identifier from api response to input elements e.g. used to display validation errors\n     */\n    matchResponse: function(response) {\n        var result = {};\n        var self = this;\n        function search(id, head) {\n            if (typeof head === \"string\") {\n                var input_id = self.flat_dict[id];\n                input_id && (result[input_id] = head);\n            } else {\n                for (var i in head) {\n                    var new_id = i;\n                    if (id !== \"\") {\n                        var separator = \"|\";\n                        if (head instanceof Array) {\n                            separator = \"_\";\n                        }\n                        new_id = id + separator + new_id;\n                    }\n                    search(new_id, head[i]);\n                }\n            }\n        }\n        search(\"\", response);\n        return result;\n    },\n\n    /** Map dom tree to dictionary tree with input elements.\n     */\n    _iterate: function(parent, dict) {\n        var self = this;\n        var children = $(parent).children();\n        children.each(function() {\n            var child = this;\n            var id = $(child).attr(\"id\");\n            if ($(child).hasClass(\"section-row\")) {\n                var input = self.app.input_list[id];\n                dict[id] = (input && { input: input }) || {};\n                self._iterate(child, dict[id]);\n            } else {\n                self._iterate(child, dict);\n            }\n        });\n    }\n});\n\n/** Match conditional values to selected cases\n * @param{dict}   input     - Definition of conditional input parameter\n * @param{dict}   value     - Current value\n */\nvar matchCase = (input, value) => {\n    if (input.test_param.type == \"boolean\") {\n        if (value == \"true\") {\n            value = input.test_param.truevalue || \"true\";\n        } else {\n            value = input.test_param.falsevalue || \"false\";\n        }\n    }\n    for (var i in input.cases) {\n        if (input.cases[i].value == value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/** Visits tool inputs\n * @param{dict}   inputs    - Nested dictionary of input elements\n * @param{dict}   callback  - Called with the mapped dictionary object and corresponding model node\n */\nvar visitInputs = (inputs, callback, prefix, context) => {\n    context = $.extend(true, {}, context);\n    _.each(inputs, input => {\n        if (input && input.type && input.name) {\n            context[input.name] = input;\n        }\n    });\n    for (var key in inputs) {\n        var node = inputs[key];\n        node.name = node.name || key;\n        var name = prefix ? `${prefix}|${node.name}` : node.name;\n        switch (node.type) {\n            case \"repeat\":\n                _.each(node.cache, (cache, j) => {\n                    visitInputs(cache, callback, `${name}_${j}`, context);\n                });\n                break;\n            case \"conditional\":\n                if (node.test_param) {\n                    callback(node.test_param, `${name}|${node.test_param.name}`, context);\n                    var selectedCase = matchCase(node, node.test_param.value);\n                    if (selectedCase != -1) {\n                        visitInputs(node.cases[selectedCase].inputs, callback, name, context);\n                    } else {\n                        Galaxy.emit.debug(`form-data::visitInputs() - Invalid case for ${name}.`);\n                    }\n                } else {\n                    Galaxy.emit.debug(`form-data::visitInputs() - Conditional test parameter missing for ${name}.`);\n                }\n                break;\n            case \"section\":\n                visitInputs(node.inputs, callback, name, context);\n                break;\n            default:\n                callback(node, name, context);\n        }\n    }\n};\n\nexport default {\n    Manager: Manager,\n    visitInputs: visitInputs\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-data.js","import Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                min: null,\n                max: null,\n                step: null,\n                precise: false,\n                split: 10000,\n                value: null,\n                onchange: function() {}\n            }).set(options);\n\n        // create new element\n        this.setElement(this._template());\n        this.$el.attr(\"id\", this.model.id);\n        this.$text = this.$(\".ui-form-slider-text\");\n        this.$slider = this.$(\".ui-form-slider-element\");\n\n        // add text field event\n        var pressed = [];\n        this.$text\n            .on(\"change\", function() {\n                self.value($(this).val());\n            })\n            .on(\"keyup\", e => {\n                pressed[e.which] = false;\n            })\n            .on(\"keydown\", function(e) {\n                var v = e.which;\n                pressed[v] = true;\n                if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                    self.value(\"$\");\n                    event.preventDefault();\n                } else if (\n                    !(\n                        v == 8 ||\n                        v == 9 ||\n                        v == 13 ||\n                        v == 37 ||\n                        v == 39 ||\n                        (v >= 48 && v <= 57 && !pressed[16]) ||\n                        (v >= 96 && v <= 105) ||\n                        ((v == 190 || v == 110) &&\n                            $(this)\n                                .val()\n                                .indexOf(\".\") == -1 &&\n                            self.model.get(\"precise\")) ||\n                        ((v == 189 || v == 109) &&\n                            $(this)\n                                .val()\n                                .indexOf(\"-\") == -1) ||\n                        self._isParameter($(this).val()) ||\n                        pressed[91] ||\n                        pressed[17]\n                    )\n                ) {\n                    event.preventDefault();\n                }\n            });\n\n        // build slider, cannot be rebuild in render\n        var opts = this.model.attributes;\n        this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n        var step = opts.step;\n        if (!step) {\n            if (opts.precise && this.has_slider) {\n                step = (opts.max - opts.min) / opts.split;\n            } else {\n                step = 1.0;\n            }\n        }\n        if (this.has_slider) {\n            this.$text.addClass(\"ui-form-slider-left\");\n            this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on(\"slide\", (event, ui) => {\n                self.value(ui.value);\n            });\n        } else {\n            this.$slider.hide();\n        }\n\n        // add listeners\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var value = this.model.get(\"value\");\n        this.has_slider && this.$slider.slider(\"value\", value);\n        value !== this.$text.val() && this.$text.val(value);\n    },\n\n    /** Set and return the current value */\n    value: function(new_val) {\n        var options = this.model.attributes;\n        if (new_val !== undefined) {\n            if (new_val !== null && new_val !== \"\" && !this._isParameter(new_val)) {\n                isNaN(new_val) && (new_val = 0);\n                !options.precise && (new_val = Math.round(new_val));\n                options.max !== null && (new_val = Math.min(new_val, options.max));\n                options.min !== null && (new_val = Math.max(new_val, options.min));\n            }\n            this.model.set(\"value\", new_val);\n            this.model.trigger(\"change\");\n            options.onchange(new_val);\n        }\n        return this.model.get(\"value\");\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name') */\n    _isParameter: function(value) {\n        return this.model.get(\"is_workflow\") && String(value).substring(0, 1) === \"$\";\n    },\n\n    /** Slider template */\n    _template: function() {\n        return (\n            '<div class=\"ui-form-slider\">' +\n            '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n            '<div class=\"ui-form-slider-element\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-slider.js","/** This class creates/wraps a drill down element. */\nimport Utils from \"utils/utils\";\nimport Options from \"mvc/ui/ui-options\";\nvar View = Options.BaseIcons.extend({\n    initialize: function(options) {\n        options.type = options.display || \"checkbox\";\n        options.multiple = options.type == \"checkbox\";\n        Options.BaseIcons.prototype.initialize.call(this, options);\n    },\n\n    /** Set states for selected values */\n    _setValue: function(new_value) {\n        Options.BaseIcons.prototype._setValue.call(this, new_value);\n        if (new_value !== undefined && new_value !== null && this.header_index) {\n            var self = this;\n            var values = $.isArray(new_value) ? new_value : [new_value];\n            _.each(values, v => {\n                var list = self.header_index[v];\n                _.each(list, element => {\n                    self._setState(element, true);\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function(header_id, is_expanded) {\n        var $button = this.$(`.button-${header_id}`);\n        var $subgroup = this.$(`.subgroup-${header_id}`);\n        $button.data(\"is_expanded\", is_expanded);\n        if (is_expanded) {\n            $subgroup.show();\n            $button.removeClass(\"fa-plus-square\").addClass(\"fa-minus-square\");\n        } else {\n            $subgroup.hide();\n            $button.removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\");\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach($el, header_id) {\n            var $button = $el.find(`.button-${header_id}`);\n            $button.on(\"click\", () => {\n                self._setState(header_id, !$button.data(\"is_expanded\"));\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate($tmpl, options, header) {\n            header = header || [];\n            for (var i in options) {\n                var level = options[i];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice(0);\n                self.header_index[level.value] = new_header.slice(0);\n                var $group = $(\"<div/>\");\n                if (has_options) {\n                    var header_id = Utils.uid();\n                    var $button = $(\"<span/>\")\n                        .addClass(`button-${header_id}`)\n                        .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                    var $subgroup = $(\"<div/>\")\n                        .addClass(`subgroup-${header_id}`)\n                        .addClass(\"ui-drilldown-subgroup\");\n                    $group.append(\n                        $(\"<div/>\")\n                            .append($button)\n                            .append(\n                                self._templateOption({\n                                    label: level.name,\n                                    value: level.value\n                                })\n                            )\n                    );\n                    new_header.push(header_id);\n                    iterate($subgroup, level.options, new_header);\n                    $group.append($subgroup);\n                    attach($group, header_id);\n                } else {\n                    $group.append(\n                        self._templateOption({\n                            label: level.name,\n                            value: level.value\n                        })\n                    );\n                }\n                $tmpl.append($group);\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $(\"<div/>\");\n        iterate($tmpl, this.model.get(\"data\"));\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-options-list drilldown-container\")\n            .attr(\"id\", this.model.id);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-drilldown.js","/**\n    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n*/\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Repeat from \"mvc/form/form-repeat\";\nimport InputElement from \"mvc/form/form-input\";\nimport Parameters from \"mvc/form/form-parameters\";\nvar View = Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.inputs = options.inputs;\n        this.parameters = new Parameters();\n        this.setElement($(\"<div/>\"));\n        this.render();\n    },\n\n    /** Render section view */\n    render: function() {\n        var self = this;\n        this.$el.empty();\n        _.each(this.inputs, input => {\n            self.add(input);\n        });\n    },\n\n    /** Add a new input element */\n    add: function(input) {\n        var input_def = jQuery.extend(true, {}, input);\n        input_def.id = input.id = Utils.uid();\n        this.app.input_list[input_def.id] = input_def;\n        switch (input_def.type) {\n            case \"conditional\":\n                this._addConditional(input_def);\n                break;\n            case \"repeat\":\n                this._addRepeat(input_def);\n                break;\n            case \"section\":\n                this._addSection(input_def);\n                break;\n            default:\n                this._addRow(input_def);\n        }\n    },\n\n    /** Add a conditional block */\n    _addConditional: function(input_def) {\n        var self = this;\n        input_def.test_param.id = input_def.id;\n        this.app.model.get(\"sustain_conditionals\") && (input_def.test_param.disabled = true);\n        var field = this._addRow(input_def.test_param);\n\n        // set onchange event for test parameter\n        field.model &&\n            field.model.set(\"onchange\", value => {\n                var selectedCase = self.app.data.matchCase(input_def, value);\n                for (var i in input_def.cases) {\n                    var case_def = input_def.cases[i];\n                    var section_row = self.$(`#${input_def.id}-section-${i}`);\n                    var nonhidden = false;\n                    for (var j in case_def.inputs) {\n                        if (!case_def.inputs[j].hidden) {\n                            nonhidden = true;\n                            break;\n                        }\n                    }\n                    if (i == selectedCase && nonhidden) {\n                        section_row.fadeIn(\"fast\");\n                    } else {\n                        section_row.hide();\n                    }\n                }\n                self.app.trigger(\"change\");\n            });\n\n        // add conditional sub sections\n        for (var i in input_def.cases) {\n            var sub_section = new View(this.app, {\n                inputs: input_def.cases[i].inputs\n            });\n            this._append(sub_section.$el.addClass(\"ui-form-section\"), `${input_def.id}-section-${i}`);\n        }\n\n        // trigger refresh on conditional input field after all input elements have been created\n        field.trigger(\"change\");\n    },\n\n    /** Add a repeat block */\n    _addRepeat: function(input_def) {\n        var self = this;\n        var block_index = 0;\n\n        // create repeat block element\n        var repeat = new Repeat.View({\n            title: input_def.title || \"Repeat\",\n            min: input_def.min,\n            max: input_def.max,\n            onnew: function() {\n                create(input_def.inputs);\n                self.app.trigger(\"change\");\n            }\n        });\n\n        // helper function to create new repeat blocks\n        function create(inputs) {\n            var sub_section_id = `${input_def.id}-section-${block_index++}`;\n            var sub_section = new View(self.app, { inputs: inputs });\n            repeat.add({\n                id: sub_section_id,\n                $el: sub_section.$el,\n                ondel: function() {\n                    repeat.del(sub_section_id);\n                    self.app.trigger(\"change\");\n                }\n            });\n        }\n\n        //\n        // add parsed/minimum number of repeat blocks\n        //\n        var n_cache = _.size(input_def.cache);\n        for (var i = 0; i < Math.max(Math.max(n_cache, input_def.min || 0), input_def.default || 0); i++) {\n            create(i < n_cache ? input_def.cache[i] : input_def.inputs);\n        }\n\n        // hide options\n        this.app.model.get(\"sustain_repeats\") && repeat.hideOptions();\n\n        // create input field wrapper\n        var input_element = new InputElement(this.app, {\n            label: input_def.title || input_def.name,\n            help: input_def.help,\n            field: repeat\n        });\n        this._append(input_element.$el, input_def.id);\n    },\n\n    /** Add a customized section */\n    _addSection: function(input_def) {\n        var portlet = new Portlet.View({\n            title: input_def.title || input_def.name,\n            cls: \"ui-portlet-section\",\n            collapsible: true,\n            collapsible_button: true,\n            collapsed: !input_def.expanded\n        });\n        portlet.append(new View(this.app, { inputs: input_def.inputs }).$el);\n        portlet.append(\n            $(\"<div/>\")\n                .addClass(\"ui-form-info\")\n                .html(input_def.help)\n        );\n        this.app.on(\"expand\", input_id => {\n            portlet.$(`#${input_id}`).length > 0 && portlet.expand();\n        });\n        this._append(portlet.$el, input_def.id);\n    },\n\n    /** Add a single input field element */\n    _addRow: function(input_def) {\n        var self = this;\n        var id = input_def.id;\n        input_def.onchange =\n            input_def.onchange ||\n            (() => {\n                self.app.trigger(\"change\", id);\n            });\n        var field = this.parameters.create(input_def);\n        this.app.field_list[id] = field;\n        var input_element = new InputElement(this.app, {\n            name: input_def.name,\n            label: input_def.hide_label ? \"\" : input_def.label || input_def.name,\n            value: input_def.value,\n            text_value: input_def.text_value,\n            collapsible_value: input_def.collapsible_value,\n            collapsible_preview: input_def.collapsible_preview,\n            help: input_def.help,\n            argument: input_def.argument,\n            disabled: input_def.disabled,\n            color: input_def.color,\n            style: input_def.style,\n            backdrop: input_def.backdrop,\n            hidden: input_def.hidden,\n            fixed: input_def.fixed,\n            field: field\n        });\n        this.app.element_list[id] = input_element;\n        this._append(input_element.$el, input_def.id);\n        return field;\n    },\n\n    /** Append a new element to the form i.e. input element, repeat block, conditionals etc. */\n    _append: function($el, id) {\n        this.$el.append($el.addClass(\"section-row\").attr(\"id\", id));\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-section.js","/** This class creates a ui component which enables the dynamic creation of portlets */\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.list = {};\n        this.options = Utils.merge(options, {\n            title: \"Repeat\",\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new Ui.ButtonIcon({\n            icon: \"fa-plus\",\n            title: `Insert ${this.options.title}`,\n            tooltip: `Add new ${this.options.title} block`,\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function() {\n                options.onnew && options.onnew();\n            }\n        });\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$list = $(\"<div/>\")))\n                .append($(\"<div/>\").append(this.button_new.$el))\n        );\n    },\n\n    /** Number of repeat blocks */\n    size: function() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\"form-repeat::add()\", \"Duplicate or invalid repeat block id.\");\n            return;\n        }\n        var button_delete = new Ui.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: \"Delete this repeat block\",\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function() {\n                options.ondel && options.ondel();\n            }\n        });\n        var portlet = new Portlet.View({\n            id: options.id,\n            title: \"placeholder\",\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        this.options.max > 0 && this.size() >= this.options.max && this.button_new.disable();\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(`#${id}`).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function() {\n        this.button_new.$el.hide();\n        _.each(this.list, portlet => {\n            portlet.hideOperation(\"button_delete\");\n        });\n        _.isEmpty(this.list) &&\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-info\")\n                    .html(this.options.empty_text)\n            );\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(`${++index}: ${this.options.title}`);\n            portlet[this.size() > this.options.min ? \"showOperation\" : \"hideOperation\"](\"button_delete\");\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-repeat.js","/**\n    This class creates a form input element wrapper\n*/\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = (options && options.field) || new Backbone.View();\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                text_enable: this.app_options.text_enable || \"Enable\",\n                text_disable: this.app_options.text_disable || \"Disable\",\n                cls_enable: this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n                cls_disable: this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n                always_refresh: this.app_options.always_refresh\n            }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed =\n            collapsible_value !== undefined &&\n            JSON.stringify(this.model.get(\"value\")) == JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", () => {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", () => {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (help_argument && help_text.indexOf(`(${help_argument})`) == -1) {\n            help_text += ` (${help_argument})`;\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview[\n            (this.field.collapsed && this.model.get(\"collapsible_preview\")) || this.model.get(\"disabled\")\n                ? \"show\"\n                : \"hide\"\n        ]().html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\") ? this.$field.hide() : this.$field.show();\n        // render input field color and style\n        this.field.model &&\n            this.field.model.set({\n                color: this.model.get(\"color\"),\n                style: this.model.get(\"style\")\n            });\n        // render collapsible options\n        if (!this.model.get(\"disabled\") && this.model.get(\"collapsible_value\") !== undefined) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon\n                .removeClass()\n                .addClass(\"icon\")\n                .addClass(this.model.get(`cls_${collapsible_state}`))\n                .attr(\"data-original-title\", this.model.get(`text_${collapsible_state}`))\n                .tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-form-element\")\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-error ui-error\")\n                    .append($(\"<span/>\").addClass(\"fa fa-arrow-down\"))\n                    .append($(\"<span/>\").addClass(\"ui-form-error-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-title\")\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-collapsible\")\n                            .append($(\"<i/>\").addClass(\"ui-form-collapsible-icon\"))\n                            .append($(\"<span/>\").addClass(\"ui-form-collapsible-text\"))\n                    )\n                    .append($(\"<span/>\").addClass(\"ui-form-title-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-field\")\n                    .append($(\"<span/>\").addClass(\"ui-form-info\"))\n                    .append($(\"<div/>\").addClass(\"ui-form-backdrop\"))\n            )\n            .append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-input.js","/**\n    This class creates input elements. New input parameter types should be added to the types dictionary.\n*/\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport SelectContent from \"mvc/ui/ui-select-content\";\nimport SelectLibrary from \"mvc/ui/ui-select-library\";\nimport SelectFtp from \"mvc/ui/ui-select-ftp\";\nimport SelectGenomeSpace from \"mvc/ui/ui-select-genomespace\";\nimport ColorPicker from \"mvc/ui/ui-color-picker\";\n// create form view\nexport default Backbone.Model.extend({\n    /** Available parameter types */\n    types: {\n        text: \"_fieldText\",\n        password: \"_fieldText\",\n        select: \"_fieldSelect\",\n        data_column: \"_fieldSelect\",\n        genomebuild: \"_fieldSelect\",\n        data: \"_fieldData\",\n        data_collection: \"_fieldData\",\n        integer: \"_fieldSlider\",\n        float: \"_fieldSlider\",\n        boolean: \"_fieldBoolean\",\n        drill_down: \"_fieldDrilldown\",\n        color: \"_fieldColor\",\n        hidden: \"_fieldHidden\",\n        hidden_data: \"_fieldHidden\",\n        baseurl: \"_fieldHidden\",\n        library_data: \"_fieldLibrary\",\n        ftpfile: \"_fieldFtp\",\n        upload: \"_fieldUpload\",\n        genomespacefile: \"_fieldGenomeSpace\"\n    },\n\n    /** Returns an input field for a given field type */\n    create: function(input_def) {\n        var fieldClass = this.types[input_def.type];\n        var field = typeof this[fieldClass] === \"function\" ? this[fieldClass].call(this, input_def) : null;\n        if (!field) {\n            field = input_def.options ? this._fieldSelect(input_def) : this._fieldText(input_def);\n            Galaxy.emit.debug(\"form-parameters::_addRow()\", `Auto matched field type (${input_def.type}).`);\n        }\n        input_def.value === undefined && (input_def.value = null);\n        field.value(input_def.value);\n        return field;\n    },\n\n    /** Data input field */\n    _fieldData: function(input_def) {\n        return new SelectContent.View({\n            id: `field-${input_def.id}`,\n            extensions: input_def.extensions,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            type: input_def.type,\n            flavor: input_def.flavor,\n            data: input_def.options,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Select/Checkbox/Radio options field */\n    _fieldSelect: function(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // customize properties\n        if (input_def.type == \"data_column\") {\n            input_def.error_text = \"Missing columns in referenced dataset.\";\n        }\n\n        // identify available options\n        var data = input_def.data;\n        if (!data) {\n            data = [];\n            _.each(input_def.options, option => {\n                data.push({ label: option[0], value: option[1] });\n            });\n        }\n\n        // identify display type\n        var SelectClass = Ui.Select;\n        switch (input_def.display) {\n            case \"checkboxes\":\n                SelectClass = Ui.Checkbox;\n                break;\n            case \"radio\":\n                SelectClass = Ui.Radio;\n                break;\n            case \"radiobutton\":\n                SelectClass = Ui.RadioButton;\n                break;\n        }\n\n        // create select field\n        return new SelectClass.View({\n            id: `field-${input_def.id}`,\n            data: data,\n            error_text: input_def.error_text || \"No options available\",\n            readonly: input_def.readonly,\n            multiple: input_def.multiple,\n            optional: input_def.optional,\n            onchange: input_def.onchange,\n            individual: input_def.individual,\n            searchable: input_def.flavor !== \"workflow\"\n        });\n    },\n\n    /** Drill down options field */\n    _fieldDrilldown: function(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // create drill down field\n        return new Ui.Drilldown.View({\n            id: `field-${input_def.id}`,\n            data: input_def.options,\n            display: input_def.display,\n            optional: input_def.optional,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Text input field */\n    _fieldText: function(input_def) {\n        // field replaces e.g. a select field\n        if (input_def.options && input_def.data) {\n            input_def.area = input_def.multiple;\n            if (Utils.isEmpty(input_def.value)) {\n                input_def.value = null;\n            } else {\n                if ($.isArray(input_def.value)) {\n                    var str_value = \"\";\n                    for (var i in input_def.value) {\n                        str_value += String(input_def.value[i]);\n                        if (!input_def.multiple) {\n                            break;\n                        }\n                        str_value += \"\\n\";\n                    }\n                    input_def.value = str_value;\n                }\n            }\n        }\n        // create input element\n        return new Ui.Input({\n            id: `field-${input_def.id}`,\n            type: input_def.type,\n            area: input_def.area,\n            readonly: input_def.readonly,\n            placeholder: input_def.placeholder,\n            datalist: input_def.datalist,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Slider field */\n    _fieldSlider: function(input_def) {\n        return new Ui.Slider.View({\n            id: `field-${input_def.id}`,\n            precise: input_def.type == \"float\",\n            is_workflow: input_def.is_workflow,\n            min: input_def.min,\n            max: input_def.max,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Hidden field */\n    _fieldHidden: function(input_def) {\n        return new Ui.Hidden({\n            id: `field-${input_def.id}`,\n            info: input_def.info\n        });\n    },\n\n    /** Boolean field */\n    _fieldBoolean: function(input_def) {\n        return new Ui.RadioButton.View({\n            id: `field-${input_def.id}`,\n            data: [{ label: \"Yes\", value: \"true\" }, { label: \"No\", value: \"false\" }],\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Color picker field */\n    _fieldColor: function(input_def) {\n        return new ColorPicker({\n            id: `field-${input_def.id}`,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Library dataset field */\n    _fieldLibrary: function(input_def) {\n        return new SelectLibrary.View({\n            id: `field-${input_def.id}`,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** FTP file field */\n    _fieldFtp: function(input_def) {\n        return new SelectFtp.View({\n            id: `field-${input_def.id}`,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** GenomeSpace file select field\n     */\n    _fieldGenomeSpace: function(input_def) {\n        var self = this;\n        return new SelectGenomeSpace.View({\n            id: `field-${input_def.id}`,\n            onchange: function() {\n                self.app.trigger(\"change\");\n            }\n        });\n    },\n\n    /** Upload file field */\n    _fieldUpload: function(input_def) {\n        return new Ui.Upload({\n            id: `field-${input_def.id}`,\n            onchange: input_def.onchange\n        });\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-parameters.js","import Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select-default\";\n/** Batch mode variations */\nvar Batch = { DISABLED: \"disabled\", ENABLED: \"enabled\", LINKED: \"linked\" };\n\n/** List of available content selectors options */\nvar Configurations = {\n    data: [\n        {\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        },\n        {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.LINKED\n        },\n        {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.LINKED\n        }\n    ],\n    data_multiple: [\n        {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.DISABLED\n        },\n        {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collections\",\n            multiple: true,\n            batch: Batch.DISABLED\n        }\n    ],\n    data_collection: [\n        {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }\n    ],\n    workflow_data: [\n        {\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }\n    ],\n    workflow_data_multiple: [\n        {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.DISABLED\n        }\n    ],\n    workflow_data_collection: [\n        {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }\n    ],\n    module_data: [\n        {\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        },\n        {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.ENABLED\n        }\n    ],\n    module_data_collection: [\n        {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        },\n        {\n            src: \"hdca\",\n            icon: \"fa-folder\",\n            tooltip: \"Multiple collections\",\n            multiple: true,\n            batch: Batch.ENABLED\n        }\n    ]\n};\n\n/** View for hda and hdca content selector ui elements */\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                src_labels: { hda: \"dataset\", hdca: \"dataset collection\" },\n                pagelimit: 100,\n                statustimer: 1000\n            }).set(options);\n        this.setElement($(\"<div/>\").addClass(\"ui-select-content\"));\n        this.button_product = new Ui.RadioButton.View({\n            value: \"false\",\n            data: [\n                {\n                    icon: \"fa fa-chain\",\n                    value: \"false\",\n                    tooltip:\n                        \"Linked inputs will be run in matched order with other datasets e.g. use this for matching forward and reverse reads.\"\n                },\n                {\n                    icon: \"fa fa-chain-broken\",\n                    value: \"true\",\n                    tooltip: \"Unlinked dataset inputs will be run against *all* other inputs.\"\n                }\n            ]\n        });\n        var $batch_div = $(\"<div/>\")\n            .addClass(\"ui-form-info\")\n            .append($(\"<i/>\").addClass(\"fa fa-sitemap\"))\n            .append(\n                $(\"<span/>\").html(\n                    \"This is a batch mode input field. Separate jobs will be triggered for each dataset selection.\"\n                )\n            );\n        this.$batch = {\n            linked: $batch_div.clone(),\n            enabled: $batch_div\n                .clone()\n                .append(\n                    $(\"<div/>\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-form-title\")\n                                .html(\"Batch options:\")\n                        )\n                        .append(this.button_product.$el)\n                )\n                .append($(\"<div/>\").css(\"clear\", \"both\"))\n        };\n\n        // add drag-drop event handlers\n        this.$el\n            .on(\"dragenter\", function(e) {\n                this.lastenter = e.target;\n                self.$el.addClass(\"ui-dragover\");\n            })\n            .on(\"dragover\", e => {\n                e.preventDefault();\n            })\n            .on(\"dragleave\", function(e) {\n                this.lastenter === e.target && self.$el.removeClass(\"ui-dragover\");\n            })\n            .on(\"drop\", e => {\n                self._handleDrop(e);\n            });\n\n        // track current history elements\n        this.history = {};\n\n        // add listeners\n        this.listenTo(this.model, \"change:data\", this._changeData, this);\n        this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n        this.listenTo(this.model, \"change:current\", this._changeCurrent, this);\n        this.listenTo(this.model, \"change:value\", this._changeValue, this);\n        this.listenTo(\n            this.model,\n            \"change:type change:optional change:multiple change:extensions\",\n            this._changeType,\n            this\n        );\n        this.render();\n\n        // add change event\n        this.on(\"change\", () => {\n            options.onchange && options.onchange(self.value());\n        });\n    },\n\n    render: function() {\n        this._changeType();\n        this._changeValue();\n        this._changeWait();\n    },\n\n    /** Indicate that select fields are being updated */\n    wait: function() {\n        this.model.set(\"wait\", true);\n    },\n\n    /** Indicate that the options update has been completed */\n    unwait: function() {\n        this.model.set(\"wait\", false);\n    },\n\n    /** Update data representing selectable options */\n    update: function(options) {\n        this.model.set(\"data\", options);\n    },\n\n    /** Return the currently selected dataset values */\n    value: function(new_value) {\n        new_value !== undefined && this.model.set(\"value\", new_value);\n        var current = this.model.get(\"current\");\n        if (this.config[current]) {\n            var id_list = this.fields[current].value();\n            if (id_list !== null) {\n                id_list = $.isArray(id_list) ? id_list : [id_list];\n                if (id_list.length > 0) {\n                    var result = this._batch({ values: [] });\n                    for (var i in id_list) {\n                        var details = this.history[`${id_list[i]}_${this.config[current].src}`];\n                        if (details) {\n                            result.values.push(details);\n                        } else {\n                            Galaxy.emit.debug(\n                                \"ui-select-content::value()\",\n                                `Requested details not found for '${id_list[i]}'.`\n                            );\n                            return null;\n                        }\n                    }\n                    result.values.sort((a, b) => a.hid - b.hid);\n                    return result;\n                }\n            }\n        } else {\n            Galaxy.emit.debug(\"ui-select-content::value()\", `Invalid value/source '${new_value}'.`);\n        }\n        return null;\n    },\n\n    /** Change of current select field */\n    _changeCurrent: function() {\n        var self = this;\n        _.each(this.fields, (field, i) => {\n            if (self.model.get(\"current\") == i) {\n                field.$el.show();\n                _.each(self.$batch, ($batchfield, batchmode) => {\n                    $batchfield[self.config[i].batch == batchmode ? \"show\" : \"hide\"]();\n                });\n                self.button_type.value(i);\n            } else {\n                field.$el.hide();\n            }\n        });\n    },\n\n    /** Change of type */\n    _changeType: function() {\n        var self = this;\n\n        // identify selector type identifier i.e. [ flavor ]_[ type ]_[ multiple ]\n        var config_id =\n            (this.model.get(\"flavor\") ? `${this.model.get(\"flavor\")}_` : \"\") +\n            String(this.model.get(\"type\")) +\n            (this.model.get(\"multiple\") ? \"_multiple\" : \"\");\n        if (Configurations[config_id]) {\n            this.config = Configurations[config_id];\n        } else {\n            this.config = Configurations[\"data\"];\n            Galaxy.emit.debug(\"ui-select-content::_changeType()\", `Invalid configuration/type id '${config_id}'.`);\n        }\n\n        // prepare extension component of error message\n        var data = self.model.get(\"data\");\n        var extensions = Utils.textify(this.model.get(\"extensions\"));\n        var src_labels = this.model.get(\"src_labels\");\n\n        // build views\n        this.fields = [];\n        this.button_data = [];\n        _.each(this.config, (c, i) => {\n            self.button_data.push({\n                value: i,\n                icon: c.icon,\n                tooltip: c.tooltip\n            });\n            self.fields.push(\n                new Select.View({\n                    optional: self.model.get(\"optional\"),\n                    multiple: c.multiple,\n                    searchable:\n                        !c.multiple || (data && data[c.src] && data[c.src].length > self.model.get(\"pagelimit\")),\n                    individual: true,\n                    error_text: `No ${extensions ? `${extensions} ` : \"\"}${src_labels[c.src] || \"content\"} available.`,\n                    onchange: function() {\n                        self.trigger(\"change\");\n                    }\n                })\n            );\n        });\n        this.button_type = new Ui.RadioButton.View({\n            value: this.model.get(\"current\"),\n            data: this.button_data,\n            onchange: function(value) {\n                self.model.set(\"current\", value);\n                self.trigger(\"change\");\n            }\n        });\n\n        // append views\n        this.$el.empty();\n        var button_width = 0;\n        if (this.fields.length > 1) {\n            this.$el.append(this.button_type.$el);\n            button_width = `${Math.max(0, this.fields.length * 36)}px`;\n        }\n        _.each(this.fields, field => {\n            self.$el.append(field.$el.css({ \"margin-left\": button_width }));\n        });\n        _.each(this.$batch, ($batchfield, batchmode) => {\n            self.$el.append($batchfield.css({ \"margin-left\": button_width }));\n        });\n        this.model.set(\"current\", 0);\n        this._changeCurrent();\n        this._changeData();\n    },\n\n    /** Change of wait flag */\n    _changeWait: function() {\n        var self = this;\n        _.each(this.fields, field => {\n            field[self.model.get(\"wait\") ? \"wait\" : \"unwait\"]();\n        });\n    },\n\n    /** Change of available options */\n    _changeData: function() {\n        var options = this.model.get(\"data\");\n        var self = this;\n        var select_options = {};\n        _.each(options, (items, src) => {\n            select_options[src] = [];\n            _.each(items, item => {\n                select_options[src].push({\n                    hid: item.hid,\n                    keep: item.keep,\n                    label: `${item.hid}: ${item.name}`,\n                    value: item.id,\n                    tags: item.tags\n                });\n                self.history[`${item.id}_${src}`] = item;\n            });\n        });\n        _.each(this.config, (c, i) => {\n            select_options[c.src] && self.fields[i].add(select_options[c.src], (a, b) => b.hid - a.hid);\n        });\n    },\n\n    /** Change of incoming value */\n    _changeValue: function() {\n        var new_value = this.model.get(\"value\");\n        if (new_value && new_value.values && new_value.values.length > 0) {\n            // create list with content ids\n            var list = [];\n            _.each(new_value.values, value => {\n                list.push(value.id);\n            });\n            // sniff first suitable field type from config list\n            var src = new_value.values[0].src;\n            var multiple = new_value.values.length > 1;\n            for (var i = 0; i < this.config.length; i++) {\n                var field = this.fields[i];\n                var c = this.config[i];\n                if (c.src == src && [multiple, true].indexOf(c.multiple) !== -1) {\n                    this.model.set(\"current\", i);\n                    field.value(list);\n                    break;\n                }\n            }\n        } else {\n            _.each(this.fields, field => {\n                field.value(null);\n            });\n        }\n    },\n\n    /** Handles drop events e.g. from history panel */\n    _handleDrop: function(ev) {\n        try {\n            var data = this.model.get(\"data\");\n            var current = this.model.get(\"current\");\n            var config = this.config[current];\n            var field = this.fields[current];\n            var drop_data = JSON.parse(ev.originalEvent.dataTransfer.getData(\"text\"))[0];\n            var new_id = drop_data.id;\n            var new_src = drop_data.history_content_type == \"dataset\" ? \"hda\" : \"hdca\";\n            var new_value = { id: new_id, src: new_src };\n            if (data && _.findWhere(data[new_src], new_value)) {\n                if (config.src == new_src) {\n                    var current_value = field.value();\n                    if (current_value && config.multiple) {\n                        if (current_value.indexOf(new_id) == -1) {\n                            current_value.push(new_id);\n                        }\n                    } else {\n                        current_value = new_id;\n                    }\n                    field.value(current_value);\n                } else {\n                    this.model.set(\"value\", { values: [new_value] });\n                    this.model.trigger(\"change:value\");\n                }\n                this.trigger(\"change\");\n                this._handleDropStatus(\"success\");\n            } else {\n                this._handleDropStatus(\"danger\");\n            }\n        } catch (e) {\n            this._handleDropStatus(\"danger\");\n        }\n        ev.preventDefault();\n    },\n\n    /** Highlight drag result */\n    _handleDropStatus: function(status) {\n        var self = this;\n        this.$el.removeClass(\"ui-dragover\").addClass(`ui-dragover-${status}`);\n        setTimeout(() => {\n            self.$el.removeClass(`ui-dragover-${status}`);\n        }, this.model.get(\"statustimer\"));\n    },\n\n    /** Assists in identifying the batch mode */\n    _batch: function(result) {\n        result[\"batch\"] = false;\n        var current = this.model.get(\"current\");\n        var config = this.config[current];\n        if (config.src == \"hdca\" && !config.multiple) {\n            var hdca = this.history[`${this.fields[current].value()}_hdca`];\n            if (hdca && hdca.map_over_type) {\n                result[\"batch\"] = true;\n            }\n        }\n        if (config.batch == Batch.LINKED || config.batch == Batch.ENABLED) {\n            result[\"batch\"] = true;\n            if (config.batch == Batch.ENABLED && this.button_product.value() === \"true\") {\n                result[\"product\"] = true;\n            }\n        }\n        return result;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-content.js","// dependencies\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Table from \"mvc/ui/ui-table\";\nimport List from \"mvc/ui/ui-list\";\n// collection of libraries\nvar Libraries = Backbone.Collection.extend({\n    url: `${Galaxy.root}api/libraries?deleted=false`\n});\n\n// collection of dataset\nvar LibraryDatasets = Backbone.Collection.extend({\n    initialize: function() {\n        var self = this;\n        this.config = new Backbone.Model({ library_id: null });\n        this.config.on(\"change\", () => {\n            self.fetch({ reset: true });\n        });\n    },\n    url: function() {\n        return `${Galaxy.root}api/libraries/${this.config.get(\"library_id\")}/contents`;\n    }\n});\n\n// hda/hdca content selector ui element\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // collections\n        this.libraries = new Libraries();\n        this.datasets = new LibraryDatasets();\n\n        // link app and options\n        this.options = options;\n\n        // select field for the library\n        // TODO: Remove this once the library API supports searching for library datasets\n        this.library_select = new Ui.Select.View({\n            onchange: function(value) {\n                self.datasets.config.set(\"library_id\", value);\n            }\n        });\n\n        // create ui-list view to keep track of selected data libraries\n        this.dataset_list = new List.View({\n            name: \"dataset\",\n            optional: options.optional,\n            multiple: options.multiple,\n            onchange: function() {\n                self.trigger(\"change\");\n            }\n        });\n\n        // add reset handler for fetched libraries\n        this.libraries.on(\"reset\", () => {\n            var data = [];\n            self.libraries.each(model => {\n                data.push({\n                    value: model.id,\n                    label: model.get(\"name\")\n                });\n            });\n            self.library_select.update(data);\n        });\n\n        // add reset handler for fetched library datasets\n        this.datasets.on(\"reset\", () => {\n            var data = [];\n            var library_current = self.library_select.text();\n            if (library_current !== null) {\n                self.datasets.each(model => {\n                    if (model.get(\"type\") === \"file\") {\n                        data.push({\n                            value: model.id,\n                            label: model.get(\"name\")\n                        });\n                    }\n                });\n            }\n            self.dataset_list.update(data);\n        });\n\n        // add change event. fires on trigger\n        this.on(\"change\", () => {\n            options.onchange && options.onchange(self.value());\n        });\n\n        // create elements\n        this.setElement(this._template());\n        this.$(\".library-select\").append(this.library_select.$el);\n        this.$el.append(this.dataset_list.$el);\n\n        // initial fetch of libraries\n        this.libraries.fetch({\n            reset: true,\n            success: function() {\n                self.library_select.trigger(\"change\");\n                if (self.options.value !== undefined) {\n                    self.value(self.options.value);\n                }\n            }\n        });\n    },\n\n    /** Return/Set currently selected library datasets */\n    value: function(val) {\n        return this.dataset_list.value(val);\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"ui-select-library\">' +\n            '<div class=\"library ui-margin-bottom\">' +\n            '<span class=\"library-title\">Select Library</span>' +\n            '<span class=\"library-select\"/>' +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-library.js","// dependencies\nimport Utils from \"utils/utils\";\nimport List from \"mvc/ui/ui-list\";\n/**\n * FTP file selector\n */\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // create ui-list view to keep track of selected ftp files\n        this.ftpfile_list = new List.View({\n            name: \"file\",\n            optional: options.optional,\n            multiple: options.multiple,\n            onchange: function() {\n                options.onchange && options.onchange(self.value());\n            }\n        });\n\n        // create elements\n        this.setElement(this.ftpfile_list.$el);\n\n        // initial fetch of ftps\n        Utils.get({\n            url: `${Galaxy.root}api/remote_files`,\n            success: function(response) {\n                var data = [];\n                for (var i in response) {\n                    data.push({\n                        value: response[i][\"path\"],\n                        label: response[i][\"path\"]\n                    });\n                }\n                self.ftpfile_list.update(data);\n            }\n        });\n    },\n\n    /** Return/Set currently selected ftp datasets */\n    value: function(val) {\n        return this.ftpfile_list.value(val);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-ftp.js","// dependencies\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport GenomespaceBrowser from \"mvc/tool/tool-genomespace\";\n/**\n * GenomeSpace file selector\n */\nvar View = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // create insert new list element button\n        this.browse_button = new Ui.ButtonIcon({\n            title: \"Browse\",\n            icon: \"fa fa-sign-in\",\n            tooltip: \"Browse GenomeSpace\",\n            onclick: function() {\n                self.browseGenomeSpace();\n            }\n        });\n\n        // create genomespace filepath textbox\n        this.filename_textbox = new Ui.Input();\n\n        // create genomespace token textbox\n        this.token_textbox = new Ui.Input({\n            type: \"password\"\n        });\n\n        // create elements\n        this.setElement(this._template(options));\n        this.$(\".ui-gs-browse-button\").append(this.browse_button.$el);\n        this.$(\".ui-gs-filename-textbox\").append(this.filename_textbox.$el);\n        this.$(\".ui-gs-token-textbox\").append(this.token_textbox.$el);\n    },\n\n    /** Browse GenomeSpace */\n    browseGenomeSpace: function(options) {\n        var self = this;\n        GenomespaceBrowser.openFileBrowser({\n            successCallback: function(data) {\n                self.value(`${data.destination}^${data.token}`);\n            }\n        });\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return (\n            '<div class=\"ui-gs-select-file\">' +\n            '<div class=\"ui-gs-browse-field\">' +\n            '<span class=\"ui-gs-browse-button\" />' +\n            '<span class=\"ui-gs-filename-textbox\" />' +\n            \"</div>\" +\n            '<div class=\"ui-gs-token-field\">' +\n            '<span class=ui-gs-label\"><div class=\"ui-gs-token-label\">Token</div></span>' +\n            '<span class=\"ui-gs-token-textbox\" />' +\n            \"</div>\" +\n            \"</div>\"\n        );\n    },\n\n    /** Return/Set currently selected genomespace filename/token */\n    value: function(new_value) {\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        } else {\n            return this._getValue();\n        }\n    },\n\n    // get value\n    _getValue: function() {\n        return `${this.filename_textbox.value()}^${this.token_textbox.value()}`;\n    },\n\n    // set value\n    _setValue: function(new_value) {\n        if (new_value) {\n            values = new_value.split(\"^\");\n            this.filename_textbox.value(values[0]);\n            this.token_textbox.value(values[1]);\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-genomespace.js","// Provides support for interacting with the GenomeSpace File Browser popup dialogue\n\n// tool form templates\nexport default {\n    openFileBrowser: function(options) {\n        var GS_UI_URL = window.Galaxy.config.genomespace_ui_url;\n        var GS_UPLOAD_URL = `${GS_UI_URL}upload/loadUrlToGenomespace.html?getLocation=true`;\n\n        var newWin = window.open(GS_UPLOAD_URL, \"GenomeSpace File Browser\", \"height=360px,width=600px\");\n\n        successCalBack = options[\"successCallback\"];\n        window.addEventListener(\n            \"message\",\n            e => {\n                successCalBack(e.data);\n            },\n            false\n        );\n\n        newWin.focus();\n\n        if (options[\"errorCallback\"] != null) newWin.setCallbackOnGSUploadError = config[\"errorCallback\"];\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tool-genomespace.js","/** Renders the color picker used e.g. in the tool form **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    colors: {\n        standard: [\"c00000\", \"ff0000\", \"ffc000\", \"ffff00\", \"92d050\", \"00b050\", \"00b0f0\", \"0070c0\", \"002060\", \"7030a0\"],\n        base: [\"ffffff\", \"000000\", \"eeece1\", \"1f497d\", \"4f81bd\", \"c0504d\", \"9bbb59\", \"8064a2\", \"4bacc6\", \"f79646\"],\n        theme: [\n            [\"f2f2f2\", \"7f7f7f\", \"ddd9c3\", \"c6d9f0\", \"dbe5f1\", \"f2dcdb\", \"ebf1dd\", \"e5e0ec\", \"dbeef3\", \"fdeada\"],\n            [\"d8d8d8\", \"595959\", \"c4bd97\", \"8db3e2\", \"b8cce4\", \"e5b9b7\", \"d7e3bc\", \"ccc1d9\", \"b7dde8\", \"fbd5b5\"],\n            [\"bfbfbf\", \"3f3f3f\", \"938953\", \"548dd4\", \"95b3d7\", \"d99694\", \"c3d69b\", \"b2a2c7\", \"92cddc\", \"fac08f\"],\n            [\"a5a5a5\", \"262626\", \"494429\", \"17365d\", \"366092\", \"953734\", \"76923c\", \"5f497a\", \"31859b\", \"e36c09\"],\n            [\"7f7f7e\", \"0c0c0c\", \"1d1b10\", \"0f243e\", \"244061\", \"632423\", \"4f6128\", \"3f3151\", \"205867\", \"974806\"]\n        ]\n    },\n\n    initialize: function(options) {\n        this.options = Utils.merge(options, {});\n        this.setElement(this._template());\n        this.$panel = this.$(\".ui-color-picker-panel\");\n        this.$view = this.$(\".ui-color-picker-view\");\n        this.$value = this.$(\".ui-color-picker-value\");\n        this.$header = this.$(\".ui-color-picker-header\");\n        this._build();\n        this.visible = false;\n        this.value(this.options.value);\n        this.$boxes = this.$(\".ui-color-picker-box\");\n        var self = this;\n        this.$boxes.on(\"click\", function() {\n            self.value($(this).css(\"background-color\"));\n            self.$header.trigger(\"click\");\n        });\n        this.$header.on(\"click\", () => {\n            self.visible = !self.visible;\n            if (self.visible) {\n                self.$view.fadeIn(\"fast\");\n            } else {\n                self.$view.fadeOut(\"fast\");\n            }\n        });\n    },\n\n    /** Get/set value */\n    value: function(new_val) {\n        if (new_val !== undefined && new_val !== null) {\n            this.$value.css(\"background-color\", new_val);\n            this.$(\".ui-color-picker-box\").empty();\n            this.$(this._getValue()).html(this._templateCheck());\n            this.options.onchange && this.options.onchange(new_val);\n        }\n        return this._getValue();\n    },\n\n    /** Get value from dom */\n    _getValue: function() {\n        var rgb = this.$value.css(\"background-color\");\n        rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n        if (rgb) {\n            function hex(x) {\n                return `0${parseInt(x).toString(16)}`.slice(-2);\n            }\n            return `#${hex(rgb[1])}${hex(rgb[2])}${hex(rgb[3])}`;\n        } else {\n            return null;\n        }\n    },\n\n    /** Build color panel */\n    _build: function() {\n        this._content({ colors: this.colors.base });\n        for (var i in this.colors.theme) {\n            var line_def = {};\n            if (i == 0) {\n                line_def[\"bottom\"] = true;\n            } else if (i != this.colors.theme.length - 1) {\n                line_def[\"top\"] = true;\n                line_def[\"bottom\"] = true;\n            } else {\n                line_def[\"top\"] = true;\n            }\n            line_def[\"colors\"] = this.colors.theme[i];\n            this._content(line_def);\n        }\n        this._content({ colors: this.colors.standard });\n    },\n\n    /** Create content */\n    _content: function(options) {\n        var colors = options.colors;\n        var $content = $(this._templateContent());\n        var $line = $content.find(\".line\");\n        this.$panel.append($content);\n        for (var i in colors) {\n            var $box = $(this._templateBox(colors[i]));\n            if (options.top) {\n                $box.css(\"border-top\", \"none\");\n                $box.css(\"border-top-left-radius\", \"0px\");\n                $box.css(\"border-top-right-radius\", \"0px\");\n            }\n            if (options.bottom) {\n                $box.css(\"border-bottom\", \"none\");\n                $box.css(\"border-bottom-left-radius\", \"0px\");\n                $box.css(\"border-bottom-right-radius\", \"0px\");\n            }\n            $line.append($box);\n        }\n        return $content;\n    },\n\n    /** Check icon */\n    _templateCheck: function() {\n        return '<div class=\"ui-color-picker-check fa fa-check\"/>';\n    },\n\n    /** Content template */\n    _templateContent: function() {\n        return '<div class=\"ui-color-picker-content\">' + '<div class=\"line\"/>' + \"</div>\";\n    },\n\n    /** Box template */\n    _templateBox: function(color) {\n        return `<div id=\"${color}\" class=\"ui-color-picker-box\" style=\"background-color: #${color};\"/>`;\n    },\n\n    /** Main template */\n    _template: function() {\n        return (\n            '<div class=\"ui-color-picker\">' +\n            '<div class=\"ui-color-picker-header\">' +\n            '<div class=\"ui-color-picker-value\"/>' +\n            '<div class=\"ui-color-picker-label\">Select a color</div>' +\n            \"</div>\" +\n            '<div class=\"ui-color-picker-view ui-input\">' +\n            '<div class=\"ui-color-picker-panel\"/>' +\n            \"</div>\"\n        );\n        (\"</div>\");\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-color-picker.js","var View = Backbone.View.extend({\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault: {\n        container: \"body\",\n        title: \"ui-modal\",\n        cls: \"ui-modal\",\n        body: \"\",\n        backdrop: true,\n        height: null,\n        width: null,\n        closing_events: false,\n        closing_callback: null,\n        title_separator: true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        $(this.options.container).prepend(this.el);\n        // optional render\n        if (options) {\n            this.render();\n        }\n    },\n\n    /**\n     * Displays modal\n     */\n    show: function(options) {\n        if (options) {\n            this.options = _.defaults(options, this.optionsDefault);\n            this.render();\n        }\n        if (!this.visible) {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            if (this.options.closing_events) {\n                var self = this;\n                $(document).on(\"keyup.ui-modal\", e => {\n                    if (e.keyCode == 27) {\n                        self.hide(true);\n                    }\n                });\n                this.$backdrop.on(\"click\", () => {\n                    self.hide(true);\n                });\n            }\n        }\n    },\n\n    /**\n     * Hide modal\n     */\n    hide: function(canceled) {\n        this.visible = false;\n        this.$el.fadeOut(\"fast\");\n        if (this.options.closing_callback) {\n            this.options.closing_callback(canceled);\n        }\n        $(document).off(\"keyup.ui-modal\");\n        this.$backdrop.off(\"click\");\n    },\n\n    /**\n     * Render modal\n     */\n    render: function() {\n        var self = this;\n        this.$el.html(this._template());\n\n        // link elements\n        this.$header = this.$(\".modal-header\");\n        this.$dialog = this.$(\".modal-dialog\");\n        this.$body = this.$(\".modal-body\");\n        this.$footer = this.$(\".modal-footer\");\n        this.$backdrop = this.$(\".modal-backdrop\");\n        this.$buttons = this.$(\".buttons\");\n\n        if (this.options.body == \"progress\") {\n            this.options.body = $(\n                '<div class=\"progress progress-striped active\">' +\n                    '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                    \"</div>\"\n            );\n        }\n\n        // fix main content\n        this.$el\n            .removeClass()\n            .addClass(\"modal\")\n            .addClass(this.options.cls);\n        this.$header.find(\".title\").html(this.options.title);\n        this.$body.html(this.options.body);\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if (this.options.buttons) {\n            var counter = 0;\n            $.each(this.options.buttons, (name, callback) => {\n                var $button = $(\"<button/>\")\n                    .attr(\"id\", `button-${counter++}`)\n                    .text(name)\n                    .click(callback);\n                self.$buttons.append($button).append(\"&nbsp;\");\n                self.buttonList[name] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[(this.options.backdrop && \"addClass\") || \"removeClass\"](\"in\");\n        this.$header[(!this.options.title_separator && \"addClass\") || \"removeClass\"](\"no-separator\");\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr(\"style\");\n        if (this.options.height) {\n            this.$body.css(\"height\", this.options.height);\n            this.$body.css(\"overflow\", \"hidden\");\n        } else {\n            this.$body.css(\"max-height\", $(window).height() / 2);\n        }\n        if (this.options.width) {\n            this.$dialog.css(\"width\", this.options.width);\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n     */\n    getButton: function(name) {\n        return this.buttonList[name];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n     */\n    enableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", false);\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n     */\n    disableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", true);\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n     */\n    showButton: function(name) {\n        this.getButton(name).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n     */\n    hideButton: function(name) {\n        this.getButton(name).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n     */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n     */\n    _template: function() {\n        return (\n            '<div class=\"modal-backdrop fade\"/>' +\n            '<div class=\"modal-dialog\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"modal-header\">' +\n            '<h4 class=\"title\"/>' +\n            \"</div>\" +\n            '<div class=\"modal-body\"/>' +\n            '<div class=\"modal-footer\">' +\n            '<div class=\"buttons\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-modal.js"],"sourceRoot":""}