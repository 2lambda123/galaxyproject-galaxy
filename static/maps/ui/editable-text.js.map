{"version":3,"sources":["ui/editable-text.js"],"names":["factory","define","amd","jQuery","$","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","container","this","addClass","click","e","length","removeClass","input_elt","cur_text","set_text","new_text","find","remove","text","html","on_finish","button_elt","rows","cols","keyup","keyCode","val","attr","value","trim","size","trigger","stopPropagation","append","select","focus","help_text","tooltip"],"mappings":"cAAA,SAAAA,GACA,mBAAAC,QAAAA,OAAAC,IAIQD,QAAA,UAAAD,GAFJA,EAKOG,QARX,CAUQH,SAAAA,GACH,aAED,IAAAI,EAAAD,EAUAC,EAAEC,GAAGC,mBAAqB,SAASC,GAAnC,IAAKD,EAAAA,aAAqBC,EAAAA,EAAsBC,SAAA,GAC5CC,EAAA,aAAAF,EAAAA,EAAAE,SAAA,EACID,EAAW,iBAAcD,GAAcA,EAA5BG,aACXD,EAAW,cAAcF,EAAcA,EAAYE,UADvD,KAEIC,EAAAA,cAAeH,EAAkBA,EAAcA,UAAYG,KAK3DC,EAAYP,EAAEQ,MAsFlB,OAvFAD,EAAAE,SAAA,iBAAAC,MAAA,SAAAC,GAEAJ,KAAAA,EAAUE,MAAAA,SAAS,UAAnBG,OAA0C,GAA1CL,CAIKA,EAAAM,YAAA,iBAKD,IAgBAC,EACIC,EAjBAC,EAAW,SAASC,GADxBV,EAAAW,KAAA,UAAAC,SAEmB,KAAfZ,EAGIA,EAAUa,KAAKH,GADnBV,EAEOc,KAAA,QAEHd,EAAAA,SAAe,iBAEnBA,GAGIe,EAAUL,IAKdF,EAAW,aAAcZ,EAAcA,EAAYY,SAAWR,EAAUa,OAExEG,GAGAT,EAAYd,EAAE,eADdM,MAAJkB,KAAkBnB,EAAAoB,KAAArB,IACdU,KAAAA,EAAYd,KAAEe,IAINW,MAAMC,SAAFhB,GACA,KAAAA,EAAAgB,SAEHX,EAAAD,KAKDC,EAASF,EAAAA,aACTM,KAAA,QACAV,MAAO,WAGfI,OARAE,EAAAF,EAAAc,QAQc,KAMNd,EAAMa,EAAAA,wBACFE,MAAAC,MAAA9B,EAAA+B,KAAAhB,GAAAiB,KAAA5B,IACAJ,KAAE,WAFNgB,EAGaW,KAETX,MAAAA,SAAWL,GACd,KAAAA,EAAAgB,QAED3B,EAAAQ,MAAAyB,QAAA,QACA,KAAEC,EAAFP,SAEXX,EAAAhB,EAAAQ,MAAAoB,OAISO,EAAAA,oBAKVrB,EAAUsB,KAAAA,IALV7B,EAAU4B,OAAOrB,GAOjBS,GACEW,EAAAA,OAAFX,GAJAT,EAAUuB,QAOdvB,EAAAsB,SAGCzB,EAAAuB,qBAFGI,GAOR/B,EAAAsB,KAAA,QAAAS,GAAAC,UAHWhC","file":"../../scripts/ui/editable-text.js","sourcesContent":["// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        define([\"jquery\"], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function(jQuery) {\n    \"use_strict\";\n\n    var $ = jQuery;\n\n    // ============================================================================\n    /**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n    $.fn.make_text_editable = function(config_dict) {\n        // Get config options.\n        var num_cols = \"num_cols\" in config_dict ? config_dict.num_cols : 30,\n            num_rows = \"num_rows\" in config_dict ? config_dict.num_rows : 4,\n            use_textarea = \"use_textarea\" in config_dict ? config_dict.use_textarea : false,\n            on_finish = \"on_finish\" in config_dict ? config_dict.on_finish : null,\n            help_text = \"help_text\" in config_dict ? config_dict.help_text : null;\n\n        // Add element behavior.\n        var container = $(this);\n        container.addClass(\"editable-text\").click(function(e) {\n            // If there's already an input element, editing is active, so do nothing.\n            if ($(this).children(\":input\").length > 0) {\n                return;\n            }\n\n            container.removeClass(\"editable-text\");\n\n            // Handler for setting element text.\n            var set_text = function(new_text) {\n                container.find(\":input\").remove();\n\n                if (new_text !== \"\") {\n                    container.text(new_text);\n                } else {\n                    // No text; need a line so that there is a click target.\n                    container.html(\"<br>\");\n                }\n                container.addClass(\"editable-text\");\n\n                if (on_finish) {\n                    on_finish(new_text);\n                }\n            };\n\n            // Create input element(s) for editing.\n            var cur_text = \"cur_text\" in config_dict ? config_dict.cur_text : container.text(),\n                input_elt,\n                button_elt;\n\n            if (use_textarea) {\n                input_elt = $(\"<textarea/>\")\n                    .attr({ rows: num_rows, cols: num_cols })\n                    .text($.trim(cur_text))\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            set_text(cur_text);\n                        }\n                    });\n                button_elt = $(\"<button/>\")\n                    .text(\"Done\")\n                    .click(function() {\n                        set_text(input_elt.val());\n                        // Return false so that click does not propogate to container.\n                        return false;\n                    });\n            } else {\n                input_elt = $(\"<input type='text'/>\")\n                    .attr({ value: $.trim(cur_text), size: num_cols })\n                    .blur(function() {\n                        set_text(cur_text);\n                    })\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            $(this).trigger(\"blur\");\n                        } else if (e.keyCode === 13) {\n                            // Enter key.\n                            set_text($(this).val());\n                        }\n\n                        // Do not propogate event to avoid unwanted side effects.\n                        e.stopPropagation();\n                    });\n            }\n\n            // Replace text with input object(s) and focus & select.\n            container.text(\"\");\n            container.append(input_elt);\n            if (button_elt) {\n                container.append(button_elt);\n            }\n            input_elt.focus();\n            input_elt.select();\n\n            // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n            e.stopPropagation();\n        });\n\n        // Add help text if there some.\n        if (help_text) {\n            container.attr(\"title\", help_text).tooltip();\n        }\n\n        return container;\n    };\n\n    // ============================================================================\n});\n"]}