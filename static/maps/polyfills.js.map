{"version":3,"sources":["polyfills.js"],"names":["window","console","log","debug","info","Object","assign","_","extend","vendors","x","length","requestAnimationFrame","lastTime","cancelRequestAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","id","cancelAnimationFrame","map","name","compatible","CanvasRenderingContext2D","sessionStorage","err","filter","feature","incompatibilities","document","querySelectorAll","join","root","location","href"],"mappings":"cAKA,WASIA,OAAAC,QAAAD,OAAAC,UACAC,IAAA,aAGIC,MAAO,aAFXH,KAAOC,aACHC,KAAK,aACLC,MAAO,aACPC,OAAM,cAHyBC,OAAnCC,OAAAD,OAAAC,QAAAC,EAAAC,OAYA,IAAA,IAFAH,EAAA,EAIII,GAAW,KAAM,MAAO,SAAU,KAFtCC,EAAA,EAAAA,EAAAD,EAAAE,SAAAX,OAAAY,wBAAAF,EACIG,OAAAA,sBAAJb,OAAAS,EAAAC,GAAA,yBACID,OAAAA,4BAAUT,OAAdS,EAAAC,GAAA,+BAGIV,OAAOc,wBACVd,OAAAY,sBAAA,SAAAG,EAAAC,GAIO,IAAIC,GAAW,IAAIC,MAAOC,UAFtBP,EAAAA,KAAAA,IAAZ,EACIZ,IAAOY,EAAAA,IACCK,EAAAA,OAAeC,WAAOC,WACtBC,EAAaC,EAAAD,IACbE,GAEDF,OADCL,EAASE,EAAWG,EACrBA,IALPpB,OAAAuB,uBAWAvB,OAAOuB,qBAAuB,SAASD,GADtCtB,aAAOuB,KAKZ,IAuBKC,IApBGC,KAAM,SACNC,WAAY,WACR,OAAO1B,OAAO2B,4BAKlBD,KAAAA,iBACIA,WAAI,WACA,IACF,OAAc1B,OAAA4B,eAAAjB,QAAA,EAChB,MAAAkB,IACH,OAAA,KASDC,OAAOC,SAAQN,GALvB,OAAAM,EAAAL,eAQAF,IAAA,SAAAO,GACMC,OAAAA,EAAAA,OAID,GAAAA,EAAArB,OAAA,CACDV,IAAAA,EAAAgC,SAAYC,iBAAA,qBAA8CC,KAAK,GAClEC,IAjFLpC,OAAAqC,SAAAD,EAAAE,KAAA,oCAgFQrC,QAAQC,IAAI,0BAA4B8B,EAAkBG,KAAK,QAhFvE","file":"../scripts/polyfills.js","sourcesContent":["/**\n    Perform feature inference and redirect if below some minimum (must have canvas, etc.)\n    and polyfill for non-standard features.\n */\n\n(function() {\n    /* TODO: move to modernizr or something besides us doing this...\n     * These are across all of our apps (reports, tool shed), but:\n     *     these should be configurable via options because they all need different things.\n     * So, analysis-polyfills.js, reports-polyfills.js (or analysis/polyfills)\n     */\n    \"use strict\";\n    /*globals window, clearTimeout */\n\n    // ------------------------------------------------------------------ polyfills\n    // console protection needed in some versions of IE (at this point (IE>=9), shouldn't be needed)\n    window.console = window.console || {\n        log: function() {},\n        debug: function() {},\n        info: function() {},\n        warn: function() {},\n        error: function() {},\n        assert: function() {}\n    };\n\n    // phantomjs: does not have the native extend fn assign\n    Object.assign = Object.assign || _.extend;\n\n    // requestAnimationFrame polyfill\n    var lastTime = 0;\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n        window.cancelRequestAnimationFrame = window[vendors[x] + \"CancelRequestAnimationFrame\"];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n\n    // ------------------------------------------------------------------ can't/won't polyfill\n    var features = [\n        {\n            name: \"canvas\",\n            compatible: function() {\n                return window.CanvasRenderingContext2D;\n            }\n        },\n        {\n            name: \"sessionStorage\",\n            compatible: function() {\n                try {\n                    return window.sessionStorage.length >= 0;\n                } catch (err) {}\n                return false;\n            }\n        }\n    ];\n    // build a list of feature names for features that were not found\n    var incompatibilities = features\n        .filter(function(feature) {\n            return !feature.compatible();\n        })\n        .map(function(feature) {\n            return feature.name;\n        });\n\n    // if there are needed features missing, follow the index link to the static incompat warning\n    if (!!incompatibilities.length) {\n        var root = document.querySelectorAll('link[rel=\"index\"]').item(0);\n        if (root) {\n            window.location = root.href + \"static/incompatible-browser.html\";\n        }\n        console.log(\"incompatible browser:\\n\" + incompatibilities.join(\"\\n\"));\n    }\n})();\n"]}