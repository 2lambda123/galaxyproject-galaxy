{"version":3,"sources":["layout/panel.js"],"names":["define","$","_","Backbone","MIN_PANEL_WIDTH","MAX_PANEL_WIDTH","SidePanel","View","extend","initialize","options","this","view","hidden","$center","$el","siblings","$toggleButton","render","self","panel","model","attributes","id","each","components","buttons","html","append","button","cls","escape","title","_templatePanel","_templateHeader","_templateBody","_templateFooter","join","data","_mousedownDragHandler","draggingLeft","prevX","mousedown .unified-panel-footer > .drag","click .unified-panel-footer > .panel-collapse","delta","newWidth","ev","move","e","pageX","oldWidth","width","Math","min","max","resize","show","on","one","hide","animation","newSize","removeClass","css","whichSide","animate","saved_size","toggle","hiddenByTool","handle_minwidth_hint","space","addClass","hint","force_panel","op","RightPanel","toString","$panel","$frame","bind","LeftPanel","location","iframe","Galaxy","fullpath","CenterPanel","setElement","template","display","_iframeChangeHandler","contentWindow","onbeforeunload","attr","trigger","host","empty","pathname","search","hash","message","scrollTop"],"mappings":"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","file":"../../scripts/layout/panel.js","sourcesContent":["define([\"jquery\", \"libs/underscore\", \"libs/backbone\"], function($, _, Backbone) {\n    \"use strict\";\n\n    var MIN_PANEL_WIDTH = 160,\n        MAX_PANEL_WIDTH = 800;\n\n    /** View for left/right panels used by Page view */\n    var SidePanel = Backbone.View.extend({\n        initialize: function(options) {\n            this.view = options.view;\n            this.hidden = false;\n            this.saved_size = null;\n            this.hiddenByTool = false;\n        },\n\n        $center: function() {\n            return this.$el.siblings(\"#center\");\n        },\n\n        $toggleButton: function() {\n            return this.$(\".unified-panel-footer > .panel-collapse\");\n        },\n\n        render: function() {\n            var self = this;\n            var panel = this.view;\n            var components = this.view.model.attributes || {};\n            this.$el.html(this._templatePanel(this.id));\n            _.each(components.buttons, function(button) {\n                self.$(\".panel-header-buttons\").append(button.$el);\n            });\n            this.$el.addClass(components.cls);\n            this.$(\".panel-header-text\").html(_.escape(components.title));\n            this.$(\".unified-panel-body\").append(panel.$el);\n            panel.render();\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templatePanel: function() {\n            return [this._templateHeader(), this._templateBody(), this._templateFooter()].join(\"\");\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateHeader: function(data) {\n            return [\n                '<div class=\"unified-panel-header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\">',\n                '<div class=\"panel-header-buttons\" style=\"float: right\"/>',\n                '<div class=\"panel-header-text\"/>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateBody: function(data) {\n            return '<div class=\"unified-panel-body\"/>';\n        },\n\n        /** panel dom template. id is 'right' or 'left' */\n        _templateFooter: function(data) {\n            return [\n                '<div class=\"unified-panel-footer\">',\n                '<div class=\"panel-collapse ',\n                _.escape(this.id),\n                '\"/>',\n                '<div class=\"drag\"/>',\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        events: {\n            \"mousedown .unified-panel-footer > .drag\": \"_mousedownDragHandler\",\n            \"click .unified-panel-footer > .panel-collapse\": \"toggle\"\n        },\n\n        _mousedownDragHandler: function(ev) {\n            var self = this,\n                draggingLeft = this.id === \"left\",\n                prevX = ev.pageX;\n\n            function move(e) {\n                var delta = e.pageX - prevX;\n                prevX = e.pageX;\n                var oldWidth = self.$el.width(),\n                    newWidth = draggingLeft ? oldWidth + delta : oldWidth - delta;\n                // Limit range\n                newWidth = Math.min(MAX_PANEL_WIDTH, Math.max(MIN_PANEL_WIDTH, newWidth));\n                self.resize(newWidth);\n            }\n\n            // this is a page wide overlay that assists in capturing the move and release of the mouse\n            // if not provided, progress and end wouldn't fire if the mouse moved out of the drag button area\n            $(\"#dd-helper\")\n                .show()\n                .on(\"mousemove\", move)\n                .one(\"mouseup\", function(e) {\n                    $(this)\n                        .hide()\n                        .off(\"mousemove\", move);\n                });\n        },\n\n        // TODO: the following three could be simplified I think\n        // if panel is 'right' (this.id), move center right newSize number of pixels\n        resize: function(newSize) {\n            this.$el.css(\"width\", newSize);\n            this.$center().css(this.id, newSize);\n            return this;\n        },\n\n        show: function() {\n            if (!this.hidden) {\n                return;\n            }\n            var self = this,\n                animation = {},\n                whichSide = this.id;\n            animation[whichSide] = 0;\n            self.$el\n                .css(whichSide, -this.saved_size)\n                .show()\n                .animate(animation, \"fast\", function() {\n                    self.resize(self.saved_size);\n                });\n            self.hidden = false;\n            self.$toggleButton().removeClass(\"hidden\");\n            return this;\n        },\n\n        hide: function() {\n            if (this.hidden) {\n                return;\n            }\n            var animation = {},\n                whichSide = this.id;\n            this.saved_size = this.$el.width();\n            animation[whichSide] = -this.saved_size;\n            this.$el.animate(animation, \"fast\");\n            this.$center().css(whichSide, 0);\n            this.hidden = true;\n            this.$toggleButton().addClass(\"hidden\");\n            return this;\n        },\n\n        toggle: function(ev) {\n            this.hidden ? this.show() : this.hide();\n            this.hiddenByTool = false;\n            return this;\n        },\n\n        // ..............................................................\n        //TODO: only used in message.mako?\n        /**   */\n        handle_minwidth_hint: function(hint) {\n            var space = this.$center().width() - (this.hidden ? this.saved_size : 0);\n            if (space < hint) {\n                if (!this.hidden) {\n                    this.toggle();\n                    this.hiddenByTool = true;\n                }\n            } else {\n                if (this.hiddenByTool) {\n                    this.toggle();\n                    this.hiddenByTool = false;\n                }\n            }\n            return self;\n        },\n\n        /**   */\n        force_panel: function(op) {\n            if (op == \"show\") {\n                return this.show();\n            }\n            if (op == \"hide\") {\n                return this.hide();\n            }\n            return self;\n        },\n\n        toString: function() {\n            return \"SidePanel(\" + this.id + \")\";\n        }\n    });\n\n    // ----------------------------------------------------------------------------\n    // TODO: side should be defined by page - not here\n    var LeftPanel = SidePanel.extend({\n        id: \"left\"\n    });\n\n    var RightPanel = SidePanel.extend({\n        id: \"right\"\n    });\n\n    /** Center panel with the ability to switch between iframe and view */\n    var CenterPanel = Backbone.View.extend({\n        initialize: function(options) {\n            this.setElement($(this.template()));\n            this.$frame = this.$(\".center-frame\");\n            this.$panel = this.$(\".center-panel\");\n            this.$frame.on(\"load\", _.bind(this._iframeChangeHandler, this));\n        },\n\n        /** Display iframe if its target url changes, hide center panel */\n        _iframeChangeHandler: function(ev) {\n            var iframe = ev.currentTarget;\n            var location = iframe.contentWindow && iframe.contentWindow.location;\n            if (location && location.host) {\n                $(iframe).show();\n                this.$panel.empty().hide();\n                Galaxy.trigger(\"center-frame:load\", {\n                    fullpath: location.pathname + location.search + location.hash,\n                    pathname: location.pathname,\n                    search: location.search,\n                    hash: location.hash\n                });\n            }\n        },\n\n        /** Display a view in the center panel, hide iframe */\n        display: function(view) {\n            var contentWindow = this.$frame[0].contentWindow || {};\n            var message = contentWindow.onbeforeunload && contentWindow.onbeforeunload();\n            if (!message || confirm(message)) {\n                contentWindow.onbeforeunload = undefined;\n                this.$frame.attr(\"src\", \"about:blank\").hide();\n                this.$panel\n                    .empty()\n                    .scrollTop(0)\n                    .append(view.$el)\n                    .show();\n                Galaxy.trigger(\"center-panel:load\", view);\n            }\n        },\n\n        template: function() {\n            return (\n                '<div class=\"center-container\">' +\n                '<iframe id=\"galaxy_main\" name=\"galaxy_main\" frameborder=\"0\" class=\"center-frame\" />' +\n                '<div class=\"center-panel\" />' +\n                \"</div>\"\n            );\n        },\n\n        toString: function() {\n            return \"CenterPanel\";\n        }\n    });\n\n    return {\n        SidePanel: SidePanel,\n        LeftPanel: LeftPanel,\n        RightPanel: RightPanel,\n        CenterPanel: CenterPanel\n    };\n});\n"]}