{"version":3,"sources":["mvc/ui/ui-select-default.js"],"names":["define","Utils","Buttons","View","Backbone","extend","initialize","options","this","self","data","data2","model","uid","cls","error_text","empty_text","visible","wait","multiple","searchable","optional","disabled","readonly","onchange","value","individual","pagesize","on","get","listenTo","_changeData","_changeDisabled","_changeWait","_changeVisible","_changeValue","render","_renderSearchable","_renderClassic","$el","addClass","attr","$select","trigger","_getValue","$resize_icon","$resize","currentHeight","height","minHeight","$","$dropdown","append","pageY","hide","show","removeClass","event","currentY","Math","max","select2","off","onclick","new_value","all_button","prepend","ButtonCheck","option","push","label","text","term","String","each","matched_tags","closeOnSelect","found","length","_","q","callback","index","results","more","id","formatResult","tags","query","remove","filter","e","tag","_match","slice","page","result","escape","reduce","memo","find","undefined","html","set","findWhere","prop","_setValue","isArray","first","enable","v","keep","d","exists","update","setOnChange","unwait","sorter","val","isEmpty","selected","sort","a","b","order"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-select-default.js","sourcesContent":["/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine([\"utils/utils\", \"mvc/ui/ui-buttons\"], function(Utils, Buttons) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.data = [];\n            this.data2 = [];\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-select\",\n                    error_text: \"No options available\",\n                    empty_text: \"Nothing selected\",\n                    visible: true,\n                    wait: false,\n                    multiple: false,\n                    searchable: true,\n                    optional: false,\n                    disabled: false,\n                    readonly: false,\n                    onchange: function() {},\n                    value: null,\n                    individual: false,\n                    pagesize: 20\n                }).set(options);\n            this.on(\"change\", function() {\n                self.model.get(\"onchange\") && self.model.get(\"onchange\")(self.value());\n            });\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(this.model, \"change:disabled\", this._changeDisabled, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(this.model, \"change:multiple change:searchable change:cls change:id\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.model.get(\"searchable\") ? this._renderSearchable() : this._renderClassic();\n            this.$el.addClass(this.model.get(\"cls\")).attr(\"id\", this.model.get(\"id\"));\n            this.$select\n                .empty()\n                .addClass(\"select\")\n                .attr(\"id\", this.model.get(\"id\") + \"_select\")\n                .prop(\"multiple\", this.model.get(\"multiple\"))\n                .on(\"change\", function() {\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                });\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n            this._changeDisabled();\n        },\n\n        /** Renders the classic selection field */\n        _renderClassic: function() {\n            var self = this;\n            this.$el\n                .addClass(this.model.get(\"multiple\") ? \"ui-select-multiple\" : \"ui-select\")\n                .append((this.$select = $(\"<select/>\")))\n                .append((this.$dropdown = $(\"<div/>\")))\n                .append((this.$resize = $(\"<div/>\").append((this.$resize_icon = $(\"<i/>\")))));\n            if (this.model.get(\"multiple\")) {\n                this.$dropdown.hide();\n                this.$resize_icon.addClass(\"fa fa-angle-double-right fa-rotate-45\").show();\n                this.$resize\n                    .removeClass()\n                    .addClass(\"icon-resize\")\n                    .show()\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function(event) {\n                        var currentY = event.pageY;\n                        var currentHeight = self.$select.height();\n                        self.minHeight = self.minHeight || currentHeight;\n                        $(\"#dd-helper\")\n                            .show()\n                            .on(\"mousemove\", function(event) {\n                                self.$select.height(Math.max(currentHeight + (event.pageY - currentY), self.minHeight));\n                            })\n                            .on(\"mouseup mouseleave\", function() {\n                                $(\"#dd-helper\")\n                                    .hide()\n                                    .off();\n                            });\n                    });\n            } else {\n                this.$dropdown.show();\n                this.$resize.hide();\n                this.$resize_icon.hide();\n            }\n        },\n\n        /** Renders the default select2 field */\n        _renderSearchable: function() {\n            var self = this;\n            this.$el.append((this.$select = $(\"<div/>\"))).append((this.$dropdown = $(\"<div/>\")));\n            this.$dropdown.hide();\n            if (!this.model.get(\"multiple\")) {\n                this.$dropdown.show().on(\"click\", function() {\n                    self.$select.select2 && self.$select.select2(\"open\");\n                });\n            }\n            this.all_button = null;\n            if (this.model.get(\"multiple\") && !this.model.get(\"individual\") && !this.model.get(\"readonly\")) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function() {\n                        var new_value = [];\n                        self.all_button.value() !== 0 &&\n                            _.each(self.model.get(\"data\"), function(option) {\n                                new_value.push(option.value);\n                            });\n                        self.value(new_value);\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$el.prepend(this.all_button.$el);\n            }\n        },\n\n        /** Matches a search term with a given text */\n        _match: function(term, text) {\n            return (\n                !term ||\n                term == \"\" ||\n                String(text)\n                    .toUpperCase()\n                    .indexOf(term.toUpperCase()) >= 0\n            );\n        },\n\n        /** Updates the selection options */\n        _changeData: function() {\n            var self = this;\n            this.data = [];\n            if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: self.model.get(\"empty_text\")\n                });\n            }\n            _.each(this.model.get(\"data\"), function(option) {\n                self.data.push(option);\n            });\n            if (this.length() == 0) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: this.model.get(\"error_text\")\n                });\n            }\n            if (this.model.get(\"searchable\")) {\n                this.data2 = [];\n                _.each(this.data, function(option, index) {\n                    self.data2.push({\n                        order: index,\n                        id: option.value,\n                        text: option.label,\n                        tags: option.tags\n                    });\n                });\n                this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n                this.matched_tags = {};\n                this.$select.select2({\n                    data: self.data2,\n                    closeOnSelect: !this.model.get(\"multiple\"),\n                    multiple: this.model.get(\"multiple\"),\n                    query: function(q) {\n                        self.matched_tags = {};\n                        var pagesize = self.model.get(\"pagesize\");\n                        var results = _.filter(self.data2, function(e) {\n                            var found = false;\n                            _.each(e.tags, function(tag) {\n                                if (self._match(q.term, tag)) {\n                                    found = self.matched_tags[tag] = true;\n                                }\n                            });\n                            return found || self._match(q.term, e.text);\n                        });\n                        q.callback({\n                            results: results.slice((q.page - 1) * pagesize, q.page * pagesize),\n                            more: results.length >= q.page * pagesize\n                        });\n                    },\n                    formatResult: function(result) {\n                        return (\n                            _.escape(result.text) +\n                            '<div class=\"ui-tags\">' +\n                            _.reduce(\n                                result.tags,\n                                function(memo, tag) {\n                                    if (self.matched_tags[tag]) {\n                                        return (\n                                            memo +\n                                            \"&nbsp;\" +\n                                            '<div class=\"label label-info\">' +\n                                            _.escape(tag) +\n                                            \"</div>\"\n                                        );\n                                    }\n                                    return memo;\n                                },\n                                \"\"\n                            ) +\n                            \"</div>\"\n                        );\n                    }\n                });\n                this.$(\".select2-container .select2-search input\").off(\"blur\");\n            } else {\n                this.$select.find(\"option\").remove();\n                _.each(this.data, function(option) {\n                    self.$select.append(\n                        $(\"<option/>\")\n                            .attr(\"value\", option.value)\n                            .html(_.escape(option.label))\n                    );\n                });\n            }\n            this.model.set(\"disabled\", this.model.get(\"readonly\") || this.length() == 0);\n            this._changeValue();\n        },\n\n        /** Handles field enabling/disabling, usually used when no options are available */\n        _changeDisabled: function() {\n            if (this.model.get(\"searchable\")) {\n                this.$select.select2(this.model.get(\"disabled\") ? \"disable\" : \"enable\");\n            } else {\n                this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n            }\n        },\n\n        /** Searchable fields may display a spinner e.g. while waiting for a server response */\n        _changeWait: function() {\n            this.$dropdown\n                .removeClass()\n                .addClass(\"icon-dropdown fa\")\n                .addClass(this.model.get(\"wait\") ? \"fa-spinner fa-spin\" : \"fa-caret-down\");\n        },\n\n        /** Handles field visibility */\n        _changeVisible: function() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n            this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        /** Synchronizes the model value with the actually selected field value */\n        _changeValue: function() {\n            this._setValue(this.model.get(\"value\"));\n            if (this.model.get(\"multiple\")) {\n                if (this.all_button) {\n                    var value = this._getValue();\n                    this.all_button.value($.isArray(value) ? value.length : 0, this.length());\n                }\n            } else if (this._getValue() === null && !this.model.get(\"optional\")) {\n                this._setValue(this.first());\n            }\n        },\n\n        /** Return/Set current selection */\n        value: function(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return the first select option */\n        first: function() {\n            return this.data.length > 0 ? this.data[0].value : null;\n        },\n\n        /** Check if a value is an existing option */\n        exists: function(value) {\n            return _.findWhere(this.data, { value: value });\n        },\n\n        /** Return the label/text of the current selection */\n        text: function() {\n            var v = this._getValue();\n            var d = this.exists($.isArray(v) ? v[0] : v);\n            return d ? d.label : \"\";\n        },\n\n        /** Show the select field */\n        show: function() {\n            this.model.set(\"visible\", true);\n        },\n\n        /** Hide the select field */\n        hide: function() {\n            this.model.set(\"visible\", false);\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns true if the field is disabled */\n        disabled: function() {\n            return this.model.get(\"disabled\");\n        },\n\n        /** Enable the select field */\n        enable: function() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Disable the select field */\n        disable: function() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Update all available options at once */\n        add: function(options, sorter) {\n            _.each(this.model.get(\"data\"), function(v) {\n                v.keep && !_.findWhere(options, { value: v.value }) && options.push(v);\n            });\n            sorter && options && options.sort(sorter);\n            this.model.set(\"data\", options);\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Set the custom onchange callback function */\n        setOnChange: function(callback) {\n            this.model.set(\"onchange\", callback);\n        },\n\n        /** Number of available options */\n        length: function() {\n            return $.isArray(this.model.get(\"data\")) ? this.model.get(\"data\").length : 0;\n        },\n\n        /** Set value to dom */\n        _setValue: function(new_value) {\n            var self = this;\n            if (new_value === null || new_value === undefined) {\n                new_value = \"__null__\";\n            }\n            if (this.model.get(\"multiple\")) {\n                new_value = $.isArray(new_value) ? new_value : [new_value];\n            } else if ($.isArray(new_value)) {\n                if (new_value.length > 0) {\n                    new_value = new_value[0];\n                } else {\n                    new_value = \"__null__\";\n                }\n            }\n            if (this.model.get(\"searchable\")) {\n                if ($.isArray(new_value)) {\n                    var val = [];\n                    _.each(new_value, function(v) {\n                        var d = _.findWhere(self.data2, { id: v });\n                        d && val.push(d);\n                    });\n                    new_value = val;\n                } else {\n                    var d = _.findWhere(this.data2, { id: new_value });\n                    new_value = d;\n                }\n                this.$select.select2(\"data\", new_value);\n            } else {\n                this.$select.val(new_value);\n            }\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var val = null;\n            if (this.model.get(\"searchable\")) {\n                var selected = this.$select.select2(\"data\");\n                if (selected) {\n                    if ($.isArray(selected)) {\n                        val = [];\n                        selected.sort(function(a, b) {\n                            return a.order - b.order;\n                        });\n                        _.each(selected, function(v) {\n                            val.push(v.id);\n                        });\n                    } else {\n                        val = selected.id;\n                    }\n                }\n            } else {\n                val = this.$select.val();\n            }\n            return Utils.isEmpty(val) ? null : val;\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}