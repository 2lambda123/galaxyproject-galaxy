{"version":3,"sources":["mvc/ui/ui-drilldown.js"],"names":["define","Utils","Options","View","BaseIcons","extend","initialize","options","multiple","type","display","call","this","_setValue","new_value","prototype","undefined","header_index","_","each","self","v","values","isArray","element","list","_setState","header_id","is_expanded","$button","$","$subgroup","show","addClass","removeClass","_templateOptions","attach","$el","find","iterate","$tmpl","header","i","has_options","level","length","slice","new_header","$group","uid","append","label","value","name","push","_templateOption","model","get","_template","attr","id"],"mappings":"aACAA,QAAQ,cAAe,qBAAsB,SAASC,EAAOC,GA2GzD,OACIC,KA7GRD,EAAAE,UAAAC,QACQC,WAAA,SAAeC,GACfJ,EAAOD,KAAQE,EAAUC,SAAO,WAChCC,EAAYE,SAAA,YAAAD,EAAAE,KACRF,EAAQE,UAAOF,UAAQG,WAAWC,KAAlCC,KAAAL,IAMJM,UAAW,SAASC,GAApBD,GADAX,EAAAE,UAAAW,UAAAF,UAAAF,KAAAC,KAAAE,QACWE,IAAXH,GAA+B,OAAXC,GAAWF,KAAAK,aAAA,CAC3Bf,IAAQE,EAAAA,KACJU,EAAAA,EAAcE,QAAdF,GAA2BA,GAAsBA,GACjDI,EAAAC,KAAIC,EAAJ,SAAAC,GACIC,IAAAA,EAAWC,EAAAA,aAAFF,GACXF,EAAFA,KAAOG,EAAQ,SAAAE,GACPC,EAAAA,UAAYR,GAAL,SASvBS,UAAW,SAASC,EAAWC,GAD/B,IAAAC,EAAAjB,KAAAkB,EAAA,WAAAH,GACAD,EAAWd,KAAAkB,EAAA,aAAoBF,GAC3BC,EAAIA,KAAAA,cAAiBD,GACjBG,GACJF,EAAaG,OACTJ,EAAAA,YAAa,kBAAAK,SAAA,qBAEbJ,EAAQK,OAFZL,EAGOK,YAAA,mBAAAD,SAAA,oBAOXE,iBAAkB,WAKd,SAASC,EAAOC,EAAKV,GADrB,IAAAE,EAAAQ,EAAAC,KAAA,WAAAX,GACAE,EAASO,GAAT,QAAqBT,WACbE,EAAAA,UAAcS,GAAKT,EAAaF,KAAAA,kBAOxC,SAASY,EAAQC,EAAOjC,EAASkC,GADjCA,EAAAA,MACA,IAASF,IAAAA,KAAQC,EAAOjC,CACpBkC,IAAAA,EAASA,EAATC,GACKC,EAALC,EAAuBrC,SAAAqC,EAAArC,QAAAsC,OAAA,EACfD,EAAQrC,EAAZuC,MAAA,GACA1B,EAAIuB,aAAcC,EAAMrC,OAANwC,EAAuBxC,MAAQsC,GACjD,IAAIE,EAAAA,EAAAA,UACJ3B,GAAAA,EAAA,CACI4B,IAAAA,EAAW/C,EAAfgD,MACIN,EAAab,EAAA,WACTH,SAAAA,UAAYA,GACZE,SAAUC,yCAGVC,EAAYD,EAAE,UAGlBkB,SACIlB,YACKoB,GAGOC,SAAOP,yBACPQ,EAAAA,OANhBtB,EAAA,UAUAiB,OAAgBpB,GACRI,OACDmB,EAAOnB,iBACCJ,MAAAA,EAAf0B,KACGD,MAAAR,EAAAQ,UAEsBL,EADzBO,KAAA3B,GAMHY,EAAAR,EAAAa,EAAArC,QAAAwC,GACDP,EAAMU,OAAOF,GAChBZ,EAAAY,EAAArB,QAROqB,EAAOE,OAWnB9B,EAAAmC,iBACcJ,MAAdP,EAAAS,KACoBG,MAAMC,EAAIL,SAIlCZ,EAAAU,OAAAF,IA9DA,IAAA5B,EAAAR,KACAuB,KAAAA,gBAwDI,IAAIK,EAAQV,EAAE,UAclB3B,OADGoC,EAAAC,EAAA5B,KAAA4C,MAAAC,IAAA,SACGtD,GARNuD,UAAW,WACP,OAAO5B,EAAE,UACJG,SAAS,uCACT0B,KAAK,KAAM/C,KAAK4C,MAAMI","file":"../../../scripts/mvc/ui/ui-drilldown.js","sourcesContent":["/** This class creates/wraps a drill down element. */\ndefine([\"utils/utils\", \"mvc/ui/ui-options\"], function(Utils, Options) {\n    var View = Options.BaseIcons.extend({\n        initialize: function(options) {\n            options.type = options.display || \"checkbox\";\n            options.multiple = options.type == \"checkbox\";\n            Options.BaseIcons.prototype.initialize.call(this, options);\n        },\n\n        /** Set states for selected values */\n        _setValue: function(new_value) {\n            Options.BaseIcons.prototype._setValue.call(this, new_value);\n            if (new_value !== undefined && new_value !== null && this.header_index) {\n                var self = this;\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function(v) {\n                    var list = self.header_index[v];\n                    _.each(list, function(element) {\n                        self._setState(element, true);\n                    });\n                });\n            }\n        },\n\n        /** Expand/collapse a sub group */\n        _setState: function(header_id, is_expanded) {\n            var $button = this.$(\".button-\" + header_id);\n            var $subgroup = this.$(\".subgroup-\" + header_id);\n            $button.data(\"is_expanded\", is_expanded);\n            if (is_expanded) {\n                $subgroup.show();\n                $button.removeClass(\"fa-plus-square\").addClass(\"fa-minus-square\");\n            } else {\n                $subgroup.hide();\n                $button.removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\");\n            }\n        },\n\n        /** Template to create options tree */\n        _templateOptions: function() {\n            var self = this;\n            this.header_index = {};\n\n            // attach event handler\n            function attach($el, header_id) {\n                var $button = $el.find(\".button-\" + header_id);\n                $button.on(\"click\", function() {\n                    self._setState(header_id, !$button.data(\"is_expanded\"));\n                });\n            }\n\n            // recursive function which iterates through options\n            function iterate($tmpl, options, header) {\n                header = header || [];\n                for (var i in options) {\n                    var level = options[i];\n                    var has_options = level.options && level.options.length > 0;\n                    var new_header = header.slice(0);\n                    self.header_index[level.value] = new_header.slice(0);\n                    var $group = $(\"<div/>\");\n                    if (has_options) {\n                        var header_id = Utils.uid();\n                        var $button = $(\"<span/>\")\n                            .addClass(\"button-\" + header_id)\n                            .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                        var $subgroup = $(\"<div/>\")\n                            .addClass(\"subgroup-\" + header_id)\n                            .addClass(\"ui-drilldown-subgroup\");\n                        $group.append(\n                            $(\"<div/>\")\n                                .append($button)\n                                .append(\n                                    self._templateOption({\n                                        label: level.name,\n                                        value: level.value\n                                    })\n                                )\n                        );\n                        new_header.push(header_id);\n                        iterate($subgroup, level.options, new_header);\n                        $group.append($subgroup);\n                        attach($group, header_id);\n                    } else {\n                        $group.append(\n                            self._templateOption({\n                                label: level.name,\n                                value: level.value\n                            })\n                        );\n                    }\n                    $tmpl.append($group);\n                }\n            }\n\n            // iterate through options and create dom\n            var $tmpl = $(\"<div/>\");\n            iterate($tmpl, this.model.get(\"data\"));\n            return $tmpl;\n        },\n\n        /** Template for drill down view */\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"ui-options-list drilldown-container\")\n                .attr(\"id\", this.model.id);\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}