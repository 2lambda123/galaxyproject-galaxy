{"version":3,"sources":["mvc/ui/ui-frames.js"],"names":["define","FrameView","Backbone","View","extend","initialize","options","Model","this","self","$","addClass","model","setElement","append","placement","title","$title","find","isFunction","option","disabled","$option","on","listenTo","tooltip","render","$header","html","url","remove","_","each","$content","content","icon","attr","onclick","cell","scroll","top_min","frame_max","indexOf","top_max","visible","event","frame","rows","top","margin","frame_shadow","el","cols","frame_z","frame_counter","frame_uid","_panelRefresh","defaults","add","$el","body","buttons","width","height","Close","show","hide","window","resize","frame_id","Galaxy","modal","_toPixelCoord","_frameInit","_frameInsert","trigger","fadeOut","frame_list","parseInt","css","fadeIn","_frameResize","left","del","$frame","id","_panelAnimationComplete","mousewheel","DOMMouseScroll","type","length","x","mousemove","mouseup","mouseleave","_eventFrameMouseMove","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","originalEvent","event_xy_new","e","y","target","hasClass","p","_frameScreen","event_xy_delta","min_dim","_toGridCoord","xy","l","_eventFrameMouseUp","_frameDragStop","max","Math","_eventFrameClose","preventDefault","_frameIdentify","_frameOffset","_eventPanelScroll","_panelScroll","srcElement","parents","stopPropagation","_frameDragStart","detail","wheelDelta","_eventPanelScroll_down","sign","closest","px","_frameFocus","_frameGrid","grid_location","_toGrid","_toPixel","_isCollision","is_collision_pair","g","_locationRank","loc","animate","screen_location","a","top_new","min","b","grid_rank","substring","place_list","push","delta","i","_framePlace","done","new_loc","console","log","f","place","j","has_focus"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-frames.js","sourcesContent":["define([], function() {\n    /** Frame view */\n    var FrameView = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model = (options && options.model) || new Backbone.Model(options);\n            this.setElement($(\"<div/>\").addClass(\"corner frame\"));\n            this.$el\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-header corner\")\n                        .append($(\"<div/>\").addClass(\"f-title\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"f-icon f-close fa fa-close\")\n                                .tooltip({\n                                    title: \"Close\",\n                                    placement: \"bottom\"\n                                })\n                        )\n                )\n                .append($(\"<div/>\").addClass(\"f-content\"))\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"f-resize f-icon corner fa fa-expand\")\n                        .tooltip({ title: \"Resize\" })\n                )\n                .append($(\"<div/>\").addClass(\"f-cover\"));\n            this.$header = this.$(\".f-header\");\n            this.$title = this.$(\".f-title\");\n            this.$content = this.$(\".f-content\");\n            this.render();\n            this.listenTo(this.model, \"change\", this.render, this);\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$title.html(options.title || \"\");\n            this.$header.find(\".f-icon-left\").remove();\n            _.each(options.menu, function(option) {\n                var $option = $(\"<div/>\")\n                    .addClass(\"f-icon-left\")\n                    .addClass(option.icon);\n                if (_.isFunction(option.disabled) && option.disabled()) {\n                    $option.attr(\"disabled\", true);\n                } else {\n                    $option\n                        .on(\"click\", function() {\n                            option.onclick(self);\n                        })\n                        .tooltip({\n                            title: option.tooltip,\n                            placement: \"bottom\"\n                        });\n                }\n                self.$header.append($option);\n            });\n            if (options.url) {\n                this.$content.html(\n                    $(\"<iframe/>\")\n                        .addClass(\"f-iframe\")\n                        .attr(\"scrolling\", \"auto\")\n                        .attr(\"src\", options.url + (options.url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"widget=True\")\n                );\n            } else if (options.content) {\n                _.isFunction(options.content) ? options.content(self.$content) : self.$content.html(options.content);\n            }\n        }\n    });\n\n    /** Scratchbook viewer */\n    var View = Backbone.View.extend({\n        defaultOptions: {\n            frame: {\n                // default frame size in cells\n                cols: 6,\n                rows: 3\n            },\n            rows: 1000, // maximum number of rows\n            cell: 130, // cell size in px\n            margin: 5, // margin between frames\n            scroll: 5, // scroll speed\n            top_min: 40, // top margin\n            frame_max: 9, // maximum number of frames\n            visible: true // initial visibility\n        },\n\n        cols: 0, // number of columns\n        top: 0, // scroll/element top\n        top_max: 0, // viewport scrolling state\n        frame_z: 0, // frame z-index\n        frame_counter: 0, // frame counter\n        frame_uid: 0, // unique frame id counter\n        frame_list: {}, // list of all frames\n        frame_shadow: null, // frame shown as placeholder when moving active frames\n        visible: false, // flag indicating if scratchbook viewer is visible or not\n        event: {}, // dictionary keeping track of current event\n\n        initialize: function(options) {\n            var self = this;\n            this.options = _.defaults(options || {}, this.defaultOptions);\n            this.visible = this.options.visible;\n            this.top = this.top_max = this.options.top_min;\n            this.setElement(\n                $(\"<div/>\")\n                    .addClass(\"galaxy-frame\")\n                    .append($(\"<div/>\").addClass(\"frame-background\"))\n                    .append($(\"<div/>\").addClass(\"frame-menu frame-scroll-up fa fa-chevron-up fa-2x\"))\n                    .append($(\"<div/>\").addClass(\"frame-menu frame-scroll-down fa fa-chevron-down fa-2x\"))\n            );\n\n            // initialize shadow to guiding drag/resize events\n            this.frame_shadow = new Backbone.View({\n                el: $(\"<div/>\").addClass(\"corner frame-shadow\")\n            });\n            this.$el.append(this.frame_shadow.$el);\n            this._frameInit(this.frame_shadow, \"#frame-shadow\");\n            this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n            this.frame_list[\"#frame-shadow\"] = this.frame_shadow;\n\n            // initialize panel\n            this.visible ? this.show() : this.hide();\n            this._panelRefresh();\n            $(window).resize(function() {\n                self.visible && self._panelRefresh();\n            });\n        },\n\n        /** Render */\n        render: function() {\n            this.$(\".frame-scroll-up\")[(this.top != this.options.top_min && \"show\") || \"hide\"]();\n            this.$(\".frame-scroll-down\")[(this.top != this.top_max && \"show\") || \"hide\"]();\n        },\n\n        /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n        add: function(options) {\n            if (this.frame_counter >= this.options.frame_max) {\n                Galaxy.modal.show({\n                    title: \"Warning\",\n                    body: \"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\",\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            } else {\n                var frame_id = \"#frame-\" + this.frame_uid++;\n                if ($(frame_id).length !== 0) {\n                    Galaxy.modal.show({\n                        title: \"Error\",\n                        body: \"This frame already exists. This page might contain multiple frame managers.\",\n                        buttons: {\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                } else {\n                    // initialize new frame elements\n                    this.top = this.options.top_min;\n                    var frame = new FrameView(options);\n                    this.$el.append(frame.$el);\n\n                    // set dimensions\n                    options.width = this._toPixelCoord(\"width\", this.options.frame.cols);\n                    options.height = this._toPixelCoord(\"height\", this.options.frame.rows);\n\n                    // set default z-index and add to ui and frame list\n                    this.frame_z = parseInt(frame.$el.css(\"z-index\"));\n                    this.frame_list[frame_id] = frame;\n                    this.frame_counter++;\n                    this._frameInit(frame, frame_id);\n                    this._frameResize(frame, {\n                        width: options.width,\n                        height: options.height\n                    });\n                    this._frameInsert(frame, { top: 0, left: 0 }, true);\n                    !this.visible && this.show();\n                    this.trigger(\"add\");\n                }\n            }\n        },\n\n        /** Remove a frame */\n        del: function(frame) {\n            var self = this;\n            var $frame = frame.$el;\n            $frame.fadeOut(\"fast\", function() {\n                $frame.remove();\n                delete self.frame_list[frame.id];\n                self.frame_counter--;\n                self._panelRefresh(true);\n                self._panelAnimationComplete();\n                self.trigger(\"remove\");\n            });\n        },\n\n        /** Show panel */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n            this.trigger(\"show\");\n        },\n\n        /** Hide panel */\n        hide: function() {\n            if (!this.event.type) {\n                this.visible = false;\n                this.$el.fadeOut(\"fast\", function() {\n                    $(this).hide();\n                });\n                this.trigger(\"hide\");\n            }\n        },\n\n        /** Returns the number of frames */\n        length: function() {\n            return this.frame_counter;\n        },\n\n        /*\n        EVENT HANDLING\n    */\n        events: {\n            // global frame events\n            mousemove: \"_eventFrameMouseMove\",\n            mouseup: \"_eventFrameMouseUp\",\n            mouseleave: \"_eventFrameMouseUp\",\n            mousewheel: \"_eventPanelScroll\",\n            DOMMouseScroll: \"_eventPanelScroll\",\n\n            // events fixed to elements\n            \"mousedown .frame\": \"_eventFrameMouseDown\",\n            \"mousedown .frame-background\": \"_eventHide\",\n            \"mousedown .frame-scroll-up\": \"_eventPanelScroll_up\",\n            \"mousedown .frame-scroll-down\": \"_eventPanelScroll_down\",\n            \"mousedown .f-close\": \"_eventFrameClose\"\n        },\n\n        /** Start drag/resize event */\n        _eventFrameMouseDown: function(e) {\n            $(\".tooltip\").hide();\n            if (!this.event.type) {\n                if ($(e.target).hasClass(\"f-header\") || $(e.target).hasClass(\"f-title\")) {\n                    this.event.type = \"drag\";\n                }\n                if ($(e.target).hasClass(\"f-resize\")) {\n                    this.event.type = \"resize\";\n                }\n                if (this.event.type) {\n                    e.preventDefault();\n                    this.event.target = this._frameIdentify(e.target);\n                    this.event.xy = {\n                        x: e.originalEvent.pageX,\n                        y: e.originalEvent.pageY\n                    };\n                    this._frameDragStart(this.event.target);\n                }\n            }\n        },\n\n        /** Processes drag/resize events */\n        _eventFrameMouseMove: function(e) {\n            if (this.event.type) {\n                // get mouse motion and delta\n                var event_xy_new = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                var event_xy_delta = {\n                    x: event_xy_new.x - this.event.xy.x,\n                    y: event_xy_new.y - this.event.xy.y\n                };\n                this.event.xy = event_xy_new;\n\n                // get current screen position and size of frame\n                var p = this._frameScreen(this.event.target);\n\n                // drag/resize event\n                if (this.event.type == \"resize\") {\n                    p.width += event_xy_delta.x;\n                    p.height += event_xy_delta.y;\n                    var min_dim = this.options.cell - this.options.margin - 1;\n                    p.width = Math.max(p.width, min_dim);\n                    p.height = Math.max(p.height, min_dim);\n                    this._frameResize(this.event.target, p);\n                    p.width = this._toGridCoord(\"width\", p.width) + 1;\n                    p.height = this._toGridCoord(\"height\", p.height) + 1;\n                    p.width = this._toPixelCoord(\"width\", p.width);\n                    p.height = this._toPixelCoord(\"height\", p.height);\n                    this._frameResize(this.frame_shadow, p);\n                    this._frameInsert(this.frame_shadow, {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    });\n                } else if (this.event.type == \"drag\") {\n                    p.left += event_xy_delta.x;\n                    p.top += event_xy_delta.y;\n                    this._frameOffset(this.event.target, p);\n                    var l = {\n                        top: this._toGridCoord(\"top\", p.top),\n                        left: this._toGridCoord(\"left\", p.left)\n                    };\n                    l.left !== 0 && l.left++;\n                    this._frameInsert(this.frame_shadow, l);\n                }\n            }\n        },\n\n        /** Stop drag/resize events */\n        _eventFrameMouseUp: function(e) {\n            if (this.event.type) {\n                this._frameDragStop(this.event.target);\n                this.event.type = null;\n            }\n        },\n\n        /** Destroy a frame */\n        _eventFrameClose: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this.del(this._frameIdentify(e.target));\n            }\n        },\n\n        /** Hide all frames */\n        _eventHide: function(e) {\n            !this.event.type && this.hide();\n        },\n\n        /** Fired when scrolling occurs on panel */\n        _eventPanelScroll: function(e) {\n            if (!this.event.type && this.visible) {\n                // Stop propagation if scrolling is happening inside a frame.\n                // TODO: could propagate scrolling if at top/bottom of frame.\n                var frames = $(e.srcElement).parents(\".frame\");\n                if (frames.length !== 0) {\n                    e.stopPropagation();\n                } else {\n                    e.preventDefault();\n                    this._panelScroll(\n                        e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3\n                    );\n                }\n            }\n        },\n\n        /** Handle scroll up event */\n        _eventPanelScroll_up: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(-this.options.scroll);\n            }\n        },\n\n        /** Handle scroll down */\n        _eventPanelScroll_down: function(e) {\n            if (!this.event.type) {\n                e.preventDefault();\n                this._panelScroll(this.options.scroll);\n            }\n        },\n\n        /*\n        FRAME EVENTS SUPPORT\n    */\n\n        /** Identify the target frame */\n        _frameIdentify: function(target) {\n            return this.frame_list[\n                \"#\" +\n                    $(target)\n                        .closest(\".frame\")\n                        .attr(\"id\")\n            ];\n        },\n\n        /** Provides drag support */\n        _frameDragStart: function(frame) {\n            this._frameFocus(frame, true);\n            var p = this._frameScreen(frame);\n            this._frameResize(this.frame_shadow, p);\n            this._frameGrid(this.frame_shadow, frame.grid_location);\n            frame.grid_location = null;\n            this.frame_shadow.$el.show();\n            $(\".f-cover\").show();\n        },\n\n        /** Removes drag support */\n        _frameDragStop: function(frame) {\n            this._frameFocus(frame, false);\n            var p = this._frameScreen(this.frame_shadow);\n            this._frameResize(frame, p);\n            this._frameGrid(frame, this.frame_shadow.grid_location, true);\n            this.frame_shadow.grid_location = null;\n            this.frame_shadow.$el.hide();\n            $(\".f-cover\").hide();\n            this._panelAnimationComplete();\n        },\n\n        /*\n        GRID/PIXEL CONVERTER\n    */\n\n        /** Converts a pixel to a grid dimension */\n        _toGridCoord: function(type, px) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            type == \"top\" && (px -= this.top);\n            return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n        },\n\n        /** Converts a grid to a pixels dimension */\n        _toPixelCoord: function(type, g) {\n            var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n            var px = g * this.options.cell - sign * this.options.margin;\n            type == \"top\" && (px += this.top);\n            return px;\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toGrid: function(px) {\n            return {\n                top: this._toGridCoord(\"top\", px.top),\n                left: this._toGridCoord(\"left\", px.left),\n                width: this._toGridCoord(\"width\", px.width),\n                height: this._toGridCoord(\"height\", px.height)\n            };\n        },\n\n        /** Converts a pixel to a grid coordinate set */\n        _toPixel: function(g) {\n            return {\n                top: this._toPixelCoord(\"top\", g.top),\n                left: this._toPixelCoord(\"left\", g.left),\n                width: this._toPixelCoord(\"width\", g.width),\n                height: this._toPixelCoord(\"height\", g.height)\n            };\n        },\n\n        /* \n        COLLISION DETECTION\n    */\n\n        /** Check collisions for a grid coordinate set */\n        _isCollision: function(g) {\n            function is_collision_pair(a, b) {\n                return !(\n                    a.left > b.left + b.width - 1 ||\n                    a.left + a.width - 1 < b.left ||\n                    a.top > b.top + b.height - 1 ||\n                    a.top + a.height - 1 < b.top\n                );\n            }\n            for (var i in this.frame_list) {\n                var frame = this.frame_list[i];\n                if (frame.grid_location !== null && is_collision_pair(g, frame.grid_location)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        /** Return location/grid rank */\n        _locationRank: function(loc) {\n            return loc.top * this.cols + loc.left;\n        },\n\n        /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n        /** Refresh panel */\n        _panelRefresh: function(animate) {\n            this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n            this._frameInsert(null, null, animate);\n        },\n\n        /** Complete panel animation / frames not moving */\n        _panelAnimationComplete: function() {\n            var self = this;\n            $(\".frame\")\n                .promise()\n                .done(function() {\n                    self._panelScroll(0, true);\n                });\n        },\n\n        /** Scroll panel */\n        _panelScroll: function(delta, animate) {\n            var top_new = this.top - this.options.scroll * delta;\n            top_new = Math.max(top_new, this.top_max);\n            top_new = Math.min(top_new, this.options.top_min);\n            if (this.top != top_new) {\n                for (var i in this.frame_list) {\n                    var frame = this.frame_list[i];\n                    if (frame.grid_location !== null) {\n                        var screen_location = {\n                            top: frame.screen_location.top - (this.top - top_new),\n                            left: frame.screen_location.left\n                        };\n                        this._frameOffset(frame, screen_location, animate);\n                    }\n                }\n                this.top = top_new;\n            }\n            this.render();\n        },\n\n        /*\n        FRAME FUNCTIONS\n    */\n\n        /** Initialize a new frame */\n        _frameInit: function(frame, id) {\n            frame.id = id;\n            frame.screen_location = {};\n            frame.grid_location = {};\n            frame.grid_rank = null;\n            frame.$el.attr(\"id\", id.substring(1));\n        },\n\n        /** Insert frame at given location */\n        _frameInsert: function(frame, new_loc, animate) {\n            var self = this;\n            var place_list = [];\n            if (frame) {\n                frame.grid_location = null;\n                place_list.push([frame, this._locationRank(new_loc)]);\n            }\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    f.grid_location = null;\n                    place_list.push([f, f.grid_rank]);\n                }\n            });\n            place_list.sort(function(a, b) {\n                return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\n            });\n            _.each(place_list, function(place) {\n                self._framePlace(place[0], animate);\n            });\n            this.top_max = 0;\n            _.each(this.frame_list, function(f) {\n                if (f.grid_location !== null) {\n                    self.top_max = Math.max(self.top_max, f.grid_location.top + f.grid_location.height);\n                }\n            });\n            this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n            this.top_max = Math.min(this.top_max, this.options.top_min);\n            this.render();\n        },\n\n        /** Naive frame placement */\n        _framePlace: function(frame, animate) {\n            frame.grid_location = null;\n            var g = this._toGrid(this._frameScreen(frame));\n            var done = false;\n            for (var i = 0; i < this.options.rows; i++) {\n                for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                    g.top = i;\n                    g.left = j;\n                    if (!this._isCollision(g)) {\n                        done = true;\n                        break;\n                    }\n                }\n                if (done) {\n                    break;\n                }\n            }\n            if (done) {\n                this._frameGrid(frame, g, animate);\n            } else {\n                console.log(\"Grid dimensions exceeded.\");\n            }\n        },\n\n        /** Handle frame focussing */\n        _frameFocus: function(frame, has_focus) {\n            frame.$el.css(\"z-index\", this.frame_z + (has_focus ? 1 : 0));\n        },\n\n        /** New left/top position frame */\n        _frameOffset: function(frame, p, animate) {\n            frame.screen_location.left = p.left;\n            frame.screen_location.top = p.top;\n            if (animate) {\n                this._frameFocus(frame, true);\n                var self = this;\n                frame.$el.animate({ top: p.top, left: p.left }, \"fast\", function() {\n                    self._frameFocus(frame, false);\n                });\n            } else {\n                frame.$el.css({ top: p.top, left: p.left });\n            }\n        },\n\n        /** Resize frame */\n        _frameResize: function(frame, p) {\n            frame.$el.css({ width: p.width, height: p.height });\n            frame.screen_location.width = p.width;\n            frame.screen_location.height = p.height;\n        },\n\n        /** Push frame to new grid location */\n        _frameGrid: function(frame, l, animate) {\n            frame.grid_location = l;\n            this._frameOffset(frame, this._toPixel(l), animate);\n            frame.grid_rank = this._locationRank(l);\n        },\n\n        /** Get frame dimensions */\n        _frameScreen: function(frame) {\n            var p = frame.screen_location;\n            return {\n                top: p.top,\n                left: p.left,\n                width: p.width,\n                height: p.height\n            };\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}