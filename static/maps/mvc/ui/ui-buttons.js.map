{"version":3,"sources":["mvc/ui/ui-buttons.js"],"names":["define","Utils","ButtonDefault","Backbone","View","initialize","options","model","uid","title","icon","cls","wait","wait_text","wait_cls","disabled","percentage","this","setElement","$","listenTo","render","append","$icon","$title","$progress","$progress_bar","attributes","$el","tooltip","self","addClass","attr","id","off","on","html","onclick","placement","css","width","removeClass","show","prop","hide","enable","disable","unwait","set","setIcon","ButtonLink","href","target","ButtonCheck","icons","value","onchange","extend","Model","new_val","ButtonIcon","get","total","ButtonMenu","pull","onunload","visible","tag","collection","display","$root","e","preventDefault","$menu","$button","suboptions","$link","divider","Collection","where","length","remove","each","submodel","addMenu","add","merge"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-buttons.js","sourcesContent":["/** This module contains all button views. */\ndefine([\"utils/utils\"], function(Utils) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"btn btn-default\",\n                    wait: false,\n                    wait_text: \"Sending...\",\n                    wait_cls: \"btn btn-info\",\n                    disabled: false,\n                    percentage: -1\n                }).set(options);\n            this.setElement(\n                $(\"<button/>\")\n                    .attr(\"type\", \"button\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\")))\n                    .append((this.$progress = $(\"<div/>\").append((this.$progress_bar = $(\"<div/>\")))))\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(\"ui-button-default\")\n                .addClass(options.disabled && \"disabled\")\n                .attr(\"id\", options.id)\n                .attr(\"disabled\", options.disabled)\n                .off(\"click\")\n                .on(\"click\", function() {\n                    $(\".tooltip\").hide();\n                    options.onclick && !self.disabled && options.onclick();\n                })\n                .tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$progress.addClass(\"progress\").css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n            this.$progress_bar.addClass(\"progress-bar\").css({ width: options.percentage + \"%\" });\n            this.$icon.removeClass().addClass(\"icon fa\");\n            this.$title.removeClass().addClass(\"title\");\n            if (options.wait) {\n                this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n                this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n                this.$title.html(options.wait_text);\n            } else {\n                this.$el.addClass(options.cls);\n                this.$icon.addClass(options.icon);\n                this.$title.html(options.title);\n                options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n            }\n        },\n\n        /** Show button */\n        show: function() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Enable button */\n        enable: function() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Change icon */\n        setIcon: function(icon) {\n            this.model.set(\"icon\", icon);\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"\"\n                }).set(options);\n            this.setElement($(\"<a/>\").append((this.$icon = $(\"<span/>\"))));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .attr({\n                    id: options.id,\n                    href: options.href || \"javascript:void(0)\",\n                    title: options.title,\n                    target: options.target || \"_top\",\n                    disabled: options.disabled\n                })\n                .tooltip({ placement: \"bottom\" })\n                .off(\"click\")\n                .on(\"click\", function() {\n                    options.onclick && !options.disabled && options.onclick();\n                });\n            this.$icon.removeClass().addClass(options.icon);\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"Select/Unselect all\",\n                    icons: [\"fa-square-o\", \"fa-minus-square-o\", \"fa-check-square-o\"],\n                    value: 0,\n                    onchange: function() {}\n                }).set(options);\n            this.setElement(\n                $(\"<div/>\")\n                    .append((this.$icon = $(\"<span/>\")))\n                    .append((this.$title = $(\"<span/>\")))\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .addClass(\"ui-button-check\")\n                .off(\"click\")\n                .on(\"click\", function() {\n                    self.model.set(\"value\", (self.model.get(\"value\") === 0 && 2) || 0);\n                    options.onclick && options.onclick();\n                });\n            this.$title.html(options.title);\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa ui-margin-right\")\n                .addClass(options.icons[options.value]);\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function(new_val, total) {\n            if (new_val !== undefined) {\n                if (total && new_val !== 0) {\n                    new_val = (new_val !== total && 1) || 2;\n                }\n                this.model.set(\"value\", new_val);\n                this.model.get(\"onchange\")(this.model.get(\"value\"));\n            }\n            return this.model.get(\"value\");\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"ui-button-icon\",\n                    disabled: false\n                }).set(options);\n            this.setElement(\n                $(\"<div/>\").append(\n                    (this.$button = $(\"<div/>\")\n                        .append((this.$icon = $(\"<i/>\")))\n                        .append((this.$title = $(\"<span/>\"))))\n                )\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .addClass(options.disabled && \"disabled\")\n                .attr(\"disabled\", options.disabled)\n                .attr(\"id\", options.id)\n                .off(\"click\")\n                .on(\"click\", function() {\n                    $(\".tooltip\").hide();\n                    !options.disabled && options.onclick && options.onclick();\n                });\n            this.$button.addClass(\"button\").tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa\")\n                .addClass(options.icon);\n            this.$title.addClass(\"title\").html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: \"\",\n                    title: \"\",\n                    pull: \"right\",\n                    icon: null,\n                    onclick: null,\n                    cls: \"ui-button-icon ui-button-menu\",\n                    tooltip: \"\",\n                    target: \"\",\n                    href: \"\",\n                    onunload: null,\n                    visible: true,\n                    tag: \"\"\n                }).set(options);\n            this.collection = new Backbone.Collection();\n            this.setElement(\n                $(\"<div/>\").append(\n                    (this.$root = $(\"<div/>\")\n                        .append((this.$icon = $(\"<i/>\")))\n                        .append((this.$title = $(\"<span/>\"))))\n                )\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.listenTo(this.collection, \"change add remove reset\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(\"dropdown\")\n                .addClass(options.cls)\n                .attr(\"id\", options.id)\n                .css({\n                    display: options.visible && this.collection.where({ visible: true }).length > 0 ? \"block\" : \"none\"\n                });\n            this.$root\n                .addClass(\"root button dropdown-toggle\")\n                .attr(\"data-toggle\", \"dropdown\")\n                .tooltip({ title: options.tooltip, placement: \"bottom\" })\n                .off(\"click\")\n                .on(\"click\", function(e) {\n                    $(\".tooltip\").hide();\n                    e.preventDefault();\n                    options.onclick && options.onclick();\n                });\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa\")\n                .addClass(options.icon);\n            this.$title\n                .removeClass()\n                .addClass(\"title\")\n                .html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n            this.$menu && this.$menu.remove();\n            if (this.collection.length > 0) {\n                this.$menu = $(\"<ul/>\")\n                    .addClass(\"menu dropdown-menu\")\n                    .addClass(\"pull-\" + self.model.get(\"pull\"))\n                    .attr(\"role\", \"menu\");\n                this.$el.append(this.$menu);\n            }\n            this.collection.each(function(submodel) {\n                var suboptions = submodel.attributes;\n                if (suboptions.visible) {\n                    var $link = $(\"<a/>\")\n                        .addClass(\"dropdown-item\")\n                        .attr({\n                            href: suboptions.href,\n                            target: suboptions.target\n                        })\n                        .append(\n                            $(\"<i/>\")\n                                .addClass(\"fa\")\n                                .addClass(suboptions.icon)\n                                .css(\"display\", suboptions.icon ? \"inline-block\" : \"none\")\n                        )\n                        .append(suboptions.title)\n                        .on(\"click\", function(e) {\n                            if (suboptions.onclick) {\n                                e.preventDefault();\n                                suboptions.onclick();\n                            }\n                        });\n                    self.$menu.append($(\"<li/>\").append($link));\n                    suboptions.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function(options) {\n            this.collection.add(\n                Utils.merge(options, {\n                    title: \"\",\n                    target: \"\",\n                    href: \"\",\n                    onclick: null,\n                    divider: false,\n                    visible: true,\n                    icon: null,\n                    cls: \"button-menu btn-group\"\n                })\n            );\n        }\n    });\n\n    return {\n        ButtonDefault: ButtonDefault,\n        ButtonLink: ButtonLink,\n        ButtonIcon: ButtonIcon,\n        ButtonCheck: ButtonCheck,\n        ButtonMenu: ButtonMenu\n    };\n});\n"]}