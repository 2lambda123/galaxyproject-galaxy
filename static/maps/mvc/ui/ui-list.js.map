{"version":3,"sources":["mvc/ui/ui-list.js"],"names":["define","Utils","Portlet","Ui","View","Backbone","extend","initialize","this","options","name","multiple","message","Message","portlet","cls","select","Select","optional","button","ButtonIcon","icon","tooltip","add","onclick","self","value","text","setElement","_template","$","append","$el","val","undefined","empty","isArray","i","v_id","v","v_name","id","_refresh","lst","each","prop","push","length","isEmpty","status","update","remove","on","addClass","disable","show","enable","onchange","_templateRow"],"mappings":"aACAA,QAAQ,cAAe,oBAAqB,kBAAmB,SAASC,EAAOC,EAASC,GAsKpF,OACIC,KAvKAC,SAAeD,KAAAE,QAEfF,WAAOC,SAAcC,GAErBC,IAAAA,EAAYC,KAKRA,KAAKC,QAAUA,EADfD,KAAAE,KAAAD,EAAAC,MAAA,UACAF,KAAKC,SAAUA,EAAfE,WAAA,EAKAH,KAAKI,QAAU,IAAIT,EAAGU,QAGtBL,KAAKM,QAAU,IAAIZ,EAAQE,MAAOW,IAAK,uBAGvCP,KAAKQ,OAAS,IAAIb,EAAGc,OAAOb,MAAOc,SAAUT,EAAQS,WAGrDV,KAAKW,OAAS,IAAIhB,EAAGiB,YADrBC,KAAA,gBACAC,QAAA,cAAqBF,KAAWV,KAC5BW,QAAM,WACNC,EAASC,KACTC,GAASC,EAAAT,OAAAU,QACLD,KAASA,EAAAT,OAAAW,YAQjBnB,KAAKoB,WAAWpB,KAAKqB,UAAUpB,IAD/BD,KAAAsB,EAAA,oBAAAC,OAAAvB,KAAAI,QAAAoB,KACAxB,KAAKoB,EAAAA,oBAAgBC,OAAUpB,KAA/BK,QAAAkB,KACAxB,KAAKsB,EAAE,mBAAPC,OAAAvB,KAAkCW,OAAKP,KACvCJ,KAAKsB,EAAE,mBAAPC,OAAAvB,KAAkCQ,OAAKF,MAM3CY,MAAO,SAASO,GAAhBP,QAAOQ,IAAAD,EAAc,CAEbA,GADJzB,KAAAM,QAAAqB,QACIF,EAAAA,QAAQC,GACR,IAAKpB,IAAQqB,KAAbF,EAAA,CACMG,IAAAA,EAAQH,EAAMI,GACXC,EAASL,KACNM,EAAI,KACR,UAAID,EAAAA,KAAOC,IACPC,EAAAA,EAASC,GACTX,EAAAS,EAAA7B,MAEA8B,EAAAA,EAAAD,EAEOC,MAAPF,GACH9B,KAAAe,KACGe,GAAQA,EACR5B,KAAS8B,IAKhBhC,KAAAkC,WAGR,IAAAC,KAWD,OAVAnC,KAAAsB,EAAA,eAAAc,KAAA,WACID,EAAAA,MACGF,GAAAX,EAAAtB,MAAPqC,KAAsBD,MACdE,KAAKhB,EAAAtB,MACDsB,KAAA,iBACJpB,WAKU,GAAdiC,EAAII,OACG,KAEJJ,GAIXpB,IAAK,SAAAd,GACD,IAAIgB,EAAOjB,KACX,GAAmD,IAA/CA,KAAKsB,EAAE,QAAUrB,EAAQgC,GAAK,MAAMM,OACpC,GAAK9C,EAAM+C,QAAQvC,EAAQgC,IAsBnBQ,KAAAA,QAAQC,QAFZtC,QAAA,yBAAAJ,KAAAE,KAAA,IAIHuC,OAAA,eAxB+B,CAC5B,IAAIjB,EAAMF,EAEFW,KAAIhC,cACJC,GAAMD,EAAQC,GAHtBA,KAAAD,EAAAC,QAQIe,EAAAA,GAAAA,QAAKiB,WAFTV,EAAAmB,SAIIC,EAAGV,aAENV,EAFDoB,GAAA,YAAA,WAGIA,EAAGC,SAAP,uBAECrB,EAFDoB,GAAA,WAAA,WAGApB,EAAKlB,YAAekB,uBAjBxBxB,KAmBOM,QAAAiB,OAAAC,GACHxB,KAAKI,gBAMWJ,KAApBI,QAAAsC,QAGHtC,QAAA,QAAAJ,KAAAE,KAAA,8BAMJwC,OAzH2B,SAAAzC,GAwHxBD,KAAKQ,OAAOkC,OAAOzC,IAMfiC,SAAC,WACDlC,KAAKsB,EAAE,eAAAiB,OAAP,IAFJvC,KAGOG,UAAAH,KAAAW,OAAAmC,UACH9C,KAAKW,EAAAA,oBAALoC,SAEH/C,KAAAW,OAAAqC,SACDhD,KAAKC,EAAAA,oBAAyBA,QAA9BD,KAAKC,QAAQgD,UAAYjD,KAAKC,QAAQgD,YAezC5B,UAnJ2B,SAAApB,GAyIxB,MAYJ,wLACAiD,aAAc,SAASjD,GACnB,MACI,YACAA,EAAQgC,GACR,6FAGAhC,EAAQC,KACR","file":"../../../scripts/mvc/ui/ui-list.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-portlet\", \"mvc/ui/ui-misc\"], function(Utils, Portlet, Ui) {\n    // ui list element\n    var View = Backbone.View.extend({\n        // create portlet to keep track of selected list elements\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // initialize options\n            this.options = options;\n            this.name = options.name || \"element\";\n            this.multiple = options.multiple || false;\n\n            // create message handler\n            this.message = new Ui.Message();\n\n            // create portlet\n            this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n            // create select field containing the options which can be inserted into the list\n            this.select = new Ui.Select.View({ optional: options.optional });\n\n            // create insert new list element button\n            this.button = new Ui.ButtonIcon({\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Insert new \" + this.name,\n                onclick: function() {\n                    self.add({\n                        id: self.select.value(),\n                        name: self.select.text()\n                    });\n                }\n            });\n\n            // build main element\n            this.setElement(this._template(options));\n            this.$(\".ui-list-message\").append(this.message.$el);\n            this.$(\".ui-list-portlet\").append(this.portlet.$el);\n            this.$(\".ui-list-button\").append(this.button.$el);\n            this.$(\".ui-list-select\").append(this.select.$el);\n        },\n\n        /** Return/Set currently selected list elements */\n        value: function(val) {\n            // set new value\n            if (val !== undefined) {\n                this.portlet.empty();\n                if ($.isArray(val)) {\n                    for (var i in val) {\n                        var v = val[i];\n                        var v_id = null;\n                        var v_name = null;\n                        if ($.type(v) != \"string\") {\n                            v_id = v.id;\n                            v_name = v.name;\n                        } else {\n                            v_id = v_name = v;\n                        }\n                        if (v_id != null) {\n                            this.add({\n                                id: v_id,\n                                name: v_name\n                            });\n                        }\n                    }\n                }\n                this._refresh();\n            }\n            // get current value\n            var lst = [];\n            this.$(\".ui-list-id\").each(function() {\n                lst.push({\n                    id: $(this).prop(\"id\"),\n                    name: $(this)\n                        .find(\".ui-list-name\")\n                        .html()\n                });\n            });\n            if (lst.length == 0) {\n                return null;\n            }\n            return lst;\n        },\n\n        /** Add row */\n        add: function(options) {\n            var self = this;\n            if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n                if (!Utils.isEmpty(options.id)) {\n                    var $el = $(\n                        this._templateRow({\n                            id: options.id,\n                            name: options.name\n                        })\n                    );\n                    $el.on(\"click\", function() {\n                        $el.remove();\n                        self._refresh();\n                    });\n                    $el.on(\"mouseover\", function() {\n                        $el.addClass(\"portlet-highlight\");\n                    });\n                    $el.on(\"mouseout\", function() {\n                        $el.removeClass(\"portlet-highlight\");\n                    });\n                    this.portlet.append($el);\n                    this._refresh();\n                } else {\n                    this.message.update({\n                        message: \"Please select a valid \" + this.name + \".\",\n                        status: \"danger\"\n                    });\n                }\n            } else {\n                this.message.update({\n                    message: \"This \" + this.name + \" is already in the list.\"\n                });\n            }\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.select.update(options);\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            if (this.$(\".ui-list-id\").length > 0) {\n                !this.multiple && this.button.disable();\n                this.$(\".ui-list-portlet\").show();\n            } else {\n                this.button.enable();\n                this.$(\".ui-list-portlet\").hide();\n            }\n            this.options.onchange && this.options.onchange();\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-list\">' +\n                '<div class=\"ui-margin-top\">' +\n                '<span class=\"ui-list-button\"/>' +\n                '<span class=\"ui-list-select\"/>' +\n                \"</div>\" +\n                '<div class=\"ui-list-message\"/>' +\n                '<div class=\"ui-list-portlet\"/>' +\n                \"</div>\"\n            );\n        },\n\n        /** Row Template */\n        _templateRow: function(options) {\n            return (\n                '<div id=\"' +\n                options.id +\n                '\" class=\"ui-list-id\">' +\n                '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                '<span class=\"ui-list-name\">' +\n                options.name +\n                \"</span>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}