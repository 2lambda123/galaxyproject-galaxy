{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["define","Utils","View","Backbone","extend","initialize","options","self","model","uid","min","max","step","precise","split","value","onchange","this","setElement","_template","$el","attr","id","$text","$","$slider","pressed","val","on","e","v","which","get","event","preventDefault","opts","has_slider","indexOf","addClass","slider","_isParameter","listenTo","attributes","isNaN","new_val","Math","ui","trigger","render","undefined","round","set","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["define([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    min: null,\n                    max: null,\n                    step: null,\n                    precise: false,\n                    split: 10000,\n                    value: null,\n                    onchange: function() {}\n                }).set(options);\n\n            // create new element\n            this.setElement(this._template());\n            this.$el.attr(\"id\", this.model.id);\n            this.$text = this.$(\".ui-form-slider-text\");\n            this.$slider = this.$(\".ui-form-slider-element\");\n\n            // add text field event\n            var pressed = [];\n            this.$text\n                .on(\"change\", function() {\n                    self.value($(this).val());\n                })\n                .on(\"keyup\", function(e) {\n                    pressed[e.which] = false;\n                })\n                .on(\"keydown\", function(e) {\n                    var v = e.which;\n                    pressed[v] = true;\n                    if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                        self.value(\"$\");\n                        event.preventDefault();\n                    } else if (\n                        !(\n                            v == 8 ||\n                            v == 9 ||\n                            v == 13 ||\n                            v == 37 ||\n                            v == 39 ||\n                            (v >= 48 && v <= 57 && !pressed[16]) ||\n                            (v >= 96 && v <= 105) ||\n                            ((v == 190 || v == 110) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\".\") == -1 &&\n                                self.model.get(\"precise\")) ||\n                            ((v == 189 || v == 109) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\"-\") == -1) ||\n                            self._isParameter($(this).val()) ||\n                            pressed[91] ||\n                            pressed[17]\n                        )\n                    ) {\n                        event.preventDefault();\n                    }\n                });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if (!step) {\n                if (opts.precise && this.has_slider) {\n                    step = (opts.max - opts.min) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if (this.has_slider) {\n                this.$text.addClass(\"ui-form-slider-left\");\n                this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on(\"slide\", function(event, ui) {\n                    self.value(ui.value);\n                });\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get(\"value\");\n            this.has_slider && this.$slider.slider(\"value\", value);\n            value !== this.$text.val() && this.$text.val(value);\n        },\n\n        /** Set and return the current value */\n        value: function(new_val) {\n            var options = this.model.attributes;\n            if (new_val !== undefined) {\n                if (new_val !== null && new_val !== \"\" && !this._isParameter(new_val)) {\n                    isNaN(new_val) && (new_val = 0);\n                    !options.precise && (new_val = Math.round(new_val));\n                    options.max !== null && (new_val = Math.min(new_val, options.max));\n                    options.min !== null && (new_val = Math.max(new_val, options.min));\n                }\n                this.model.set(\"value\", new_val);\n                this.model.trigger(\"change\");\n                options.onchange(new_val);\n            }\n            return this.model.get(\"value\");\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function(value) {\n            return this.model.get(\"is_workflow\") && String(value).substring(0, 1) === \"$\";\n        },\n\n        /** Slider template */\n        _template: function() {\n            return (\n                '<div class=\"ui-form-slider\">' +\n                '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                '<div class=\"ui-form-slider-element\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}