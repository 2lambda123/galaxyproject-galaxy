{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["define","Utils","Ui","Form","Table","Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","Galaxy","currHistoryPanel","model","id","this","self","Model","history_id","url","root","collection","optional","onchange","installed_builds","value","error_text","cls","selectable","table","addHeader","$","setElement","text","append","listenTo","_renderTable","$installed","addClass","$el","sort","message","$form","undefined","$help","onclick","fetch","render","initial_type","form","inputs","label","help","delAll","type","name","each","add","ButtonIcon","test_param","destroy","data","_renderForm","area","Button","wait","success","response","update","error","buttons","save","empty","create","hide","status","err","responseJSON","err_msg","input_id","match","input_field","field_list","_renderHelp","length","show","len_type","html","_templateFasta","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["/** This class renders the chart configuration form. */\ndefine([\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/form/form-view\", \"mvc/ui/ui-table\"], function(Utils, Ui, Form, Table) {\n    var Collection = Backbone.Collection.extend({\n        comparator: function(a, b) {\n            a = a.get(\"name\");\n            b = b.get(\"name\");\n            return a > b ? 1 : a < b ? -1 : 0;\n        }\n    });\n\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n            this.model = new Backbone.Model();\n            this.model.url = Galaxy.root + \"api/histories/\" + history_id + \"/custom_builds_metadata\";\n            this.collection = new Collection();\n            this.collection.url = Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n            this.message = new Ui.Message({});\n            this.installed_builds = new Ui.Select.View({\n                optional: true,\n                onchange: function() {\n                    self.installed_builds.value(null);\n                },\n                empty_text: \"List of available builds:\",\n                error_text: \"No system installed builds available.\"\n            });\n            this.table = new Table.View({ cls: \"grid\", selectable: false });\n            this.table.addHeader(\"Name\");\n            this.table.addHeader(\"Key\");\n            this.table.addHeader(\"Number of chroms/contigs\");\n            this.table.addHeader(\"\");\n            this.table.appendHeader();\n            this.setElement(\n                $(\"<div/>\")\n                    .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                    .append(this.table.$el)\n                    .append(\n                        (this.$installed = $(\"<div/>\")\n                            .append(\n                                $(\"<h4/>\")\n                                    .text(\"System Installed Builds\")\n                                    .addClass(\"ui-margin-top\")\n                            )\n                            .append(this.installed_builds.$el))\n                    )\n                    .append(\n                        $(\"<h4/>\")\n                            .text(\"Add a Custom Build\")\n                            .addClass(\"ui-margin-top\")\n                    )\n                    .append(\n                        $(\"<span/>\")\n                            .addClass(\"ui-column\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-column-left\")\n                                    .append(this.message.$el)\n                                    .append((this.$form = $(\"<div/>\").addClass(\"ui-margin-top\")))\n                            )\n                            .append((this.$help = $(\"<div/>\").addClass(\"ui-column-right\")))\n                    )\n            );\n            this.listenTo(this.collection, \"add remove reset\", function() {\n                self._renderTable();\n            });\n            this.listenTo(this.model, \"change\", function() {\n                self._renderForm();\n            });\n            this.collection.fetch();\n            this.model.fetch();\n        },\n\n        render: function() {\n            this._renderTable();\n            this._renderForm();\n        },\n\n        _renderTable: function() {\n            var self = this;\n            this.table.delAll();\n            this.collection.sort();\n            this.collection.each(function(model) {\n                self.table.add(model.get(\"name\"));\n                self.table.add(model.id);\n                self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n                self.table.add(\n                    new Ui.ButtonIcon({\n                        icon: \"fa-trash-o\",\n                        cls: \"ui-button-icon-plain\",\n                        tooltip: \"Delete custom build.\",\n                        onclick: function() {\n                            model.destroy();\n                        }\n                    }).$el\n                );\n                self.table.append(model.id);\n            });\n        },\n\n        _renderForm: function() {\n            var self = this;\n            var initial_type = \"fasta\";\n            var form = new Form({\n                inputs: [\n                    {\n                        type: \"text\",\n                        name: \"name\",\n                        label: \"Name\",\n                        help: \"Specify a build name e.g. Hamster.\"\n                    },\n                    {\n                        type: \"text\",\n                        name: \"id\",\n                        label: \"Key\",\n                        help: \"Specify a build key e.g. hamster_v1.\"\n                    },\n                    {\n                        name: \"len\",\n                        type: \"conditional\",\n                        test_param: {\n                            name: \"type\",\n                            label: \"Definition\",\n                            help: \"Provide the data source.\",\n                            type: \"select\",\n                            value: initial_type,\n                            data: [\n                                {\n                                    value: \"fasta\",\n                                    label: \"FASTA-file from history\"\n                                },\n                                {\n                                    value: \"file\",\n                                    label: \"Len-file from disk\"\n                                },\n                                {\n                                    value: \"text\",\n                                    label: \"Len-file by copy/paste\"\n                                }\n                            ]\n                        },\n                        cases: [\n                            {\n                                value: \"fasta\",\n                                inputs: [\n                                    {\n                                        type: \"select\",\n                                        name: \"value\",\n                                        label: \"FASTA-file\",\n                                        data: this.model.get(\"fasta_hdas\")\n                                    }\n                                ]\n                            },\n                            {\n                                value: \"file\",\n                                inputs: [\n                                    {\n                                        type: \"upload\",\n                                        name: \"value\",\n                                        label: \"Len-file\",\n                                        data: this.model.get(\"len_hdas\")\n                                    }\n                                ]\n                            },\n                            {\n                                value: \"text\",\n                                inputs: [\n                                    {\n                                        type: \"text\",\n                                        area: true,\n                                        name: \"value\",\n                                        label: \"Edit/Paste\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ],\n                buttons: {\n                    save: new Ui.Button({\n                        icon: \"fa-save\",\n                        tooltip: \"Create new Build\",\n                        title: \"Save\",\n                        cls: \"btn btn-primary ui-clear-float\",\n                        onclick: function() {\n                            var data = form.data.create();\n                            if (!data.id || !data.name) {\n                                self.message.update({\n                                    message: \"All inputs are required.\",\n                                    status: \"danger\"\n                                });\n                            } else {\n                                self.collection.create(data, {\n                                    wait: true,\n                                    success: function(response) {\n                                        if (response.get(\"message\")) {\n                                            self.message.update({\n                                                message: response.get(\"message\"),\n                                                status: \"warning\"\n                                            });\n                                        } else {\n                                            self.message.update({\n                                                message: \"Successfully added a new custom build.\",\n                                                status: \"success\"\n                                            });\n                                        }\n                                    },\n                                    error: function(response, err) {\n                                        var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                        self.message.update({\n                                            message: message || \"Failed to create custom build.\",\n                                            status: \"danger\"\n                                        });\n                                    }\n                                });\n                            }\n                        }\n                    })\n                },\n                onchange: function() {\n                    var input_id = form.data.match(\"len|type\");\n                    if (input_id) {\n                        var input_field = form.field_list[input_id];\n                        self._renderHelp(input_field.value());\n                    }\n                }\n            });\n            this.$form.empty().append(form.$el);\n            var installed_builds = this.model.get(\"installed_builds\");\n            if (installed_builds && installed_builds.length) {\n                this.$installed.show();\n                this.installed_builds.update(this.model.get(\"installed_builds\"));\n            } else {\n                this.$installed.hide();\n            }\n            this._renderHelp(initial_type);\n        },\n\n        _renderHelp: function(len_type) {\n            this.$help\n                .empty()\n                .addClass(\"alert alert-info\")\n                .html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n        },\n\n        _templateLen: function() {\n            return (\n                \"<h4>Length Format</h4>\" +\n                \"<p>\" +\n                \"The length format is two-column, separated by whitespace, of the form:\" +\n                \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n                \"</p>\" +\n                \"<p>\" +\n                \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n                \"<pre>\" +\n                \"chr1    197195432\\n\" +\n                \"chr2    181748087\\n\" +\n                \"chr3    159599783\\n\" +\n                \"chr4    155630120\\n\" +\n                \"chr5    152537259\" +\n                \"</pre>\" +\n                \"</p>\" +\n                \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n                \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n                \"of this format (Len File option), or directly enter the information into the box \" +\n                \"(Len Entry option).</p>\"\n            );\n        },\n\n        _templateFasta: function() {\n            return (\n                \"<h4>FASTA format</h4>\" +\n                \"<p>\" +\n                \"This is a multi-fasta file from your current history that provides the genome\" +\n                \"sequences for each chromosome/contig in your build.\" +\n                \"</p>\" +\n                \"<p>\" +\n                \"Here is a snippet from an example multi-fasta file:\" +\n                \"<pre>\" +\n                \">chr1\\n\" +\n                \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n                \">chr2\\n\" +\n                \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n                \"...\" +\n                \"</pre>\" +\n                \"</p>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}