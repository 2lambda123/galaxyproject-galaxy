{"version":3,"sources":["mvc/user/user_api_keys.js"],"names":["mod_toastr","UserAPIKeysView","Backbone","View","extend","initialize","options","timeOut","this","setElement","render","self","url","Galaxy","root","$el","empty","append","_template","fetchUsers","$","getJSON","users","setTimeout","applyVue","_vue2","default","el","methods","generateKey","id","success","_data","error"],"mappings":"8MACYA,6JAERC,EAAkBC,SAASC,KAAKC,QAChCC,WAAY,WACRL,EAAWM,QAAQC,QAAU,IAC7BC,KAAKC,WAAW,UAChBD,KAAKE,UAGTA,OAAQ,WACJ,IAAIC,EAAOH,KACPI,EAAMC,OAAOC,KAAO,sBACxBH,EAAKI,IAAIC,QAAQC,OAAON,EAAKO,aAC7BP,EAAKQ,WAAWP,IAIpBO,WAAY,SAASP,GACjB,IAAID,EAAOH,KACXY,EAAEC,QAAQT,EAAK,SAASU,GAIpBC,WAAW,WACPZ,EAAKa,SAASF,QAM1BE,SAAU,SAASF,GACA,IAAAG,EAAAC,SACXC,GAAI,iBA9BZ1B,MACAI,MAAYiB,GAERM,SAHmCC,YAAA,SAAAC,GAqCvB,IAAInB,EAAOH,KA7BnBG,EAAAA,MACME,IAAOC,OAAOA,KAAA,2BACfE,MAAQC,IAAON,GACnBQ,QAAL,SAAAG,GAXmCtB,EAAA+B,QAAA,qCAcvCpB,EAAAqB,MAAAV,MAAAA,GAEeW,MAAX,WACejC,EAASsB,QAAO,4CAQlCJ,UAzBsC,WAyDnC,MA9BJ,0jBA2DCjB","file":"../../../scripts/mvc/user/user_api_keys.js","sourcesContent":["import Vue from \"libs/vue\";\nimport * as mod_toastr from \"libs/toastr\";\n\nvar UserAPIKeysView = Backbone.View.extend({\n    initialize: function() {\n        mod_toastr.options.timeOut = 1000;\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this,\n            url = Galaxy.root + \"userskeys/all_users\";\n        self.$el.empty().append(self._template());\n        self.fetchUsers(url);\n    },\n\n    /** Load users and their keys */\n    fetchUsers: function(url) {\n        var self = this;\n        $.getJSON(url, function(users) {\n            // apply vue model on the dom\n            // timeout is used to ensure dom is created first and then\n            // vue model is applied with the required data\n            setTimeout(function() {\n                self.applyVue(users);\n            });\n        });\n    },\n\n    /** Create model for the view using vue */\n    applyVue: function(users) {\n        var form_vue = new Vue({\n            el: \"#form-userkeys\",\n            data: {\n                users: users // data model\n            },\n            methods: {\n                // bind event from view\n                generateKey: function(id) {\n                    var self = this;\n                    // fetch fresh model\n                    $.ajax({\n                        url: Galaxy.root + \"userskeys/admin_api_keys\",\n                        data: { uid: id },\n                        success: function(users) {\n                            mod_toastr.success(\"Successfully generated a user key\");\n                            // refresh the model\n                            self._data.users = users;\n                        },\n                        error: function() {\n                            mod_toastr.success(\"Error occured while loading data\");\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    _template: function() {\n        return (\n            '<div id=\"form-userkeys\" class=\"toolForm\" v-cloak>' +\n            '<div class=\"toolFormTitle\">User Information</div>' +\n            '<div v-if=\"users && users.length > 0\">' +\n            '<table class=\"grid\">' +\n            \"<thead><th>Encoded UID</th><th>Email</th><th>API Key</th><th>Actions</th></thead>\" +\n            \"<tbody>\" +\n            '<tr v-for=\"user in users\">' +\n            \"<td>\" +\n            \"{{ user.uid }}\" +\n            \"</td>\" +\n            \"<td>\" +\n            \"{{ user.email }}\" +\n            \"</td>\" +\n            \"<td>\" +\n            \"{{ user.key }}\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<input type=\"button\" value=\"Generate a new key now\" v-on:click=\"generateKey( user.uid )\" />' +\n            \"</td>\" +\n            \"</tbody>\" +\n            \"</table>\" +\n            \"</div>\" +\n            \"<div v-else>\" +\n            \"<div>No informations available</div>\" +\n            \"</div>\" +\n            '<div style=\"clear: both\"></div>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default UserAPIKeysView;\n"]}