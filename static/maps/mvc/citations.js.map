{"version":3,"sources":["mvc/citations.js"],"names":["bibtexParse","Citation","Backbone","Model","extend","_baseMvc2","default","LoggableMixin","_logNamespace","defaults","content","initialize","parsed","toJSON","this","attributes","err","log","_fields","entry","_","first","rawFields","entryTags","key","value","lowerKey","toLowerCase","entryType","undefined","fields","BaseCitationCollection","Collection","urlRoot","Galaxy","partial","model","HistoryCitationCollection","url","history_id","ToolCitationCollection","tool_id","CitationView","View","tagName","className","render","$el","append","formattedReference","logNamespace","root","author","year","title","pages","address","volume","number","ref","authorsAndYear","_asSentence","journal","howpublished","note","institution","type","doi","doiUrl","latex","_latexParser","stringifyLaTeX","_formatBookInfo","info","chapter","editor","publisher","series","issn","CitationListView","setElement","listenTo","collection","renderCitation","events","click .citations-to-bibtex","citation","citationView","$","el","rawTextarea","val","citationsElement","item","hide","select","showBibtex","show","partialWarningElement","showFormatted","join","_localization2"],"mappings":"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","file":"../../scripts/mvc/citations.js","sourcesContent":["import * as bibtexParse from \"libs/bibtexParse\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport { convertLaTeX } from \"latex-to-unicode-converter\";\nimport { stringifyLaTeX } from \"latex-parser\";\n\n/* global Backbone */\n\nvar logNamespace = \"citation\";\n//==============================================================================\n/** @class model for tool citations.\n *  @name Citation\n *  @augments Backbone.Model\n */\nvar Citation = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    defaults: {\n        content: \"\"\n    },\n\n    initialize: function() {\n        var parsed;\n        try {\n            // TODO: to model.parse/.validate\n            parsed = bibtexParse.toJSON(this.attributes.content);\n        } catch (err) {\n            this.log(\"Error parsing bibtex: \" + err);\n        }\n\n        this._fields = {};\n        this.entry = _.first(parsed);\n        if (this.entry) {\n            var rawFields = this.entry.entryTags;\n            for (var key in rawFields) {\n                var value = rawFields[key];\n                var lowerKey = key.toLowerCase();\n                this._fields[lowerKey] = value;\n            }\n        }\n    },\n    entryType: function() {\n        return this.entry ? this.entry.entryType : undefined;\n    },\n    fields: function() {\n        return this._fields;\n    }\n});\n\n//==============================================================================\n/** @class Backbone collection of citations.\n */\nvar BaseCitationCollection = Backbone.Collection.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    /** root api url */\n    urlRoot: `${Galaxy.root}api`,\n    partial: true, // Assume some tools in history/workflow may not be properly annotated yet.\n    model: Citation\n});\n\nvar HistoryCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/histories/${this.history_id}/citations`;\n    }\n});\n\nvar ToolCitationCollection = BaseCitationCollection.extend({\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/tools/${this.tool_id}/citations`;\n    },\n    partial: false // If a tool has citations, assume they are complete.\n});\n\nvar CitationView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"citations\",\n    render: function() {\n        this.$el.append(`<p>${this.formattedReference()}</p>`);\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = `${this._asSentence(\n            (fields.author ? fields.author : \"\") + (fields.year ? ` (${fields.year})` : \"\")\n        )} `;\n        var title = fields.title || \"\";\n        var pages = fields.pages ? `pp. ${fields.pages}` : \"\";\n        var address = fields.address;\n        if (entryType == \"article\") {\n            var volume =\n                (fields.volume ? fields.volume : \"\") +\n                (fields.number ? ` (${fields.number})` : \"\") +\n                (pages ? `, ${pages}` : \"\");\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.journal ? `In <em>${fields.journal}, ` : \"\") +\n                this._asSentence(volume) +\n                this._asSentence(fields.address)}</em>`;\n        } else if (entryType == \"inproceedings\" || entryType == \"proceedings\") {\n            ref = `${authorsAndYear +\n                this._asSentence(title) +\n                (fields.booktitle ? `In <em>${fields.booktitle}, ` : \"\") +\n                (pages ? pages : \"\") +\n                (address ? `, ${address}` : \"\")}.</em>`;\n        } else if (entryType == \"mastersthesis\" || entryType == \"phdthesis\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                (fields.howpublished ? `${fields.howpublished}. ` : \"\") +\n                (fields.note ? `${fields.note}.` : \"\");\n        } else if (entryType == \"techreport\") {\n            ref =\n                authorsAndYear +\n                this._asSentence(title) +\n                this._asSentence(fields.institution) +\n                this._asSentence(fields.number) +\n                this._asSentence(fields.type);\n        } else if (entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\") {\n            ref = `${authorsAndYear} ${this._formatBookInfo(fields)}`;\n        } else {\n            ref = `${authorsAndYear} ${this._asSentence(title)}${this._asSentence(\n                fields.howpublished\n            )}${this._asSentence(fields.note)}`;\n        }\n        var doiUrl = \"\";\n        if (fields.doi) {\n            doiUrl = `http://dx.doi.org/${fields.doi}`;\n            ref += `[<a href=\"${doiUrl}\" target=\"_blank\">doi:${fields.doi}</a>]`;\n        }\n        var url = fields.url || doiUrl;\n        if (url) {\n            ref += `[<a href=\"${url}\" target=\"_blank\">Link</a>]`;\n        }\n        return convertLaTeX({ onError: (error, latex) => `\\{${stringifyLaTeX(latex)}\\}` }, ref);\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if (fields.chapter) {\n            info += `${fields.chapter} in `;\n        }\n        if (fields.title) {\n            info += `<em>${fields.title}</em>`;\n        }\n        if (fields.editor) {\n            info += `, Edited by ${fields.editor}, `;\n        }\n        if (fields.publisher) {\n            info += `, ${fields.publisher}`;\n        }\n        if (fields.pages) {\n            info += `, pp. ${fields.pages}`;\n        }\n        if (fields.series) {\n            info += `, <em>${fields.series}</em>`;\n        }\n        if (fields.volume) {\n            info += `, Vol.${fields.volume}`;\n        }\n        if (fields.issn) {\n            info += `, ISBN: ${fields.issn}`;\n        }\n        return `${info}.`;\n    },\n    _asSentence: function(str) {\n        return str && str.trim() ? `${str}. ` : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.listenTo(this.collection, \"add\", this.renderCitation);\n        this.render();\n    },\n\n    events: {\n        \"click .citations-to-bibtex\": \"showBibtex\",\n        \"click .citations-to-formatted\": \"showFormatted\"\n    },\n\n    renderCitation: function(citation) {\n        var citationView = new CitationView({ model: citation });\n        this.$(\".citations-formatted\").append(citationView.render().el);\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val(`${rawTextarea.val()}\\n\\r${citation.attributes.content}`);\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function(item) {\n            this.renderCitation(item);\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if (this.collection.partial) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                \"<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate\",\n                \" citations explicitly at this time. When writing up your analysis, please manually\",\n                \" review your histories and find all references\",\n                \" that should be cited in order to completely describe your work. Also, please remember to\",\n                ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                \"</div>\"\n            ].join(\"\");\n        } else {\n            return \"\";\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n            '<div class=\"toolFormTitle\">',\n            _l(\"Citations\"),\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n            ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n            \"</div>\",\n            '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n            this.partialWarningElement(),\n            '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n            \"</div>\",\n            '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n            '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    }\n});\n\nexport default {\n    Citation: Citation,\n    HistoryCitationCollection: HistoryCitationCollection,\n    ToolCitationCollection: ToolCitationCollection,\n    CitationView: CitationView,\n    CitationListView: CitationListView\n};\n"]}