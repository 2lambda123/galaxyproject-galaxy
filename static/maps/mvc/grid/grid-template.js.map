{"version":3,"sources":["mvc/grid/grid-template.js"],"names":["define","Utils","grid","options","tmpl","embedded","this","grid_header","grid_table","info_text","grid_filters","global_actions","length","show_popup","i","action","show_item_checkboxes","items","url_args","label","column","visible","insert","header","body","num_rows_rendered","items_length","columns","item","encoded_id","encode_id","key","popupmenu_id","href","current_item_id","extra","link","column_settings","attach_popup","id","cls","j","nowrap","column_config","value","use_paging","num_pages","cur_page_num","min_page","min_offset","page_link_range","max_page","operations","max_offset","target","label_id_prefix","page_index","num_page_links","operation","found_global","max_range","global_operation","legend","default_filter_dict","advanced_search_display","advanced_search","show_advanced_search_link","d_key","standard_search_display","allow_multiple","filterable","grid_column_filter","filters","column_label","column_key","message","filter_value","status","_","escape","column_filter","type","filter_element","filter","f_key","params","size","cf_arg","seperator","toLowerCase","is_text","url","temp_column","JSON","stringify","jQuery","slice","cf_label","categorical_filters","cf","cf_key","filter_key","sanitize"],"mappings":"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","file":"../../../scripts/mvc/grid/grid-template.js","sourcesContent":["// dependencies\ndefine([\"utils/utils\"], function(Utils) {\n    // grid view templates\n    return {\n        // template\n        grid: function(options) {\n            var tmpl = \"\";\n            if (options.embedded) {\n                tmpl = this.grid_header(options) + this.grid_table(options);\n            } else {\n                tmpl =\n                    '<div class=\"loading-elt-overlay\"></div>' +\n                    \"<table>\" +\n                    \"<tr>\" +\n                    '<td width=\"75%\">' +\n                    this.grid_header(options) +\n                    \"</td>\" +\n                    \"<td></td>\" +\n                    \"<td></td>\" +\n                    \"</tr>\" +\n                    \"<tr>\" +\n                    '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' +\n                    \"<td></td>\" +\n                    \"<td></td>\" +\n                    \"</tr>\" +\n                    \"</table>\" +\n                    this.grid_table(options);\n            }\n\n            // add info text\n            if (options.info_text) {\n                tmpl += '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' + options.info_text + \"</div>\";\n            }\n\n            // return\n            return tmpl;\n        },\n\n        // template\n        grid_table: function(options) {\n            return (\n                '<form method=\"post\" onsubmit=\"return false;\">' +\n                '<table id=\"grid-table\" class=\"grid\">' +\n                '<thead id=\"grid-table-header\"></thead>' +\n                '<tbody id=\"grid-table-body\"></tbody>' +\n                '<tfoot id=\"grid-table-footer\"></tfoot>' +\n                \"</table>\" +\n                \"</form>\"\n            );\n        },\n\n        // template\n        grid_header: function(options) {\n            var tmpl = '<div class=\"grid-header\">';\n            if (!options.embedded) {\n                tmpl += \"<h2>\" + options.title + \"</h2>\";\n            }\n            if (options.global_actions) {\n                tmpl += '<ul class=\"manage-table-actions\">';\n                var show_popup = options.global_actions.length >= 3;\n                if (show_popup) {\n                    tmpl +=\n                        '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                        '<div popupmenu=\"popup-global-actions\">';\n                }\n                for (var i in options.global_actions) {\n                    var action = options.global_actions[i];\n                    tmpl +=\n                        \"<li>\" +\n                        '<a class=\"action-button use-target\" target=\"' +\n                        action.target +\n                        '\" href=\"' +\n                        action.url_args +\n                        '\" onclick=\"return false;\" >' +\n                        action.label +\n                        \"</a>\" +\n                        \"</li>\";\n                }\n                if (show_popup) {\n                    tmpl += \"</div>\";\n                }\n                tmpl += \"</ul>\";\n            }\n            if (options.insert) {\n                tmpl += options.insert;\n            }\n\n            // add grid filters\n            tmpl += this.grid_filters(options);\n            tmpl += \"</div>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        header: function(options) {\n            // start\n            var tmpl = \"<tr>\";\n\n            // add checkbox\n            if (options.show_item_checkboxes) {\n                tmpl += \"<th>\";\n                if (options.items.length > 0) {\n                    tmpl +=\n                        '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                        '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n                }\n                tmpl += \"</th>\";\n            }\n\n            // create header elements\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.visible) {\n                    tmpl += '<th id=\"' + column.key + '-header\">';\n                    if (column.href) {\n                        tmpl +=\n                            '<a href=\"' +\n                            column.href +\n                            '\" class=\"sort-link\" sort_key=\"' +\n                            column.key +\n                            '\">' +\n                            column.label +\n                            \"</a>\";\n                    } else {\n                        tmpl += column.label;\n                    }\n                    tmpl += '<span class=\"sort-arrow\">' + column.extra + \"</span>\" + \"</th>\";\n                }\n            }\n\n            // finalize\n            tmpl += \"</tr>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        body: function(options) {\n            // initialize\n            var tmpl = \"\";\n            var num_rows_rendered = 0;\n            var items_length = options.items.length;\n\n            // empty grid?\n            if (items_length == 0) {\n                // No results.\n                tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n                num_rows_rendered = 1;\n            }\n\n            // create rows\n            for (var i in options.items) {\n                // encode ids\n                var item = options.items[i];\n                var encoded_id = item.encode_id;\n                var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n                // Tag current\n                tmpl += \"<tr \";\n                if (options.current_item_id == item.id) {\n                    tmpl += 'class=\"current\"';\n                }\n                tmpl += \">\";\n\n                // Item selection column\n                if (options.show_item_checkboxes) {\n                    tmpl +=\n                        '<td style=\"width: 1.5em;\">' +\n                        '<input type=\"checkbox\" name=\"id\" value=\"' +\n                        encoded_id +\n                        '\" id=\"' +\n                        encoded_id +\n                        '\" class=\"grid-row-select-checkbox\" />' +\n                        \"</td>\";\n                }\n\n                // Data columns\n                for (var j in options.columns) {\n                    var column = options.columns[j];\n                    if (column.visible) {\n                        // Nowrap\n                        var nowrap = \"\";\n                        if (column.nowrap) {\n                            nowrap = 'style=\"white-space:nowrap;\"';\n                        }\n\n                        // get column settings\n                        var column_settings = item.column_config[column.label];\n\n                        // load attributes\n                        var link = column_settings.link;\n                        var value = column_settings.value;\n                        var target = column_settings.target;\n\n                        // unescape value\n                        if (jQuery.type(value) === \"string\") {\n                            value = value.replace(/\\/\\//g, \"/\");\n                        }\n\n                        // Attach popup menu?\n                        var id = \"\";\n                        var cls = \"\";\n                        if (column.attach_popup) {\n                            id = \"grid-\" + i + \"-popup\";\n                            cls = \"menubutton\";\n                            if (link != \"\") {\n                                cls += \" split\";\n                            }\n                            cls += \" popup\";\n                        }\n\n                        // Check for row wrapping\n                        tmpl += \"<td \" + nowrap + \">\";\n\n                        // Link\n                        if (link) {\n                            if (options.operations.length != 0) {\n                                tmpl += '<div id=\"' + id + '\" class=\"' + cls + '\" style=\"float: left;\">';\n                            }\n                            tmpl +=\n                                '<a class=\"menubutton-label use-target\" target=\"' +\n                                target +\n                                '\" href=\"' +\n                                link +\n                                '\" onclick=\"return false;\">' +\n                                value +\n                                \"</a>\";\n                            if (options.operations.length != 0) {\n                                tmpl += \"</div>\";\n                            }\n                        } else {\n                            tmpl +=\n                                '<div id=\"' +\n                                id +\n                                '\" class=\"' +\n                                cls +\n                                '\"><label id=\"' +\n                                column.label_id_prefix +\n                                encoded_id +\n                                '\" for=\"' +\n                                encoded_id +\n                                '\">' +\n                                (value || \"\") +\n                                \"</label></div>\";\n                        }\n                        tmpl += \"</td>\";\n                    }\n                }\n                tmpl += \"</tr>\";\n                num_rows_rendered++;\n            }\n            return tmpl;\n        },\n\n        // template\n        footer: function(options) {\n            // create template string\n            var tmpl = \"\";\n\n            // paging\n            if (options.use_paging && options.num_pages > 1) {\n                // get configuration\n                var num_page_links = options.num_page_links;\n                var cur_page_num = options.cur_page_num;\n                var num_pages = options.num_pages;\n\n                // First pass on min page.\n                var page_link_range = num_page_links / 2;\n                var min_page = cur_page_num - page_link_range;\n                var min_offset = 0;\n                if (min_page <= 0) {\n                    // Min page is too low.\n                    min_page = 1;\n                    min_offset = page_link_range - (cur_page_num - min_page);\n                }\n\n                // Set max page.\n                var max_range = page_link_range + min_offset;\n                var max_page = cur_page_num + max_range;\n                var max_offset;\n                if (max_page <= num_pages) {\n                    // Max page is fine.\n                    max_offset = 0;\n                } else {\n                    // Max page is too high.\n                    max_page = num_pages;\n                    // +1 to account for the +1 in the loop below.\n                    max_offset = max_range - (max_page + 1 - cur_page_num);\n                }\n\n                // Second and final pass on min page to add any unused\n                // offset from max to min.\n                if (max_offset != 0) {\n                    min_page -= max_offset;\n                    if (min_page < 1) {\n                        min_page = 1;\n                    }\n                }\n\n                // template header\n                tmpl += '<tr id=\"page-links-row\">';\n                if (options.show_item_checkboxes) {\n                    tmpl += \"<td></td>\";\n                }\n                tmpl += '<td colspan=\"100\">' + '<span id=\"page-link-container\">' + \"Page:\";\n\n                if (min_page > 1) {\n                    tmpl +=\n                        '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n                }\n\n                // create page urls\n                for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                    if (page_index == options.cur_page_num) {\n                        tmpl +=\n                            '<span class=\"page-link inactive-link\" id=\"page-link-' +\n                            page_index +\n                            '\">' +\n                            page_index +\n                            \"</span>\";\n                    } else {\n                        tmpl +=\n                            '<span class=\"page-link\" id=\"page-link-' +\n                            page_index +\n                            '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                            page_index +\n                            '\">' +\n                            page_index +\n                            \"</a></span>\";\n                    }\n                }\n\n                // show last page\n                if (max_page < num_pages) {\n                    tmpl +=\n                        \"...\" +\n                        '<span class=\"page-link\" id=\"page-link-' +\n                        num_pages +\n                        '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                        num_pages +\n                        '\">' +\n                        num_pages +\n                        \"</a></span>\";\n                }\n                tmpl += \"</span>\";\n\n                // Show all link\n                tmpl +=\n                    '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                    \"</td>\" +\n                    \"</tr>\";\n            }\n\n            // Grid operations for multiple items.\n            if (options.show_item_checkboxes) {\n                // start template\n                tmpl +=\n                    \"<tr>\" +\n                    '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                    \"<td></td>\" +\n                    '<td colspan=\"100\">' +\n                    'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n                // configure buttons for operations\n                for (var i in options.operations) {\n                    var operation = options.operations[i];\n                    if (operation.allow_multiple) {\n                        tmpl +=\n                            '<input type=\"button\" value=\"' +\n                            operation.label +\n                            '\" class=\"operation-button action-button\">&nbsp;';\n                    }\n                }\n\n                // finalize template\n                tmpl += \"</td>\" + \"</tr>\";\n            }\n\n            // count global operations\n            var found_global = false;\n            for (i in options.operations) {\n                if (options.operations[i].global_operation) {\n                    found_global = true;\n                    break;\n                }\n            }\n\n            // add global operations\n            if (found_global) {\n                tmpl += \"<tr>\" + '<td colspan=\"100\">';\n                for (i in options.operations) {\n                    var operation = options.operations[i];\n                    if (operation.global_operation) {\n                        tmpl +=\n                            '<a class=\"action-button\" href=\"' +\n                            operation.global_operation +\n                            '\">' +\n                            operation.label +\n                            \"</a>\";\n                    }\n                }\n                tmpl += \"</td>\" + \"</tr>\";\n            }\n\n            // add legend\n            if (options.legend) {\n                tmpl += \"<tr>\" + '<td colspan=\"100\">' + options.legend + \"</td>\" + \"</tr>\";\n            }\n\n            // return\n            return tmpl;\n        },\n\n        // template\n        message: function(options) {\n            var status = options.status == \"success\" ? \"done\" : options.status;\n            return (\n                \"<p>\" +\n                '<div class=\"' +\n                status +\n                'message transient-message\">' +\n                _.escape(options.message) +\n                \"</div>\" +\n                '<div style=\"clear: both\"></div>' +\n                \"</p>\"\n            );\n        },\n\n        // template\n        grid_filters: function(options) {\n            // get filters\n            var default_filter_dict = options.default_filter_dict;\n            var filters = options.filters;\n\n            // show advanced search if flag set or if there are filters for advanced search fields\n            var advanced_search_display = \"none\";\n            if (options.advanced_search) {\n                advanced_search_display = \"block\";\n            }\n\n            // identify columns with advanced filtering\n            var show_advanced_search_link = false;\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"advanced\") {\n                    var column_key = column.key;\n                    var f_key = filters[column_key];\n                    var d_key = default_filter_dict[column_key];\n                    if (f_key && d_key && f_key != d_key) {\n                        advanced_search_display = \"block\";\n                    }\n                    show_advanced_search_link = true;\n                }\n            }\n\n            // hide standard search if advanced is shown\n            var standard_search_display = \"block\";\n            if (advanced_search_display == \"block\") {\n                standard_search_display = \"none\";\n            }\n\n            //\n            // standard search\n            //\n            var tmpl =\n                '<div id=\"standard-search\" style=\"display: ' +\n                standard_search_display +\n                ';\">' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td style=\"padding: 0;\">' +\n                \"<table>\";\n\n            // add standard filters\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"standard\") {\n                    tmpl += this.grid_column_filter(options, column);\n                }\n            }\n\n            // finalize standard search\n            tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n            // show advanced search link in standard display\n            if (show_advanced_search_link) {\n                tmpl += '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n            }\n\n            // finalize standard search display\n            tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n            //\n            // advanced search\n            //\n            tmpl +=\n                '<div id=\"advanced-search\" style=\"display: ' +\n                advanced_search_display +\n                '; margin-top: 5px; border: 1px solid #ccc;\">' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td style=\"text-align: left\" colspan=\"100\">' +\n                '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' +\n                \"</td>\" +\n                \"</tr>\";\n\n            // add advanced filters\n            for (var i in options.columns) {\n                var column = options.columns[i];\n                if (column.filterable == \"advanced\") {\n                    tmpl += this.grid_column_filter(options, column);\n                }\n            }\n\n            // finalize advanced search template\n            tmpl += \"</table>\" + \"</div>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template\n        grid_column_filter: function(options, column) {\n            // collect parameters\n            var default_filter_dict = options.default_filter_dict;\n            var filters = options.filters;\n            var column_label = column.label;\n            var column_key = column.key;\n            if (column.filterable == \"advanced\") {\n                column_label = column_label.toLowerCase();\n            }\n\n            // start\n            var tmpl = \"<tr>\";\n\n            if (column.filterable == \"advanced\") {\n                tmpl += '<td align=\"left\" style=\"padding-left: 10px\">' + column_label + \":</td>\";\n            }\n            tmpl += '<td style=\"padding-bottom: 1px;\">';\n            if (column.is_text) {\n                tmpl +=\n                    '<form class=\"text-filter-form\" column_key=\"' +\n                    column_key +\n                    '\" action=\"' +\n                    options.url +\n                    '\" method=\"get\" >';\n                // Carry forward filtering criteria with hidden inputs.\n                for (i in options.columns) {\n                    var temp_column = options.columns[i];\n                    var filter_value = filters[temp_column.key];\n                    if (filter_value) {\n                        if (filter_value != \"All\") {\n                            if (temp_column.is_text) {\n                                filter_value = JSON.stringify(filter_value);\n                            }\n                            tmpl +=\n                                '<input type=\"hidden\" id=\"' +\n                                temp_column.key +\n                                '\" name=\"f-' +\n                                temp_column.key +\n                                '\" value=\"' +\n                                filter_value +\n                                '\"/>';\n                        }\n                    }\n                }\n                // Print current filtering criteria and links to delete.\n                tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n                // add filters\n                var column_filter = filters[column_key];\n                if (column_filter) {\n                    // identify type\n                    var type = jQuery.type(column_filter);\n\n                    // single filter value\n                    if (type == \"string\") {\n                        if (column_filter != \"All\") {\n                            // append template\n                            tmpl += this.filter_element(column_key, column_filter);\n                        }\n                    }\n\n                    // multiple filter values\n                    if (type == \"array\") {\n                        for (var i in column_filter) {\n                            // get filter\n                            var filter = column_filter[i];\n\n                            // copy filters and remove entry\n                            var params = column_filter;\n                            params = params.slice(i);\n\n                            // append template\n                            tmpl += this.filter_element(column_key, filter);\n                        }\n                    }\n                }\n\n                // close span\n                tmpl += \"</span>\";\n\n                // Set value, size of search input field. Minimum size is 20 characters.\n                var value = \"\";\n                if (column.filterable == \"standard\") {\n                    value = column.label.toLowerCase();\n                    var size = value.length;\n                    if (size < 20) {\n                        size = 20;\n                    }\n                    // +4 to account for space after placeholder\n                    size = size + 4;\n                }\n\n                // print input field for column\n                tmpl +=\n                    '<span class=\"search-box\">' +\n                    '<input class=\"search-box-input\" id=\"input-' +\n                    column_key +\n                    '-filter\" name=\"f-' +\n                    column_key +\n                    '\" type=\"text\" placeholder=\"' +\n                    value +\n                    '\" size=\"' +\n                    size +\n                    '\"/>' +\n                    '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' +\n                    '<i class=\"fa fa-search\"></i>' +\n                    \"</button>\" +\n                    \"</span>\" +\n                    \"</form>\";\n            } else {\n                // filter criteria\n                tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n                // add category filters\n                var seperator = false;\n                for (var cf_label in options.categorical_filters[column_key]) {\n                    // get category filter\n                    var cf = options.categorical_filters[column_key][cf_label];\n\n                    // each filter will have only a single argument, so get that single argument\n                    var cf_key = \"\";\n                    var cf_arg = \"\";\n                    for (var key in cf) {\n                        cf_key = key;\n                        cf_arg = cf[key];\n                    }\n\n                    // add seperator\n                    if (seperator) {\n                        tmpl += \" | \";\n                    }\n                    seperator = true;\n\n                    // add category\n                    var filter = filters[column_key];\n                    if (filter && cf[column_key] && filter == cf_arg) {\n                        tmpl +=\n                            '<span class=\"categorical-filter ' +\n                            column_key +\n                            '-filter current-filter\">' +\n                            cf_label +\n                            \"</span>\";\n                    } else {\n                        tmpl +=\n                            '<span class=\"categorical-filter ' +\n                            column_key +\n                            '-filter\">' +\n                            '<a href=\"javascript:void(0);\" filter_key=\"' +\n                            cf_key +\n                            '\" filter_val=\"' +\n                            cf_arg +\n                            '\">' +\n                            cf_label +\n                            \"</a>\" +\n                            \"</span>\";\n                    }\n                }\n                tmpl += \"</span>\";\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n\n            // return template\n            return tmpl;\n        },\n\n        // template for filter items\n        filter_element: function(filter_key, filter_value) {\n            filter_value = Utils.sanitize(filter_value);\n            return (\n                '<span class=\"text-filter-val\">' +\n                filter_value +\n                '<a href=\"javascript:void(0);\" filter_key=\"' +\n                filter_key +\n                '\" filter_val=\"' +\n                filter_value +\n                '\">' +\n                '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' +\n                \"</a>\" +\n                \"</span>\"\n            );\n        }\n    };\n});\n"]}