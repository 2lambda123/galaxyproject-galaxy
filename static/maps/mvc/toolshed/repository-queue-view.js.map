{"version":3,"sources":["mvc/toolshed/repository-queue-view.js"],"names":["define","toolshed_model","toolshed_util","RepoQueueView","Backbone","View","extend","el","defaults","options","that","this","initialize","model","render","fetch","listenTo","repo_queue_template","templateRepoQueue","models","repositories","title","$","css","bindEvents","on","repository_metadata","loadFromQueue","attr","installFromQueue","queue_key","repo_queue","JSON","parse","localStorage","hasOwnProperty","repository_id","repository","id","remove","stringify","history","navigate","trigger","replace","params","Object","install_tool_dependencies","install_repository_dependencies","install_resolver_dependencies","tool_panel_section","shed_tool_conf","tool_shed_repository_ids","changeset","changeset_revision","url","split","undefined","repository_queue","post","iri_params","new_route","data","console","join","Galaxy","root","reDraw","_","template"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-queue-view.js","sourcesContent":["define([\"mvc/toolshed/toolshed-model\", \"mvc/toolshed/util\"], function(toolshed_model, toolshed_util) {\n    var View = Backbone.View.extend({\n        el: \"#center\",\n\n        defaults: [{}],\n\n        initialize: function(options) {\n            var that = this;\n            this.model = new toolshed_model.RepoQueue();\n            this.listenTo(this.model, \"sync\", this.render);\n            this.model.fetch();\n            that.render();\n        },\n\n        render: function(options) {\n            var that = this;\n            var repo_queue_template = that.templateRepoQueue;\n            var repositories = that.model.models;\n            that.$el.html(\n                repo_queue_template({\n                    title: \"Repository Installation Queue\",\n                    repositories: repositories,\n                    queue: toolshed_util.queueLength()\n                })\n            );\n            $(\"#center\").css(\"overflow\", \"auto\");\n            that.bindEvents();\n        },\n\n        bindEvents: function() {\n            var that = this;\n            $(\".install_one\").on(\"click\", function() {\n                var repository_metadata = that.loadFromQueue($(this).attr(\"data-repokey\"));\n                that.installFromQueue(repository_metadata, $(this).attr(\"data-repokey\"));\n            });\n            $(\".remove_one\").on(\"click\", function() {\n                var queue_key = $(this).attr(\"data-repokey\");\n                var repo_queue = JSON.parse(localStorage.repositories);\n                if (repo_queue.hasOwnProperty(queue_key)) {\n                    var repository_id = repo_queue[queue_key].repository.id;\n                    delete repo_queue[queue_key];\n                    $(\"#queued_repository_\" + repository_id).remove();\n                }\n                localStorage.repositories = JSON.stringify(repo_queue);\n            });\n            $(\"#clear_queue\").on(\"click\", function() {\n                localStorage.repositories = \"{}\";\n            });\n            $(\"#from_workflow\").on(\"click\", function() {\n                Backbone.history.navigate(\"workflows\", {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        },\n\n        installFromQueue: function(repository_metadata, queue_key) {\n            var that = this;\n            var params = Object();\n            params.install_tool_dependencies = repository_metadata.install_tool_dependencies;\n            params.install_repository_dependencies = repository_metadata.install_repository_dependencies;\n            params.install_resolver_dependencies = repository_metadata.install_resolver_dependencies;\n            params.tool_panel_section = repository_metadata.tool_panel_section;\n            params.shed_tool_conf = repository_metadata.shed_tool_conf;\n            params.repositories = JSON.stringify([\n                [repository_metadata.repository.id, repository_metadata.changeset_revision]\n            ]);\n            params.tool_shed_repository_ids = JSON.stringify([repository_metadata.repository.id]);\n            params.tool_shed_url = queue_key.split(\"|\")[0];\n            params.changeset = repository_metadata.changeset_revision;\n            var url = Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n            $(\"#queued_repository_\" + repository_metadata.repository.id).remove();\n            if (localStorage.repositories) {\n                if (queue_key === undefined) {\n                    queue_key = toolshed_util.queueKey(repository_metadata);\n                }\n                var repository_queue = JSON.parse(localStorage.repositories);\n                if (repository_queue.hasOwnProperty(queue_key)) {\n                    delete repository_queue[queue_key];\n                    localStorage.repositories = JSON.stringify(repository_queue);\n                }\n            }\n\n            $.post(url, params, function(data) {\n                var iri_params = JSON.parse(data);\n                var repositories = iri_params.repositories;\n                var new_route = \"status/r/\" + repositories.join(\"|\");\n                $.post(Galaxy.root + \"admin_toolshed/manage_repositories\", iri_params, function(data) {\n                    console.log(\"Initializing repository installation succeeded\");\n                });\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            });\n        },\n\n        loadFromQueue: function(queue_key) {\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                return repository_queue[queue_key];\n            }\n            return undefined;\n        },\n\n        reDraw: function(options) {\n            this.$el.empty();\n            this.initialize(options);\n            this.model.fetch();\n            this.render(options);\n        },\n\n        templateRepoQueue: _.template(\n            [\n                '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n                '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                \"</div>\",\n                '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n                '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                '<thead id=\"grid-table-header\">',\n                \"<tr>\",\n                '<th class=\"datasetRow\">Name</th>',\n                '<th class=\"datasetRow\">Owner</th>',\n                '<th class=\"datasetRow\">Revision</th>',\n                '<th class=\"datasetRow\">ToolShed</th>',\n                '<th class=\"datasetRow\">Install</th>',\n                '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n                \"</tr>\",\n                \"</thead>\",\n                \"<tbody>\",\n                \"<% _.each(repositories, function(repository) { %>\",\n                '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n                '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n                '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n                '<td class=\"datasetRow\">',\n                '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n                \"</td>\",\n                '<td class=\"datasetRow\">',\n                '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<% }); %>\",\n                \"</tbody>\",\n                \"</table>\",\n                '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n                \"</div>\"\n            ].join(\"\")\n        )\n    });\n\n    return {\n        RepoQueueView: View\n    };\n});\n"]}