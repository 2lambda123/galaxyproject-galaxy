{"version":3,"sources":["mvc/toolshed/repository-view.js"],"names":["define","ToolShedRepositoryView","el","initialize","toolshed_model","RepositoryCollection","RepoDetails","Backbone","View","render","shed","tool_shed_url","this","model","_","defaults","repository_id","listenTo","params","tool_shed","replace","url","options","repo_details_template","templateRepoDetails","models","category","repository","changesets","current_changeset","current_metadata","repository_dependencies_template","tps_template_global_select","templateGlobalSectionSelect","tps_template_tool_select","templateToolSectionSelect","length","tps_select_options","templatePanelSelectOptions","tool_dependencies","shed_tool_conf","templateShedToolConf","tools","stc_html","templateRepoDependencies","repository_dependency_template","templateRepoDependency","panel_section_dict","api_url","extend","html","checkInstalled","bindEvents","get","Galaxy","root","that","tpsSelection","$","find","form","preventDefault","metadata","repositories","install_tool_dependencies","install_resolver_dependencies","ev","panelSelect","tool_panel_section","changeset","JSON","stringify","prepareInstall","attr","on","repository_metadata","each","Object","val","install_repository_dependencies","new_value","default_tps","keys","key","removeAttr","guid","clean","name","desc","tsr_id","substr","addToQueue","data","toolform","Utils","input","modal","closing_events","jstree","body","buttons","Close","hide","already_installed","queued","repoQueued","index","installed","deleted","changeset_match","changeset_revision","indexOf","type","info","textify","extensions","Modal","modal_title","show","title","$el","tool_panel_section_id","new_tool_panel_section","owner","element_name","tool_guid","uninstalled","action","installed_changeset_revision","prop","localStorage","repository_queue","parse","queued_repos","hasOwnProperty","shed_url","doInstall","reDraw","empty","controller_url","console","queue_key","queueKey","template","templateToolDependency","templateToolSectionCreate","post","iri_parameters","new_route","join","log","history","navigate","trigger","templateGlobalSectionCreate"],"mappings":"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iKACA,wJACA,SACA,6FACA,sGACA,mFACA,2FACA,yBACA,6CACA,uCACA,gEACA,uEACA,wGACA,0FACA,YACA,YACA,wMACA,6IACA,kIACA,SACA,SACA,wBACA,4DACA,gIACA,6BACA,oDACA,yEACA,uFACA,OACA,0FACA,oEACA,2BACA,wEACA,qGACA,OACA,SACA,4DACA,SACA,SACA,UACA,2DACA,qDACA,6BACA,kDACA,uEACA,mFACA,OACA,8CACA,mEACA,2EACA,OACA,8DACA,2BACA,kEACA,6FACA,OACA,SACA,8HACA,UACA,sGACA,4CACA,mBACA,gBACA,QACA,WACA,yBACA,4EACA,0EACA,mCACA,8BACA,qCACA,kCACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,yEACA,6IACA,6BACA,yDACA,kHACA,UACA,sGACA,4CACA,uBACA,mBACA,gHACA,WACA,6BACA,wDACA,0GACA,mCACA,wFACA,gPACA,SACA,QACA,mCACA,kDACA,0DACA,iHACA,QACA,QACA,YACA,WACA,WACA,SACA,SACA,UACA,UACA,UACFM,KAAK,KAGXzG,yBAA0B9B,EAAEiI,UAEpB,2DACA,iFACA,OACA,qDACA,2CACA,+DACA,oFACA,oDACA,YACA,UACA,QACA,QACA,UACFM,KAAK,KAGXvG,uBAAwBhC,EAAEiI,UAElB,4EACA,6HACA,2CACA,kCACA,+DACA,oFACA,oDACA,YACA,QACA,UACA,SACFM,KAAK,KAGX5G,qBAAsB3B,EAAEiI,UAEhB,iEACA,6BACA,yBACA,kBACA,kJACA,SACA,UACFM,KAAK,KAGXL,uBAAwBlI,EAAEiI,UAElB,2CACA,+DACA,qDACA,uEACA,8CACA,UACA,YACA,WACFM,KAAK,KAGXK,4BAA6B5I,EAAEiI,UAEvB,gCACA,sCACA,yGACA,+FACA,mDACA,0EACA,SACA,SACA,UACFM,KAAK,KAGXpH,4BAA6BnB,EAAEiI,UAEvB,gCACA,sDACA,6BACA,yCACA,iDACA,sDACA,YACA,qFACA,mDACA,mFACA,SACA,SACA,SACA,UACFM,KAAK,KAGXJ,0BAA2BnI,EAAEiI,UAErB,uFACA,+KACA,uLACA,UACFM,KAAK,KAGXlH,0BAA2BrB,EAAEiI,UAErB,6FACA,kMACA,sDACA,YACA,8NACA,yDACA,UACFM,KAAK,KAGX/G,2BAA4BxB,EAAEiI,UAEtB,6CACA,iEACA,aACFM,KAAK","file":"../../../scripts/mvc/toolshed/repository-view.js","sourcesContent":["define(\n    [\n        \"mvc/toolshed/toolshed-model\",\n        \"libs/jquery/jstree\",\n        \"utils/utils\",\n        \"mvc/ui/ui-modal\",\n        \"mvc/form/form-view\",\n        \"mvc/toolshed/util\"\n    ],\n    function(toolshed_model, jstree, Utils, Modal, FormView, toolshed_util) {\n        var ToolShedRepositoryView = Backbone.View.extend({\n            el: \"#center\",\n\n            initialize: function(params) {\n                var self = this;\n                this.options = _.defaults(this.options || {}, this.defaults);\n                this.model = new toolshed_model.RepositoryCollection();\n                this.listenTo(this.model, \"sync\", this.render);\n                var shed = params.tool_shed.replace(/\\//g, \"%2f\");\n                this.model.url += \"?tool_shed_url=\" + shed + \"&repository_id=\" + params.repository_id;\n                this.model.tool_shed_url = params.tool_shed.replace(/%2f/g, \"/\");\n                this.model.tool_shed = shed;\n                this.model.category = params.repository_id;\n                this.model.fetch();\n            },\n\n            render: function(options) {\n                var repo_details_template = this.templateRepoDetails;\n                var models = this.model.models[0];\n                this.options = {\n                    repository: models.get(\"repository\"),\n                    tool_shed: this.model.tool_shed,\n                    queue: toolshed_util.queueLength()\n                };\n                var changesets = Object.keys(this.options.repository.metadata);\n                this.options.current_changeset = this.options.current_changeset || changesets[changesets.length - 1];\n                this.options.current_metadata = this.options.repository.metadata[this.options.current_changeset];\n                this.options.current_metadata.tool_shed_url = this.model.tool_shed_url;\n                this.options.tools = this.options.current_metadata.tools;\n                this.options.repository_dependencies_template = this.templateRepoDependencies;\n                this.options.repository_dependency_template = this.templateRepoDependency;\n                this.options.tps_template_global_select = this.templateGlobalSectionSelect;\n                this.options.tps_template_tool_select = this.templateToolSectionSelect;\n                this.options.tps_select_options = this.templatePanelSelectOptions;\n                this.options.tool_dependencies = models.get(\"tool_dependencies\");\n                this.options.shed_tool_conf = this.templateShedToolConf({\n                    stc_html: models.get(\"shed_conf\")\n                });\n                this.options.panel_section_dict = models.get(\"panel_section_dict\");\n                this.options.api_url = Galaxy.root + \"api/tool_shed_repositories/install?async=True\";\n                this.options = _.extend(this.options, options);\n                this.$el.html(repo_details_template(this.options));\n                this.checkInstalled(this.options.current_metadata);\n                this.bindEvents();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            bindEvents: function() {\n                var that = this;\n                $(\"#changeset\").on(\"change\", function() {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n                    that.checkInstalled(that.options.current_metadata);\n                    that.reDraw();\n                });\n                $(\"#tool_panel_section_select\").on(\"change\", function() {\n                    that.tpsSelection();\n                });\n                $(\"#install_repository\").on(\"click\", function(ev) {\n                    var form = $(\"#repository_installation\");\n                    ev.preventDefault();\n                    var params = {};\n                    params.repositories = JSON.stringify([\n                        [\n                            $(\"#install_repository\").attr(\"data-tsrid\"),\n                            $(\"#changeset\")\n                                .find(\"option:selected\")\n                                .val()\n                        ]\n                    ]);\n                    params.tool_shed_repository_ids = JSON.stringify([$(\"#install_repository\").attr(\"data-tsrid\")]);\n                    params.tool_shed_url = that.model.tool_shed_url;\n                    params.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n                    params.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n                    params.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n                    var tps = that.panelSelect(params);\n                    params.tool_panel_section = JSON.stringify(that.panelSelect(params));\n                    params.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                        .find(\"option:selected\")\n                        .val();\n                    params.changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var url = $(\"#repository_installation\").attr(\"action\");\n                    that.prepareInstall(params, url);\n                });\n                $(\"#queue_install\").on(\"click\", function(ev) {\n                    that.options.current_changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .text();\n                    that.options.current_metadata = that.options.repository.metadata[that.options.current_changeset];\n                    var changeset = that.options.current_changeset;\n                    var repository_metadata = {};\n                    _.each(Object.keys(that.options.current_metadata), function(key) {\n                        if (!repository_metadata[key]) {\n                            repository_metadata[key] = that.options.current_metadata[key];\n                        }\n                    });\n                    repository_metadata.install_tool_dependencies = $(\"#install_tool_dependencies\").val();\n                    repository_metadata.install_repository_dependencies = $(\"#install_repository_dependencies\").val();\n                    repository_metadata.install_resolver_dependencies = $(\"#install_resolver_dependencies\").val();\n                    repository_metadata.tool_panel_section = JSON.stringify(that.panelSelect({}));\n                    repository_metadata.shed_tool_conf = $(\"select[name='shed_tool_conf']\")\n                        .find(\"option:selected\")\n                        .val();\n                    repository_metadata.tool_shed_url = that.model.tool_shed_url;\n                    if (repository_metadata.tool_shed_url.substr(-1) == \"/\") {\n                        repository_metadata.tool_shed_url = repository_metadata.tool_shed_url.substr(\n                            0,\n                            repository_metadata.tool_shed_url.length - 1\n                        );\n                    }\n                    toolshed_util.addToQueue(repository_metadata);\n                    that.checkInstalled(repository_metadata);\n                });\n                $(\".tool_panel_section_picker\").on(\"change\", function() {\n                    var new_value = $(this)\n                        .find(\"option:selected\")\n                        .val();\n                    var default_tps = $(\"#tool_panel_section_select\")\n                        .find(\"option:selected\")\n                        .val();\n                    if (new_value == default_tps) {\n                        $(this).attr(\"default\", \"active\");\n                    } else {\n                        $(this).removeAttr(\"default\");\n                    }\n                });\n                $(function() {\n                    $(\"#repository_dependencies\").jstree();\n                });\n                $(\".tool_form\").on(\"click\", function() {\n                    var guid = $(this).attr(\"data-guid\");\n                    var clean = $(this).attr(\"data-clean\");\n                    var name = $(this).attr(\"data-name\");\n                    var desc = $(this).attr(\"data-desc\");\n                    var tool_shed_url = that.model.tool_shed_url;\n                    var tsr_id = $(\"#repository_details\").attr(\"data-tsrid\");\n                    var changeset = $(\"#changeset\")\n                        .find(\"option:selected\")\n                        .val();\n                    var api_url = Galaxy.root + \"api/tool_shed/tool_json\";\n                    var params = {\n                        guid: guid,\n                        tool_shed_url: tool_shed_url,\n                        tsr_id: tsr_id,\n                        changeset: changeset\n                    };\n                    $.get(api_url, params, function(data) {\n                        data.cls = \"ui-portlet-plain\";\n                        var toolform = new FormView(data);\n                        Utils.deepeach(data.inputs, function(input) {\n                            if (input.type) {\n                                if ([\"data\", \"data_collection\"].indexOf(input.type) != -1) {\n                                    input.type = \"hidden\";\n                                    input.info =\n                                        \"Data input '\" + input.name + \"' (\" + Utils.textify(input.extensions) + \")\";\n                                }\n                            }\n                        });\n                        var modal = new Modal.View();\n                        var modal_title = \"<u>\" + name + \"</u> \" + desc;\n                        modal.show({\n                            closing_events: true,\n                            title: modal_title,\n                            body: toolform.$el,\n                            buttons: {\n                                Close: function() {\n                                    modal.hide();\n                                }\n                            }\n                        });\n                    });\n                });\n            },\n\n            checkInstalled: function(metadata) {\n                var that = this;\n                var params = { name: metadata.name, owner: metadata.owner };\n                var already_installed = false;\n                var queued = that.repoQueued(metadata);\n                $.get(Galaxy.root + \"api/tool_shed_repositories\", params, function(data) {\n                    for (var index = 0; index < data.length; index++) {\n                        var repository = data[index];\n                        var installed = !repository.deleted && !repository.uninstalled;\n                        var changeset_match =\n                            repository.changeset_revision == metadata.changeset_revision ||\n                            repository.installed_changeset_revision == metadata.changeset_revision;\n                        if (\n                            repository.name == metadata.repository.name &&\n                            repository.owner == metadata.repository.owner &&\n                            installed &&\n                            changeset_match\n                        ) {\n                            already_installed = true;\n                        }\n                        if (already_installed) {\n                            $(\"#install_repository\").prop(\"disabled\", true);\n                            $(\"#install_repository\").val(\"This revision is already installed\");\n                        } else {\n                            $(\"#install_repository\").prop(\"disabled\", false);\n                            $(\"#install_repository\").val(\"Install this revision\");\n                        }\n                    }\n                    if (that.repoQueued(metadata) || already_installed) {\n                        $(\"#queue_install\").hide();\n                        $(\"#queue_install\").val(\"This revision is already in the queue\");\n                    } else {\n                        $(\"#queue_install\").show();\n                        $(\"#queue_install\").val(\"Install this revision later\");\n                    }\n                });\n            },\n\n            panelSelect: function(params) {\n                var tool_panel_section = {};\n                if ($(\"#tool_panel_section_select\").length) {\n                    params.tool_panel_section_id = $(\"#tool_panel_section_select\")\n                        .find(\"option:selected\")\n                        .val();\n                } else {\n                    params.new_tool_panel_section = $(\"#new_tool_panel_section\").val();\n                }\n                $(\".tool_panel_section_picker\").each(function() {\n                    var element_name = $(this).attr(\"name\");\n                    var tool_guid = $(this).attr(\"data-toolguid\");\n                    if (element_name === \"tool_panel_section_id\") {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this)\n                                .find(\"option:selected\")\n                                .val(),\n                            action: \"append\"\n                        };\n                    } else {\n                        tool_panel_section[tool_guid] = {\n                            tool_panel_section: $(this).val(),\n                            action: \"create\"\n                        };\n                    }\n                });\n                return tool_panel_section;\n            },\n\n            reDraw: function(options) {\n                this.$el.empty();\n                this.initialize(options);\n            },\n\n            repoQueued: function(metadata) {\n                var that = this;\n                if (!localStorage.repositories) {\n                    return;\n                }\n                var repository_queue = JSON.parse(localStorage.repositories);\n                var changeset = metadata.changeset_revision;\n                var queue_key = that.queueKey(metadata);\n                if (localStorage.repositories) {\n                    queued_repos = JSON.parse(localStorage.repositories);\n                }\n                if (queued_repos.hasOwnProperty(queue_key)) {\n                    return true;\n                }\n                return false;\n            },\n\n            queueKey: function(metadata) {\n                var shed_url = this.model.tool_shed_url;\n                // Make sure there is never a trailing slash on the shed URL.\n                if (shed_url.substr(-1) == \"/\") {\n                    shed_url = shed_url.substr(0, shed_url.length - 1);\n                }\n                return shed_url + \"|\" + metadata.repository_id + \"|\" + metadata.changeset_revision;\n            },\n\n            tpsSelection: function() {\n                new_tps = $(\"#tool_panel_section_select\")\n                    .find(\"option:selected\")\n                    .val();\n                $('.tool_panel_section_picker[default=\"active\"]').each(function() {\n                    $(this).val(new_tps);\n                });\n            },\n\n            prepareInstall: function(params, api_url) {\n                var that = this;\n                $.post(api_url, params, function(data) {\n                    var iri_parameters = JSON.parse(data);\n                    that.doInstall(iri_parameters);\n                });\n            },\n\n            doInstall: function(params) {\n                var controller_url = Galaxy.root + \"admin_toolshed/manage_repositories\";\n                var repositories = params.repositories;\n                var new_route = \"status/r/\" + repositories.join(\"|\");\n                $.post(controller_url, params, function(data) {\n                    console.log(\"Initializing repository installation succeeded\");\n                });\n                Backbone.history.navigate(new_route, {\n                    trigger: true,\n                    replace: true\n                });\n            },\n\n            templateRepoDetails: _.template(\n                [\n                    '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n                    '<div class=\"unified-panel-header-inner\">Repository information for <strong><%= repository.name %></strong> from <strong><%= repository.owner %></strong></div>',\n                    '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n                    \"</div>\",\n                    '<div class=\"unified-panel-body\" id=\"repository_details\" data-tsrid=\"<%= repository.id %>\">',\n                    '<form id=\"repository_installation\" name=\"install_repository\" method=\"post\" action=\"<%= api_url %>\">',\n                    '<input type=\"hidden\" id=\"repositories\" name=\"<%= repository.id %>\" value=\"ID\" />',\n                    '<input type=\"hidden\" id=\"tool_shed_url\" name=\"tool_shed_url\" value=\"<%= tool_shed %>\" />',\n                    '<div class=\"toolForm\">',\n                    '<div class=\"toolFormTitle\">Changeset</div>',\n                    '<div class=\"toolFormBody changeset\">',\n                    '<select id=\"changeset\" name=\"changeset\" style=\"margin: 5px;\">',\n                    \"<% _.each(Object.keys(repository.metadata), function(changeset) { %>\",\n                    '<% if (changeset == current_changeset) { var selected = \"selected \"; } else { var selected = \"\"; } %>',\n                    '<option <%= selected %>value=\"<%= changeset.split(\":\")[1] %>\"><%= changeset %></option>',\n                    \"<% }); %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary preview-button\" data-tsrid=\"<%= current_metadata.repository.id %>\" type=\"submit\" id=\"install_repository\" name=\"install_repository\" value=\"Install this revision now\" />',\n                    '<input class=\"btn btn-primary preview-button\" type=\"button\" id=\"queue_install\" name=\"queue_install\" value=\"Install this revision later\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Please select a revision and review the settings below before installing.</div>',\n                    \"</div>\",\n                    \"</div>\",\n                    \"<%= shed_tool_conf %>\",\n                    \"<% if (current_metadata.has_repository_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Repository dependencies for <strong id=\"current_changeset\"><%= current_changeset %></strong></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_repository_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_repository_dependencies\" />',\n                    '<label for=\"install_repository_dependencies\">Install repository dependencies</label>',\n                    \"</p>\",\n                    \"<% current_metadata.repository_dependency_template = repository_dependency_template; %>\",\n                    '<div class=\"tables container-table\" id=\"repository_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"repository_dependencies_table\">',\n                    \"Repository dependencies &ndash; <em>installation of these additional repositories is required</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    \"<%= repository_dependencies_template(current_metadata) %>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tool_dependencies) { %>\",\n                    '<div class=\"toolFormTitle\">Tool dependencies</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<p id=\"install_resolver_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_resolver_dependencies\" />',\n                    '<label for=\"install_resolver_dependencies\">Install resolver dependencies</label>',\n                    \"</p>\",\n                    '<p id=\"install_tool_dependencies_checkbox\">',\n                    '<input type=\"checkbox\" checked id=\"install_tool_dependencies\" />',\n                    '<label for=\"install_tool_dependencies\">Install tool dependencies</label>',\n                    \"</p>\",\n                    '<div class=\"tables container-table\" id=\"tool_dependencies\">',\n                    '<div class=\"expandLink\">',\n                    '<a class=\"toggle_folder\" data_target=\"tool_dependencies_table\">',\n                    \"Tool dependencies &ndash; <em>repository tools require handling of these dependencies</em>\",\n                    \"</a>\",\n                    \"</div>\",\n                    '<table class=\"tables container-table\" id=\"tool_dependencies_table\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Version</th>\",\n                    \"<th>Type</th>\",\n                    \"</tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tool_deps\">',\n                    \"<% _.each(tool_dependencies[current_changeset], function(dependency) { %>\",\n                    '<tr class=\"datasetRow tool_dependency_row\" style=\"display: table-row;\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    \"<%= dependency.name %></td>\",\n                    \"<td><%= dependency.version %></td>\",\n                    \"<td><%= dependency.type %></td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"<% if (current_metadata.includes_tools_for_display_in_tool_panel) { %>\",\n                    '<div class=\"toolFormTitle\">Tools &ndash; <em>click the name to preview the tool and use the pop-up menu to inspect all metadata</em></div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tables container-table\" id=\"tools_toggle\">',\n                    '<table class=\"tables container-table\" id=\"valid_tools\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n                    \"<thead>\",\n                    '<tr style=\"display: table-row;\" class=\"datasetRow\" parent=\"0\" id=\"libraryItem-rt-f9cad7b01a472135\">',\n                    '<th style=\"padding-left: 40px;\">Name</th>',\n                    \"<th>Description</th>\",\n                    \"<th>Version</th>\",\n                    \"<th><%= tps_template_global_select({tps: panel_section_dict, tps_select_options: tps_select_options}) %></tr>\",\n                    \"</thead>\",\n                    '<tbody id=\"tools_in_repo\">',\n                    \"<% _.each(current_metadata.tools, function(tool) { %>\",\n                    '<tr id=\"libraryItem-<%= tool.clean %>\" class=\"tool_row\" style=\"display: table-row;\" style=\"width: 15%\">',\n                    '<td style=\"padding-left: 40px;\">',\n                    '<div id=\"tool-<%= tool.clean %>\" class=\"menubutton split popup\" style=\"float: left;\">',\n                    '<a class=\"tool_form view-info\" data-toggle=\"modal\" data-target=\"toolform_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" data-guid=\"<%= tool.guid %>\" data-name=\"<%= tool.name %>\" data-desc=\"<%= tool.description %>\"><%= tool.name %></a>',\n                    \"</div>\",\n                    \"</td>\",\n                    \"<td><%= tool.description %></td>\",\n                    '<td style=\"width: 15%\"><%= tool.version %></td>',\n                    '<td style=\"width: 35%\" id=\"tool_tps_<%= tool.clean %>\">',\n                    \"<%= tps_template_tool_select({tool: tool, tps: panel_section_dict, tps_select_options: tps_select_options}) %>\",\n                    \"</td>\",\n                    \"</tr>\",\n                    \"<% }); %>\",\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    \"</form>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependencies: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Repository Dependencies</div>',\n                    '<div class=\"toolFormBody tables container-table\" id=\"repository_dependencies\">',\n                    \"<ul>\",\n                    \"<li>Repository installation requires the following\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\",\n                    \"</li>\",\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateRepoDependency: _.template(\n                [\n                    '<li id=\"metadata_<%= id %>\" class=\"datasetRow repository_dependency_row\">',\n                    \"Repository <b><%= repository.name %></b> revision <b><%= changeset_revision %></b> owned by <b><%= repository.owner %></b>\",\n                    \"<% if (has_repository_dependencies) { %>\",\n                    '<ul class=\"child_dependencies\">',\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% dependency.repository_dependency_template = repository_dependency_template; %>\",\n                    \"<%= repository_dependency_template(dependency) %>\",\n                    \"<% }); %>\",\n                    \"</ul>\",\n                    \"<% } %>\",\n                    \"</li>\"\n                ].join(\"\")\n            ),\n\n            templateShedToolConf: _.template(\n                [\n                    '<div class=\"toolFormTitle\">Shed tool configuration file:</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"form-row\">',\n                    \"<%= stc_html %>\",\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">Select the file whose <b>tool_path</b> setting you want used for installing repositories.</div>',\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolDependency: _.template(\n                [\n                    \"<% if (has_repository_dependencies) { %>\",\n                    \"<% _.each(repository_dependencies, function(dependency) { %>\",\n                    \"<% if (dependency.includes_tool_dependencies) { %>\",\n                    \"<% dependency.tool_dependency_template = tool_dependency_template %>\",\n                    \"<%= tool_dependency_template(dependency) %>\",\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"<% } %>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionCreate: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"form-row\" id=\"new_tps\">',\n                    '<input id=\"new_tool_panel_section\" name=\"new_tool_panel_section\" type=\"textfield\" value=\"\" size=\"40\"/>',\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"select_existing\" value=\"Select existing\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Add a new tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateGlobalSectionSelect: _.template(\n                [\n                    '<div id=\"tool_panel_section\">',\n                    '<div class=\"toolFormTitle\">Tool Panel Section</div>',\n                    '<div class=\"toolFormBody\">',\n                    '<div class=\"tab-pane\" id=\"select_tps\">',\n                    '<select name=\"<%= name %>\" id=\"<%= tps.id %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input class=\"btn btn-primary\" type=\"button\" id=\"create_new\" value=\"Create new\" />',\n                    '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n                    \"Select an existing tool panel section to contain the installed tools (optional).\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionCreate: _.template(\n                [\n                    '<div id=\"new_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"form-row\">',\n                    '<input data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" size=\"40\" name=\"new_tool_panel_section\" id=\"new_tool_panel_section_<%= tool.clean %>\" type=\"text\">',\n                    '<input id=\"per_tool_select_<%= tool.clean %>\" class=\"btn btn-primary\" data-toolguid=\"<%= tool.guid %>\" value=\"Select existing\" id=\"select_existing_<%= tool.clean %>\" type=\"button\">',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templateToolSectionSelect: _.template(\n                [\n                    '<div id=\"select_tps_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"tps_creator\">',\n                    '<select default=\"active\" style=\"width: 30em;\" data-toolguid=\"<%= tool.guid %>\" class=\"tool_panel_section_picker\" name=\"tool_panel_section_id\" id=\"tool_panel_section_select_<%= tool.clean %>\">',\n                    \"<%= tps_select_options({sections: tps.sections}) %>\",\n                    \"</select>\",\n                    '<input id=\"per_tool_create_<%= tool.clean %>\" data-clean=\"<%= tool.clean %>\" class=\"btn btn-primary create-tps-button\" data-toolguid=\"<%= tool.guid %>\" value=\"Create new\" id=\"create_new_<%= tool.clean %>\" type=\"button\">',\n                    '<div style=\"clear: both;\" class=\"toolParamHelp\"></div>',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            templatePanelSelectOptions: _.template(\n                [\n                    \"<% _.each(sections, function(section) { %>\",\n                    '<option value=\"<%= section.id %>\"><%= section.name %></option>',\n                    \"<% }); %>\"\n                ].join(\"\")\n            )\n        });\n\n        return {\n            RepoDetails: ToolShedRepositoryView\n        };\n    }\n);\n"]}