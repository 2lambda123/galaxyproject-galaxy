{"version":3,"sources":["mvc/history/history-view-edit.js"],"names":["define","_super","HISTORY_VIEW","HISTORY_CONTENTS","HDAViewClass","HDA_MODEL","HDCAViewClass","HDCA_LI_EDIT","TAGS","ANNOTATIONS","LIST_COLLECTION_CREATOR","PAIR_COLLECTION_CREATOR","initialize","attributes","BASE_MVC","_l","annotationEditor","HistoryView","HistoryViewEdit","extend","_setUpListeners","HDCAListItemEdit","_renderCounts","prototype","_renderSearchProgress","this","tagsEditor","_setUpModelListeners","purgeAllowed","annotationEditorShown","_handleItemDeletedChange","tagsEditorShown","_handleItemVisibleChange","call","on","droptarget:drop","ev","data","dataDropped","dropTargetOff","view:attached view:removed","search:loading-progress","search:searching","_renderSearchFindings","$newRender","listenTo","model","updateHistoryDiskSize","_setUpCollectionListeners","collection","change:deleted","change:visible","fetch","fetching-deleted","$whereTo","$","html","fetching-deleted-done fetching-hidden-done","templates","_buildNewRender","TagsEditor","Galaxy","user","id","get","$where","find","render","panel","toggleHDATagEditors","text","$activator","faIconButton","title","renderItems","classes","searchFor","faIcon","views","jQuery","$el","onshowFirstTime","counts","toJSON","toggleHDAAnnotationEditors","onhide","el","appendTo","fxSpeed","_setUpBehaviors","_renderAnnotation","AnnotationEditor","nameSelector","previousName","newName","previous","func","actions","isAnonymous","action","getSelectedModels","ajaxQueue","make_text_editable","on_finish","HistoryDatasetAssociation","name","fail","multiselectActions","concat","hide","buildCollection","unhide","undelete","collectionType","selection","createFunc","LIST_OF_PAIRS_COLLECTION_CREATOR","purge","_collectionActions","options","contents","includeDeleted","hideSourceItems","removeItemView","set","_handleItemUndeletion","createListCollection","contentsShown","createPairCollection","createListOfPairsCollection","warn","done","refresh","_getItemViewOptions","_handleItemUnhidden","itemModel","_","hidden","_handleItemDeletion","deleted","active","view","showOrHide","_handleItemHidden","toggleShowDeleted","limit","offset","includeHidden","found","speed","each","toggle","drop","$dropTarget","_renderDropTarget","events","clone","click .show-selectors-btn","click .toggle-deleted-link","toggleShowHidden","_renderDropTargetHelp","stop","addClass","join","dropTarget","dropTargetOn","bind","dragenter","dragover","dragleave","$list","before","evName","dropHandlers","preventDefault","hasOwnProperty","css","stopPropagation","remove","dataTransfer","dropEffect","JSON","parse","trigger","_dropHandlers","off","self","dropTargetToggle","when","countsTemplate","originalEvent","getData","err","isObject","model_class","currentPage","fetchPage","then","copy","toString","wrapTemplate","foundTemplate"],"mappings":"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","file":"../../../scripts/mvc/history/history-view-edit.js","sourcesContent":["define(\n    [\n        \"mvc/history/history-view\",\n        \"mvc/history/history-contents\",\n        \"mvc/dataset/states\",\n        \"mvc/history/hda-model\",\n        \"mvc/history/hda-li-edit\",\n        \"mvc/history/hdca-li-edit\",\n        \"mvc/tag\",\n        \"mvc/annotation\",\n        \"mvc/collection/list-collection-creator\",\n        \"mvc/collection/pair-collection-creator\",\n        \"mvc/collection/list-of-pairs-collection-creator\",\n        \"ui/fa-icon-button\",\n        \"mvc/ui/popup-menu\",\n        \"mvc/base-mvc\",\n        \"utils/localization\",\n        \"ui/editable-text\"\n    ],\n    function(\n        HISTORY_VIEW,\n        HISTORY_CONTENTS,\n        STATES,\n        HDA_MODEL,\n        HDA_LI_EDIT,\n        HDCA_LI_EDIT,\n        TAGS,\n        ANNOTATIONS,\n        LIST_COLLECTION_CREATOR,\n        PAIR_COLLECTION_CREATOR,\n        LIST_OF_PAIRS_COLLECTION_CREATOR,\n        faIconButton,\n        PopupMenu,\n        BASE_MVC,\n        _l\n    ) {\n        \"use strict\";\n\n        /* =============================================================================\nTODO:\n\n============================================================================= */\n        var _super = HISTORY_VIEW.HistoryView;\n        // base class for history-view-edit-current and used as-is in history/view.mako\n        /** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\n        var HistoryViewEdit = _super.extend(\n            /** @lends HistoryViewEdit.prototype */ {\n                /** class to use for constructing the HistoryDatasetAssociation views */\n                HDAViewClass: HDA_LI_EDIT.HDAListItemEdit,\n                /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n                HDCAViewClass: HDCA_LI_EDIT.HDCAListItemEdit,\n\n                // ......................................................................... SET UP\n                /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n                initialize: function(attributes) {\n                    attributes = attributes || {};\n                    _super.prototype.initialize.call(this, attributes);\n\n                    // ---- set up instance vars\n                    /** editor for tags - sub-view */\n                    this.tagsEditor = null;\n\n                    /** enable drag and drop - sub-view */\n                    this.dragItems = true;\n\n                    /** editor for annotations - sub-view */\n                    this.annotationEditor = null;\n\n                    /** allow user purge of dataset files? */\n                    this.purgeAllowed = attributes.purgeAllowed || false;\n\n                    // states/modes the panel can be in\n                    /** is the panel currently showing the dataset selection controls? */\n                    this.annotationEditorShown = attributes.annotationEditorShown || false;\n                    this.tagsEditorShown = attributes.tagsEditorShown || false;\n                },\n\n                /** Override to handle history as drag-drop target */\n                _setUpListeners: function() {\n                    _super.prototype._setUpListeners.call(this);\n                    return this.on({\n                        \"droptarget:drop\": function(ev, data) {\n                            // process whatever was dropped and re-hide the drop target\n                            this.dataDropped(data);\n                            this.dropTargetOff();\n                        },\n                        \"view:attached view:removed\": function() {\n                            this._renderCounts();\n                        },\n                        \"search:loading-progress\": this._renderSearchProgress,\n                        \"search:searching\": this._renderSearchFindings\n                    });\n                },\n\n                // ------------------------------------------------------------------------ listeners\n                /** listening for history and HDA events */\n                _setUpModelListeners: function() {\n                    _super.prototype._setUpModelListeners.call(this);\n                    this.listenTo(this.model, \"change:size\", this.updateHistoryDiskSize);\n                    return this;\n                },\n\n                /** listening for collection events */\n                _setUpCollectionListeners: function() {\n                    _super.prototype._setUpCollectionListeners.call(this);\n                    this.listenTo(this.collection, {\n                        \"change:deleted\": this._handleItemDeletedChange,\n                        \"change:visible\": this._handleItemVisibleChange,\n                        \"change:purged\": function(model) {\n                            // hafta get the new nice-size w/o the purged model\n                            this.model.fetch();\n                        },\n                        // loading indicators for deleted/hidden\n                        \"fetching-deleted\": function(collection) {\n                            this.$(\"> .controls .deleted-count\").html(\"<i>\" + _l(\"loading...\") + \"</i>\");\n                        },\n                        \"fetching-hidden\": function(collection) {\n                            this.$(\"> .controls .hidden-count\").html(\"<i>\" + _l(\"loading...\") + \"</i>\");\n                        },\n                        \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n                    });\n                    return this;\n                },\n\n                // ------------------------------------------------------------------------ panel rendering\n                /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n                _buildNewRender: function() {\n                    // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n                    var $newRender = _super.prototype._buildNewRender.call(this);\n                    if (!this.model) {\n                        return $newRender;\n                    }\n\n                    if (Galaxy && Galaxy.user && Galaxy.user.id && Galaxy.user.id === this.model.get(\"user_id\")) {\n                        this._renderTags($newRender);\n                        this._renderAnnotation($newRender);\n                    }\n                    return $newRender;\n                },\n\n                /** Update the history size display (curr. upper right of panel). */\n                updateHistoryDiskSize: function() {\n                    this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n                },\n\n                /** override to render counts when the items are rendered */\n                renderItems: function($whereTo) {\n                    var views = _super.prototype.renderItems.call(this, $whereTo);\n                    if (!this.searchFor) {\n                        this._renderCounts($whereTo);\n                    } else {\n                        this._renderSearchFindings($whereTo);\n                    }\n                    return views;\n                },\n\n                /** override to show counts, what's deleted/hidden, and links to toggle those */\n                _renderCounts: function($whereTo) {\n                    $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n                    var html = this.templates.counts(this.model.toJSON(), this);\n                    return $whereTo.find(\"> .controls .subtitle\").html(html);\n                },\n\n                /** render the tags sub-view controller */\n                _renderTags: function($where) {\n                    var panel = this;\n                    this.tagsEditor = new TAGS.TagsEditor({\n                        model: this.model,\n                        el: $where.find(\".controls .tags-display\"),\n                        onshowFirstTime: function() {\n                            this.render();\n                        },\n                        // show hide sub-view tag editors when this is shown/hidden\n                        onshow: function() {\n                            panel.toggleHDATagEditors(true, panel.fxSpeed);\n                        },\n                        onhide: function() {\n                            panel.toggleHDATagEditors(false, panel.fxSpeed);\n                        },\n                        $activator: faIconButton({\n                            title: _l(\"Edit history tags\"),\n                            classes: \"history-tag-btn\",\n                            faIcon: \"fa-tags\"\n                        }).appendTo($where.find(\".controls .actions\"))\n                    });\n                },\n                /** render the annotation sub-view controller */\n                _renderAnnotation: function($where) {\n                    var panel = this;\n                    this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                        model: this.model,\n                        el: $where.find(\".controls .annotation-display\"),\n                        onshowFirstTime: function() {\n                            this.render();\n                        },\n                        // show hide sub-view view annotation editors when this is shown/hidden\n                        onshow: function() {\n                            panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n                        },\n                        onhide: function() {\n                            panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n                        },\n                        $activator: faIconButton({\n                            title: _l(\"Edit history annotation\"),\n                            classes: \"history-annotate-btn\",\n                            faIcon: \"fa-comment\"\n                        }).appendTo($where.find(\".controls .actions\"))\n                    });\n                },\n\n                /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n                _setUpBehaviors: function($where) {\n                    $where = $where || this.$el;\n                    _super.prototype._setUpBehaviors.call(this, $where);\n                    if (!this.model) {\n                        return;\n                    }\n\n                    // anon users shouldn't have access to any of the following\n                    if (!Galaxy.user || Galaxy.user.isAnonymous() || Galaxy.user.id !== this.model.get(\"user_id\")) {\n                        return;\n                    }\n\n                    var panel = this,\n                        nameSelector = \"> .controls .name\";\n                    $where\n                        .find(nameSelector)\n                        .attr(\"title\", _l(\"Click to rename history\"))\n                        .tooltip({ placement: \"bottom\" })\n                        .make_text_editable({\n                            on_finish: function(newName) {\n                                var previousName = panel.model.get(\"name\");\n                                if (newName && newName !== previousName) {\n                                    panel.$el.find(nameSelector).text(newName);\n                                    panel.model.save({ name: newName }).fail(function() {\n                                        panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                                    });\n                                } else {\n                                    panel.$el.find(nameSelector).text(previousName);\n                                }\n                            }\n                        });\n                },\n\n                /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n                multiselectActions: function() {\n                    var panel = this,\n                        actions = [\n                            {\n                                html: _l(\"Hide datasets\"),\n                                func: function() {\n                                    var action = HDA_MODEL.HistoryDatasetAssociation.prototype.hide;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Unhide datasets\"),\n                                func: function() {\n                                    var action = HDA_MODEL.HistoryDatasetAssociation.prototype.unhide;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Delete datasets\"),\n                                func: function() {\n                                    var action = HDA_MODEL.HistoryDatasetAssociation.prototype[\"delete\"];\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            },\n                            {\n                                html: _l(\"Undelete datasets\"),\n                                func: function() {\n                                    var action = HDA_MODEL.HistoryDatasetAssociation.prototype.undelete;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            }\n                        ];\n                    if (panel.purgeAllowed) {\n                        actions.push({\n                            html: _l(\"Permanently delete datasets\"),\n                            func: function() {\n                                if (\n                                    confirm(_l(\"This will permanently remove the data in your datasets. Are you sure?\"))\n                                ) {\n                                    var action = HDA_MODEL.HistoryDatasetAssociation.prototype.purge;\n                                    panel.getSelectedModels().ajaxQueue(action);\n                                }\n                            }\n                        });\n                    }\n                    actions = actions.concat(panel._collectionActions());\n                    return actions;\n                },\n\n                /**   */\n                _collectionActions: function() {\n                    var panel = this;\n                    return [\n                        {\n                            html: _l(\"Build Dataset List\"),\n                            func: function() {\n                                panel.buildCollection(\"list\");\n                            }\n                        },\n                        // TODO: Only show quick pair if two things selected.\n                        {\n                            html: _l(\"Build Dataset Pair\"),\n                            func: function() {\n                                panel.buildCollection(\"paired\");\n                            }\n                        },\n                        {\n                            html: _l(\"Build List of Dataset Pairs\"),\n                            func: function() {\n                                panel.buildCollection(\"list:paired\");\n                            }\n                        }\n                    ];\n                },\n\n                buildCollection: function(collectionType, selection, hideSourceItems) {\n                    var panel = this;\n                    var selection = selection || panel.getSelectedModels();\n                    var hideSourceItems = hideSourceItems || false;\n                    var createFunc;\n                    if (collectionType == \"list\") {\n                        createFunc = LIST_COLLECTION_CREATOR.createListCollection;\n                    } else if (collectionType == \"paired\") {\n                        createFunc = PAIR_COLLECTION_CREATOR.createPairCollection;\n                    } else if (collectionType == \"list:paired\") {\n                        createFunc = LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n                    } else {\n                        console.warn(\"Unknown collectionType encountered \" + collectionType);\n                    }\n                    createFunc(selection, hideSourceItems).done(function() {\n                        panel.model.refresh();\n                    });\n                },\n\n                // ------------------------------------------------------------------------ sub-views\n                /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n                _getItemViewOptions: function(model) {\n                    var options = _super.prototype._getItemViewOptions.call(this, model);\n                    _.extend(options, {\n                        purgeAllowed: this.purgeAllowed,\n                        tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n                        annotationEditorShown: this.annotationEditor && !this.annotationEditor.hidden\n                    });\n                    return options;\n                },\n\n                /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n                _handleItemDeletedChange: function(itemModel) {\n                    if (itemModel.get(\"deleted\")) {\n                        this._handleItemDeletion(itemModel);\n                    } else {\n                        this._handleItemUndeletion(itemModel);\n                    }\n                    this._renderCounts();\n                },\n\n                _handleItemDeletion: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.deleted += 1;\n                    contentsShown.active -= 1;\n                    if (!this.model.contents.includeDeleted) {\n                        this.removeItemView(itemModel);\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                _handleItemUndeletion: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.deleted -= 1;\n                    if (!this.model.contents.includeDeleted) {\n                        contentsShown.active -= 1;\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n                _handleItemVisibleChange: function(itemModel) {\n                    if (itemModel.hidden()) {\n                        this._handleItemHidden(itemModel);\n                    } else {\n                        this._handleItemUnhidden(itemModel);\n                    }\n                    this._renderCounts();\n                },\n\n                _handleItemHidden: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.hidden += 1;\n                    contentsShown.active -= 1;\n                    if (!this.model.contents.includeHidden) {\n                        this.removeItemView(itemModel);\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                _handleItemUnhidden: function(itemModel) {\n                    var contentsShown = this.model.get(\"contents_active\");\n                    contentsShown.hidden -= 1;\n                    if (!this.model.contents.includeHidden) {\n                        contentsShown.active -= 1;\n                    }\n                    this.model.set(\"contents_active\", contentsShown);\n                },\n\n                /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n                toggleHDATagEditors: function(showOrHide, speed) {\n                    _.each(this.views, function(view) {\n                        if (view.tagsEditor) {\n                            view.tagsEditor.toggle(showOrHide, speed);\n                        }\n                    });\n                },\n\n                /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n                toggleHDAAnnotationEditors: function(showOrHide, speed) {\n                    _.each(this.views, function(view) {\n                        if (view.annotationEditor) {\n                            view.annotationEditor.toggle(showOrHide, speed);\n                        }\n                    });\n                },\n\n                // ------------------------------------------------------------------------ panel events\n                /** event map */\n                events: _.extend(_.clone(_super.prototype.events), {\n                    \"click .show-selectors-btn\": \"toggleSelectors\",\n                    \"click .toggle-deleted-link\": function(ev) {\n                        this.toggleShowDeleted();\n                    },\n                    \"click .toggle-hidden-link\": function(ev) {\n                        this.toggleShowHidden();\n                    }\n                }),\n\n                // ------------------------------------------------------------------------ search\n                _renderSearchProgress: function(limit, offset) {\n                    var stop = limit + offset;\n                    return this.$(\"> .controls .subtitle\").html(\n                        [\"<i>\", _l(\"Searching \"), stop, \"/\", this.model.contentsShown(), \"</i>\"].join(\"\")\n                    );\n                },\n\n                /** override to display number found in subtitle */\n                _renderSearchFindings: function($whereTo) {\n                    $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n                    var html = this.templates.found(this.model.toJSON(), this);\n                    $whereTo.find(\"> .controls .subtitle\").html(html);\n                    return this;\n                },\n\n                // ------------------------------------------------------------------------ as drop target\n                /** turn all the drag and drop handlers on and add some help text above the drop area */\n                dropTargetOn: function() {\n                    if (this.dropTarget) {\n                        return this;\n                    }\n                    this.dropTarget = true;\n\n                    //TODO: to init\n                    var dropHandlers = {\n                        dragenter: _.bind(this.dragenter, this),\n                        dragover: _.bind(this.dragover, this),\n                        dragleave: _.bind(this.dragleave, this),\n                        drop: _.bind(this.drop, this)\n                    };\n\n                    var $dropTarget = this._renderDropTarget();\n                    this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n                    for (var evName in dropHandlers) {\n                        if (dropHandlers.hasOwnProperty(evName)) {\n                            //console.debug( evName, dropHandlers[ evName ] );\n                            $dropTarget.on(evName, dropHandlers[evName]);\n                        }\n                    }\n                    return this;\n                },\n\n                /** render a box to serve as a 'drop here' area on the history */\n                _renderDropTarget: function() {\n                    this.$(\".history-drop-target\").remove();\n                    return $(\"<div/>\").addClass(\"history-drop-target\");\n                },\n\n                /** tell the user how it works  */\n                _renderDropTargetHelp: function() {\n                    this.$(\".history-drop-target-help\").remove();\n                    return $(\"<div/>\")\n                        .addClass(\"history-drop-target-help\")\n                        .text(_l(\"Drag datasets here to copy them to the current history\"));\n                },\n\n                /** shut down drag and drop event handlers and remove drop target */\n                dropTargetOff: function() {\n                    if (!this.dropTarget) {\n                        return this;\n                    }\n                    //this.log( 'dropTargetOff' );\n                    this.dropTarget = false;\n                    var dropTarget = this.$(\".history-drop-target\").get(0);\n                    for (var evName in this._dropHandlers) {\n                        if (this._dropHandlers.hasOwnProperty(evName)) {\n                            dropTarget.off(evName, this._dropHandlers[evName]);\n                        }\n                    }\n                    this.$(\".history-drop-target\").remove();\n                    this.$(\".history-drop-target-help\").remove();\n                    return this;\n                },\n                /** toggle the target on/off */\n                dropTargetToggle: function() {\n                    if (this.dropTarget) {\n                        this.dropTargetOff();\n                    } else {\n                        this.dropTargetOn();\n                    }\n                    return this;\n                },\n\n                dragenter: function(ev) {\n                    //console.debug( 'dragenter:', this, ev );\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n                },\n                dragover: function(ev) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                },\n                dragleave: function(ev) {\n                    //console.debug( 'dragleave:', this, ev );\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n                },\n                /** when (text) is dropped try to parse as json and trigger an event */\n                drop: function(ev) {\n                    ev.preventDefault();\n                    //ev.stopPropagation();\n\n                    var self = this;\n                    var dataTransfer = ev.originalEvent.dataTransfer;\n                    var data = dataTransfer.getData(\"text\");\n\n                    dataTransfer.dropEffect = \"move\";\n                    try {\n                        data = JSON.parse(data);\n                    } catch (err) {\n                        self.warn(\"error parsing JSON from drop:\", data);\n                    }\n\n                    self.trigger(\"droptarget:drop\", ev, data, self);\n                    return false;\n                },\n\n                /** handler that copies data into the contents */\n                dataDropped: function(data) {\n                    var self = this;\n                    // HDA: dropping will copy it to the history\n                    if (_.isObject(data) && data.model_class === \"HistoryDatasetAssociation\" && data.id) {\n                        if (self.contents.currentPage !== 0) {\n                            return self.contents.fetchPage(0).then(function() {\n                                return self.model.contents.copy(data.id);\n                            });\n                        }\n                        return self.model.contents.copy(data.id);\n                    }\n                    return jQuery.when();\n                },\n\n                // ........................................................................ misc\n                /** Return a string rep of the history */\n                toString: function() {\n                    return \"HistoryViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n                }\n            }\n        );\n\n        //------------------------------------------------------------------------------ TEMPLATES\n        HistoryViewEdit.prototype.templates = (function() {\n            var countsTemplate = BASE_MVC.wrapTemplate(\n                [\n                    \"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\",\n                    \"<% if( shown ){ %>\",\n                    '<span class=\"shown-count\">',\n                    \"<%- shown %> \",\n                    _l(\"shown\"),\n                    \"</span>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.deleted ){ %>\",\n                    '<span class=\"deleted-count\">',\n                    \"<% if( view.model.contents.includeDeleted ){ %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide deleted\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    \"<%- history.contents_active.deleted %> \",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"deleted\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</span>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.hidden ){ %>\",\n                    '<span class=\"hidden-count\">',\n                    \"<% if( view.model.contents.includeHidden ){ %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide hidden\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    \"<%- history.contents_active.hidden %> \",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hidden\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</span>\",\n                    \"<% } %>\"\n                ],\n                \"history\"\n            );\n\n            var foundTemplate = BASE_MVC.wrapTemplate(\n                [\n                    _l(\"Found\"),\n                    \" <%- view.views.length %>, \",\n\n                    \"<% if( history.contents_active.deleted ){ %>\",\n                    \"<% if( view.model.contents.includeDeleted ){ %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide deleted\"),\n                    \"</a>, \",\n                    \"<% } else { %>\",\n                    '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n                    _l(\"show deleted\"),\n                    \"</a>, \",\n                    \"<% } %>\",\n                    \"<% } %>\",\n\n                    \"<% if( history.contents_active.hidden ){ %>\",\n                    \"<% if( view.model.contents.includeHidden ){ %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"hide hidden\"),\n                    \"</a>\",\n                    \"<% } else { %>\",\n                    '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n                    _l(\"show hidden\"),\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"<% } %>\"\n                ],\n                \"history\"\n            );\n\n            return _.extend(_.clone(_super.prototype.templates), {\n                counts: countsTemplate,\n                found: foundTemplate\n            });\n        })();\n\n        //==============================================================================\n        return {\n            HistoryViewEdit: HistoryViewEdit\n        };\n    }\n);\n"]}