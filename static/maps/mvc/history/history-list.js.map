{"version":3,"sources":["mvc/history/history-list.js"],"names":["define","Utils","HistoryModel","title","View","Backbone","extend","initialize","model","this","url","root","success","Model","response","_","options","action_id","operation","$","param","Galaxy","params","self","_showCopyDialog","label","onclick","id","set","render","grid","GridView","attributes","append","$el","alert","done","History","historyCopyDialog","fetch","window","history","parent","currHistoryPanel","loadCurrentHistory","location","reload"],"mappings":"aACAA,QAAQ,cAAe,qBAAsB,4BAA6B,2BAA4B,SADtGC,EACAD,EAMIE,EACIC,GA6CJ,OACIC,KA5CIC,SAAWD,KAAXE,QACAH,MAAA,YACAI,WAAKC,SAAYH,GACjBJ,IAAAA,EAAUQ,KACNC,KAAAA,WAAYC,EAAAA,WACZC,KAAAA,MAAS,IAAAP,SAAAQ,MACLC,EAAAA,KACAC,IAAAA,OAAOD,KAAAA,WAAAE,EAAwBC,UAASC,IAAWC,EAAAC,MAAAC,OAAAC,QAC/CV,QAAA,SAAIM,GACAA,EAAAA,aAAA,EACIK,EAAAA,KAAAA,EAAAA,WAAKC,SAALN,GADJ,QAECA,EAFDO,QAGHP,EAAAQ,QAAA,SAAAC,GALLJ,EAAAC,gBAAAG,OAJRJ,EAAAf,MAAAoB,IAAAd,GANwBS,EAAAM,aA0B3BA,OA1B2B,WAwBxB,IAAIC,EAAO,IAAIC,EAAStB,KAAKD,MAAMwB,YAIvCR,KAAAA,IAAAA,QAAiBS,OAAAH,EAAAI,MAKLC,gBAAM,SAAAR,GACT,IACAS,EAAK,IAAAlC,EAAWmC,SAAAV,GAAAA,IACbW,EACIC,QACIC,KAAAA,WACHL,MAAA,mEAHLC,KAAA,WANRE,EAAAG,MAAAL,KAAA,WAaHI,OAAAE,QAAAF,OAAAE,OAAArB,QAAAmB,OAAAE,OAAArB,OAAAsB,kBA3CLH,OAAAE,OAAArB,OAAAsB,iBAAAC,qBA8COJ,OAAAK,SAAAC,QAAA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["/** This class renders the grid list. */\ndefine([\"utils/utils\", \"mvc/grid/grid-view\", \"mvc/history/history-model\", \"mvc/history/copy-dialog\"], function(\n    Utils,\n    GridView,\n    HistoryModel,\n    historyCopyDialog\n) {\n    var View = Backbone.View.extend({\n        title: \"Histories\",\n        initialize: function(options) {\n            var self = this;\n            this.setElement($(\"<div/>\"));\n            this.model = new Backbone.Model();\n            Utils.get({\n                url: Galaxy.root + \"history/\" + options.action_id + \"?\" + $.param(Galaxy.params),\n                success: function(response) {\n                    response[\"dict_format\"] = true;\n                    _.each(response[\"operations\"], function(operation) {\n                        if (operation.label == \"Copy\") {\n                            operation.onclick = function(id) {\n                                self._showCopyDialog(id);\n                            };\n                        }\n                    });\n                    self.model.set(response);\n                    self.render();\n                }\n            });\n        },\n\n        render: function() {\n            var grid = new GridView(this.model.attributes);\n            this.$el.empty().append(grid.$el);\n        },\n\n        _showCopyDialog: function(id) {\n            var history = new HistoryModel.History({ id: id });\n            history\n                .fetch()\n                .fail(function() {\n                    alert(\"History could not be fetched. Please contact an administrator\");\n                })\n                .done(function() {\n                    historyCopyDialog(history, {}).done(function() {\n                        if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                            window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                        }\n                        window.location.reload(true);\n                    });\n                });\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n"]}