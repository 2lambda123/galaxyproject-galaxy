{"version":3,"sources":["mvc/history/hdca-li-edit.js"],"names":["define","HDCA_LI","DC_VIEW_EDIT","faIconButton","_l","_super","HDCAListItemView","HDCAListItemEdit","extend","_getFoldoutPanelClass","model","get","ListCollectionViewEdit","PairCollectionViewEdit","ListOfPairsCollectionViewEdit","ListOfListsCollectionViewEdit","TypeError","this","_renderPrimaryActions","prototype","call","concat","_renderDeleteButton","deleted","classes","disabled","self","$el","find","trigger","toString","modelString"],"mappings":"aAAAA,QACK,sBAAuB,sCAAuC,oBAAqB,sBADxFA,SACKC,EAAAC,EAAuBC,EAAAC,GAKpB,IAAIC,EAASJ,EAAQK,iBA0DrB,OACIC,iBAxDmBF,EAAOG,QAKtBC,sBAAA,WACAA,OAAAA,KAAuBC,MAAAC,IAAA,oBACX,IAAKD,OACT,OAAAR,EAAAU,uBACI,IAAOV,SACN,OAALA,EAAAW,uBACI,IAAOX,cACN,OAALA,EAAAY,8BACI,IAAOZ,YACN,OAALA,EAAAa,8BAPJ,MAAA,IAAAC,UAAA,2BAAAC,KAAAP,MAAAC,IAAA,qBAcJO,sBAAA,WAGI,OAFJA,KAAAA,IAAAA,KAAuB,0BAEnBb,EAAAc,UAAAD,sBAAAE,KAAAH,MAAAI,QAAAJ,KAAAK,yBAIJA,oBAAA,WACAA,IAAAA,EAAqBL,KACNM,EAAXN,KAAAP,MAAAC,IAAA,WACIY,OAAUpB,GACPA,MAAaC,EAAbD,EAAa,wCAAA,UACToB,QAAUnB,aACjBoB,OAAS,WACDC,SAHQF,EAIhBE,QAJgB,WAMZC,EAAAC,IAAAC,KAAA,wBAAAC,QAAA,YACAH,EAAAhB,MAAA,aAOZoB,SAAA,WAEQC,MAAAA,qBADad,KAAAP,MAAAO,KAAAP,MAAA,GAAA,cACgC","file":"../../../scripts/mvc/history/hdca-li-edit.js","sourcesContent":["define(\n    [\"mvc/history/hdca-li\", \"mvc/collection/collection-view-edit\", \"ui/fa-icon-button\", \"utils/localization\"],\n    function(HDCA_LI, DC_VIEW_EDIT, faIconButton, _l) {\n        \"use strict\";\n\n        //==============================================================================\n        var _super = HDCA_LI.HDCAListItemView;\n        /** @class Editing view for HistoryDatasetCollectionAssociation.\n */\n        var HDCAListItemEdit = _super.extend(\n            /** @lends HDCAListItemEdit.prototype */ {\n                /** logger used to record this.log messages, commonly set to console */\n                //logger              : console,\n\n                /** Override to return editable versions of the collection panels */\n                _getFoldoutPanelClass: function() {\n                    switch (this.model.get(\"collection_type\")) {\n                        case \"list\":\n                            return DC_VIEW_EDIT.ListCollectionViewEdit;\n                        case \"paired\":\n                            return DC_VIEW_EDIT.PairCollectionViewEdit;\n                        case \"list:paired\":\n                            return DC_VIEW_EDIT.ListOfPairsCollectionViewEdit;\n                        case \"list:list\":\n                            return DC_VIEW_EDIT.ListOfListsCollectionViewEdit;\n                    }\n                    throw new TypeError(\"Uknown collection_type: \" + this.model.get(\"collection_type\"));\n                },\n\n                // ......................................................................... delete\n                /** In this override, add the delete button. */\n                _renderPrimaryActions: function() {\n                    this.log(this + \"._renderPrimaryActions\");\n                    // render the display, edit attr and delete icon-buttons\n                    return _super.prototype._renderPrimaryActions.call(this).concat([this._renderDeleteButton()]);\n                },\n\n                /** Render icon-button to delete this collection. */\n                _renderDeleteButton: function() {\n                    var self = this,\n                        deleted = this.model.get(\"deleted\");\n                    return faIconButton({\n                        title: deleted ? _l(\"Dataset collection is already deleted\") : _l(\"Delete\"),\n                        classes: \"delete-btn\",\n                        faIcon: \"fa-times\",\n                        disabled: deleted,\n                        onclick: function() {\n                            // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                            self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                            self.model[\"delete\"]();\n                        }\n                    });\n                },\n\n                // ......................................................................... misc\n                /** string rep */\n                toString: function() {\n                    var modelString = this.model ? this.model + \"\" : \"(no model)\";\n                    return \"HDCAListItemEdit(\" + modelString + \")\";\n                }\n            }\n        );\n\n        //==============================================================================\n        return {\n            HDCAListItemEdit: HDCAListItemEdit\n        };\n    }\n);\n"]}