{"version":3,"sources":["mvc/history/history-view-annotated.js"],"names":["define","HISTORY_VIEW","HDA_LI","HDCA_LI","BASE_MVC","_l","_super","HistoryView","AnnotatedHistoryView","extend","className","prototype","_buildNewRender","$newRender","call","this","renderHistoryAnnotation","annotation","model","get","find","renderItems","$whereTo","$el","$controls","remove","$","append","views","text","appendTo","_renderItemView$el","_","view","render","stopPropagation","ev","clone","events","click .contents-container","$currTarget","dropdown","click","click .icon-btn","_clickSectionLink","currentTarget","length","attr","sectionNumber","parent","openSection","toString"],"mappings":"aAAAA,QACK,2BAA4B,qBAAsB,sBAAuB,eAAgB,sBAD9FA,SACKC,EAAAC,EAADC,EAA6BC,EAAAC,GAQrBC,IAAAA,EAASL,EAAaM,YAgG1B,OACIC,qBAxFuBF,EAAOG,QAE1BC,UAAkBC,EAAAA,UAAUD,UAAY,2BAIxCE,gBAAiB,WAETC,IAAAA,EAAoBF,EAAAA,UAAUC,gBAAqBE,KAAvDC,MAEOF,OADFG,KAAAA,wBAAwBH,GACtBA,GAIXG,wBAAyB,SAAAH,GACjBI,IAAAA,EAAkBC,KAAMC,MAAIA,IAAA,cAC3BF,GAGLJ,EAAgBO,KAAA,yBAA8BH,KAAAA,IAIlDI,YAAa,SAAAC,GACTA,EAAWA,GAAXP,KAAAQ,IACOZ,EAAAA,UAAUU,YAAiBP,KAAMQ,KAAxCA,GAEIE,IAAAA,EAAYF,EAAcF,KAAA,eAC9BI,EAAeJ,KAAA,+BAAfK,SAEiBC,EAAA,6CACZC,QAMOC,EAAZ,yCAAAC,KAAAxB,EAAA,YApCqCqB,EAAA,yCAAAG,KAAAxB,EAAA,iBAuCzCyB,SAAAN,GAEAO,OAAAA,KAAoBH,OAQZI,mBAAiB1B,SAAOK,GAC5B,OAAAe,EAAA,qCAAAC,QACAM,EAAAC,OAAA,GAAAX,IACOY,EAAAA,kCAAHN,KAAAI,EAAAf,MAAAC,IAAA,eAAA,OAOAiB,OAAGD,EAAAA,OAAAA,EAAHE,MAAA/B,EAAAK,UAAA2B,SAEAC,4BAAA,SAAAH,GACII,EAAAA,kBACAA,EAAAA,EAAAA,eACAA,KAAYC,yBACfC,SAPLC,kBAAmB,SAASP,GAWhCQ,EAAmBT,kBArEsB,IAAAK,EAAAd,EAAAU,EAAAS,eA+D7BL,EAAYM,QAA8C,aAApCN,EAAYO,KAAK,gBAcnDP,EAAAC,SAAA,aA9ERG,kBAAA,SAAAR,GAuEY,IAAIY,EAAgBtB,EAAEU,EAAGS,eAerCI,SACOA,SACHzC,KAAsBA,WAD1BO,KAAAmC,YAAAF,IAPQG,SAAU,WACN,MAAO,yBAA2BpC,KAAKG,MAAQH,KAAKG,MAAMC,IAAI,QAAU,IAAM","file":"../../../scripts/mvc/history/history-view-annotated.js","sourcesContent":["define(\n    [\"mvc/history/history-view\", \"mvc/history/hda-li\", \"mvc/history/hdca-li\", \"mvc/base-mvc\", \"utils/localization\"],\n    function(HISTORY_VIEW, HDA_LI, HDCA_LI, BASE_MVC, _l) {\n        \"use strict\";\n\n        /* =============================================================================\nTODO:\n\n============================================================================= */\n        var _super = HISTORY_VIEW.HistoryView;\n        // used in history/display.mako and history/embed.mako\n        /** @class View/Controller for a tabular view of the history model.\n *\n *  As ReadOnlyHistoryView, but with:\n *      history annotation always shown\n *      datasets displayed in a table:\n *          datasets in left cells, dataset annotations in the right\n */\n        var AnnotatedHistoryView = _super.extend(\n            /** @lends AnnotatedHistoryView.prototype */ {\n                className: _super.prototype.className + \" annotated-history-panel\",\n\n                // ------------------------------------------------------------------------ panel rendering\n                /** In this override, add the history annotation */\n                _buildNewRender: function() {\n                    //TODO: shouldn't this display regardless (on all non-current panels)?\n                    var $newRender = _super.prototype._buildNewRender.call(this);\n                    this.renderHistoryAnnotation($newRender);\n                    return $newRender;\n                },\n\n                /** render the history's annotation as its own field */\n                renderHistoryAnnotation: function($newRender) {\n                    var annotation = this.model.get(\"annotation\");\n                    if (!annotation) {\n                        return;\n                    }\n                    $newRender.find(\"> .controls .subtitle\").text(annotation);\n                },\n\n                /** override to add headers to indicate the dataset, annotation columns */\n                renderItems: function($whereTo) {\n                    $whereTo = $whereTo || this.$el;\n                    _super.prototype.renderItems.call(this, $whereTo);\n\n                    var $controls = $whereTo.find(\"> .controls\");\n                    $controls.find(\".contents-container.headers\").remove();\n\n                    var $headers = $('<div class=\"contents-container headers\"/>')\n                        .append([\n                            $('<div class=\"history-content header\"/>').text(_l(\"Dataset\")),\n                            $('<div class=\"additional-info header\"/>').text(_l(\"Annotation\"))\n                        ])\n                        .appendTo($controls);\n\n                    return self.views;\n                },\n\n                // ------------------------------------------------------------------------ sub-views\n                /** override to wrap each subview */\n                _renderItemView$el: function(view) {\n                    return $('<div class=\"contents-container\"/>').append([\n                        view.render(0).$el,\n                        $('<div class=\"additional-info\"/>').text(view.model.get(\"annotation\") || \"\")\n                    ]);\n                },\n\n                // ------------------------------------------------------------------------ panel events\n                events: _.extend(_.clone(_super.prototype.events), {\n                    // clicking on any part of the row will expand the items\n                    \"click .contents-container\": function(ev) {\n                        ev.stopPropagation();\n                        $(ev.currentTarget)\n                            .find(\".list-item .title-bar\")\n                            .click();\n                    },\n                    // prevent propagation on icon btns so they won't bubble up to tr and toggleBodyVisibility\n                    \"click .icon-btn\": function(ev) {\n                        ev.stopPropagation();\n                        // stopProp will prevent bootstrap from getting the click needed to open a dropdown\n                        //  in the case of metafile download buttons - workaround here\n                        var $currTarget = $(ev.currentTarget);\n                        if ($currTarget.length && $currTarget.attr(\"data-toggle\") === \"dropdown\") {\n                            $currTarget.dropdown(\"toggle\");\n                        }\n                    }\n                }),\n\n                _clickSectionLink: function(ev) {\n                    var sectionNumber = $(ev.currentTarget)\n                        .parent()\n                        .parent()\n                        .data(\"section\");\n                    this.openSection(sectionNumber);\n                },\n\n                // ........................................................................ misc\n                /** Return a string rep of the history */\n                toString: function() {\n                    return \"AnnotatedHistoryView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n                }\n            }\n        );\n\n        //==============================================================================\n        return {\n            AnnotatedHistoryView: AnnotatedHistoryView\n        };\n    }\n);\n"]}