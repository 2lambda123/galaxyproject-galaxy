{"version":3,"sources":["mvc/workflow/workflow-view.js"],"names":["define","tool_menu_frame","$","Utils","Globals","Workflow","WorkflowCanvas","Node","WorkflowIcons","FormWrappers","Ui","async_save_text","Toastr","initValue","contents","length","document","removeClass","find","hide","show","each","search_input","this","hasClass","iconStyle","$to_el","val","options","nodeType","close_editor","self","workflow","check_changes_in_active_form","addClass","window","show_modal","Cancel","hide_modal","show_overview","jStorage","set","css","attr","$section","app","save_current_workflow","urls","eventObj","success_callback","body","errlist","data","stored","id","showWorkflowParameters","to_simple","Ok","errors","text","v","appendTo","append","name","has_changes","focus","select","reset_tool_search","value","error","response","err_msg","timer","get","keyup","lastValue","s","q","setTimeout","next","no_visible_tools","this_label","map","n","i","index","parent","canvas_manager","is","from_simple","fit_canvas_to_nodes","upgrade_message","details","_","upgrade_messages","reset","ajax","async","beforeSubmit","datatypes_mapping","JSON","parse","make_popupmenu","workflow_save_as","responseText","clear_active_node","ext_to_class_name","type_to_type","class_to_classes","_workflowLoadAjax","success","scroll_to_nodes","rename_name","draw_overview","url","type","workflow_name","workflow_data","step_id","m","stringify","onbeforeunload","location","Galaxy","root","nodes","edit_workflow_outputs","Continue","node","isWorkflowOutput","new_content","output","Save","Save As","rename_annotation","overview_size","workflow_annotation","undefined","offsetParent","max","op","Run","bind","workflowNode","output_name","layout","_buildToolPanelWorkflows","Close","do_close","workflow_index","show_message","rectify_workflow_outputs","ButtonIcon","icon","cls","tooltip","e","d","Copy","copy_into_workflow","offsetY","opo","top","new_size","click","wrap","last_expanded","remove_all","slideUp","slideDown","left","rename_async","height","merge","annotate_async","dataType","cache","_moduleInitAjax","request","workflows","copy","onclick","step_count","modal","title","create_node","buttons","$add","html","on","get_pja_form","add_node_for_subworkflow","closest","active_form_has_changes","$el","workflowId","addlist","action_type","k","post_job_actions","parseInt","vv","new_pja","parameter_re","workflow_parameters","deepeach","config_form","matches","cv","cc","width","arg_matches","inArray","request_data","wf_parm_container","wf_parm_box","new_parameter_content","init_field_data","update_field_data","activate_node","add_node_for_tool","$container","content","isSubType","pja","child","ext_to_type","action_to_rem","children","$title","add_node_icon","scrollLeft","content_id","tmp","pja_list","display_file_list","out_terminal","$f","target","prependTo","po","x","y","terminal","redraw","inputs","form_matches","match","concat","action_arguments","action_argument","element","push","substring","showAttributes","showForm","datatypes","form_type","form","emit","debug","scrollTop","prebuildNode","title_text","destroy","o","position","p","node_changed","offset","offsetX"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow-view.js","sourcesContent":["define(\"mvc/workflow/workflow-globals\", {});\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/workflow/workflow-globals\",\n        \"mvc/workflow/workflow-manager\",\n        \"mvc/workflow/workflow-canvas\",\n        \"mvc/workflow/workflow-node\",\n        \"mvc/workflow/workflow-icons\",\n        \"mvc/workflow/workflow-forms\",\n        \"mvc/ui/ui-misc\",\n        \"utils/async-save-text\",\n        \"libs/toastr\",\n        \"ui/editable-text\"\n    ],\n    function(Utils, Globals, Workflow, WorkflowCanvas, Node, WorkflowIcons, FormWrappers, Ui, async_save_text, Toastr) {\n        // Reset tool search to start state.\n        function reset_tool_search(initValue) {\n            // Function may be called in top frame or in tool_menu_frame;\n            // in either case, get the tool menu frame.\n            var tool_menu_frame = $(\"#galaxy_tools\").contents();\n            if (tool_menu_frame.length === 0) {\n                tool_menu_frame = $(document);\n                // Remove classes that indicate searching is active.\n                $(this).removeClass(\"search_active\");\n                tool_menu_frame.find(\".toolTitle\").removeClass(\"search_match\");\n\n                // Reset visibility of tools and labels.\n                tool_menu_frame.find(\".toolSectionBody\").hide();\n                tool_menu_frame.find(\".toolTitle\").show();\n                tool_menu_frame.find(\".toolPanelLabel\").show();\n                tool_menu_frame.find(\".toolSectionWrapper\").each(function() {\n                    if ($(this).attr(\"id\") !== \"recently_used_wrapper\") {\n                        // Default action.\n                        $(this).show();\n                    } else if ($(this).hasClass(\"user_pref_visible\")) {\n                        $(this).show();\n                    }\n                });\n                tool_menu_frame.find(\"#search-no-results\").hide();\n\n                // Reset search input.\n                tool_menu_frame.find(\"#search-spinner\").hide();\n                if (initValue) {\n                    var search_input = tool_menu_frame.find(\"#tool-search-query\");\n                    search_input.val(\"search tools\");\n                }\n            }\n        }\n\n        function add_node_icon($to_el, nodeType) {\n            var iconStyle = WorkflowIcons[nodeType];\n            if (iconStyle) {\n                var $icon = $('<i class=\"icon fa\">&nbsp;</i>').addClass(iconStyle);\n                $to_el.before($icon);\n            }\n        }\n\n        // create form view\n        return Backbone.View.extend({\n            initialize: function(options) {\n                var self = (Globals.app = this);\n                this.options = options;\n                this.urls = (options && options.urls) || {};\n                var close_editor = function() {\n                    self.workflow.check_changes_in_active_form();\n                    if (workflow && self.workflow.has_changes) {\n                        var do_close = function() {\n                            window.onbeforeunload = undefined;\n                            window.document.location = self.urls.workflow_index;\n                        };\n                        window.show_modal(\n                            \"Close workflow editor\",\n                            \"There are unsaved changes to your workflow which will be lost.\",\n                            {\n                                Cancel: hide_modal,\n                                \"Save Changes\": function() {\n                                    save_current_workflow(null, do_close);\n                                }\n                            },\n                            {\n                                \"Don't Save\": do_close\n                            }\n                        );\n                    } else {\n                        window.document.location = self.urls.workflow_index;\n                    }\n                };\n                var save_current_workflow = function(eventObj, success_callback) {\n                    show_message(\"Saving workflow\", \"progress\");\n                    self.workflow.check_changes_in_active_form();\n                    if (!self.workflow.has_changes) {\n                        hide_modal();\n                        if (success_callback) {\n                            success_callback();\n                        }\n                        return;\n                    }\n                    self.workflow.rectify_workflow_outputs();\n                    Utils.request({\n                        url: Galaxy.root + \"api/workflows/\" + self.options.id,\n                        type: \"PUT\",\n                        data: { workflow: self.workflow.to_simple() },\n                        success: function(data) {\n                            var body = $(\"<div/>\").text(data.message);\n                            if (data.errors) {\n                                body.addClass(\"warningmark\");\n                                var errlist = $(\"<ul/>\");\n                                $.each(data.errors, function(i, v) {\n                                    $(\"<li/>\")\n                                        .text(v)\n                                        .appendTo(errlist);\n                                });\n                                body.append(errlist);\n                            } else {\n                                body.addClass(\"donemark\");\n                            }\n                            self.workflow.name = data.name;\n                            self.workflow.has_changes = false;\n                            self.workflow.stored = true;\n                            self.showWorkflowParameters();\n                            if (data.errors) {\n                                window.show_modal(\"Saving workflow\", body, {\n                                    Ok: hide_modal\n                                });\n                            } else {\n                                success_callback && success_callback();\n                                hide_modal();\n                            }\n                        },\n                        error: function(response) {\n                            window.show_modal(\"Saving workflow failed.\", response.err_msg, { Ok: hide_modal });\n                        }\n                    });\n                };\n\n                // Init searching.\n                $(\"#tool-search-query\")\n                    .click(function() {\n                        $(this).focus();\n                        $(this).select();\n                    })\n                    .keyup(function() {\n                        // Remove italics.\n                        $(this).css(\"font-style\", \"normal\");\n                        // Don't update if same value as last time\n                        if (this.value.length < 3) {\n                            reset_tool_search(false);\n                        } else if (this.value != this.lastValue) {\n                            // Add class to denote that searching is active.\n                            $(this).addClass(\"search_active\");\n                            // input.addClass(config.loadingClass);\n                            // Add '*' to facilitate partial matching.\n                            var q = this.value;\n                            // Stop previous ajax-request\n                            if (this.timer) {\n                                clearTimeout(this.timer);\n                            }\n                            // Start a new ajax-request in X ms\n                            $(\"#search-spinner\").show();\n                            this.timer = setTimeout(function() {\n                                $.get(\n                                    self.urls.tool_search,\n                                    { q: q },\n                                    function(data) {\n                                        // input.removeClass(config.loadingClass);\n                                        // Show live-search if results and search-term aren't empty\n                                        $(\"#search-no-results\").hide();\n                                        // Hide all tool sections.\n                                        $(\".toolSectionWrapper\").hide();\n                                        // This hides all tools but not workflows link (which is in a .toolTitle div).\n                                        $(\".toolSectionWrapper\")\n                                            .find(\".toolTitle\")\n                                            .hide();\n                                        if (data.length != 0) {\n                                            // Map tool ids to element ids and join them.\n                                            var s = $.map(data, function(n, i) {\n                                                return \"link-\" + n;\n                                            });\n                                            // First pass to show matching tools and their parents.\n                                            $(s).each(function(index, id) {\n                                                // Add class to denote match.\n                                                $(\"[id='\" + id + \"']\")\n                                                    .parent()\n                                                    .addClass(\"search_match\");\n                                                $(\"[id='\" + id + \"']\")\n                                                    .parent()\n                                                    .show()\n                                                    .parent()\n                                                    .parent()\n                                                    .show()\n                                                    .parent()\n                                                    .show();\n                                            });\n                                            // Hide labels that have no visible children.\n                                            $(\".toolPanelLabel\").each(function() {\n                                                var this_label = $(this);\n                                                var next = this_label.next();\n                                                var no_visible_tools = true;\n                                                // Look through tools following label and, if none are visible, hide label.\n                                                while (next.length !== 0 && next.hasClass(\"toolTitle\")) {\n                                                    if (next.is(\":visible\")) {\n                                                        no_visible_tools = false;\n                                                        break;\n                                                    } else {\n                                                        next = next.next();\n                                                    }\n                                                }\n                                                if (no_visible_tools) {\n                                                    this_label.hide();\n                                                }\n                                            });\n                                        } else {\n                                            $(\"#search-no-results\").show();\n                                        }\n                                        $(\"#search-spinner\").hide();\n                                    },\n                                    \"json\"\n                                );\n                            }, 400);\n                        }\n                        this.lastValue = this.value;\n                    });\n\n                // Canvas overview management\n                this.canvas_manager = Globals.canvas_manager = new WorkflowCanvas(\n                    this,\n                    $(\"#canvas-viewport\"),\n                    $(\"#overview\")\n                );\n\n                // Initialize workflow state\n                this.reset();\n\n                // get available datatypes for post job action options\n                this.datatypes = JSON.parse(\n                    $.ajax({\n                        url: Galaxy.root + \"api/datatypes\",\n                        async: false\n                    }).responseText\n                );\n\n                // get datatype mapping options\n                this.datatypes_mapping = JSON.parse(\n                    $.ajax({\n                        url: Galaxy.root + \"api/datatypes/mapping\",\n                        async: false\n                    }).responseText\n                );\n\n                // set mapping sub lists\n                this.ext_to_type = this.datatypes_mapping.ext_to_class_name;\n                this.type_to_type = this.datatypes_mapping.class_to_classes;\n\n                // Load workflow definition\n                this._workflowLoadAjax(self.options.id, {\n                    success: function(data) {\n                        self.reset();\n                        self.workflow.from_simple(data, true);\n                        self.workflow.has_changes = false;\n                        self.workflow.fit_canvas_to_nodes();\n                        self.scroll_to_nodes();\n                        self.canvas_manager.draw_overview();\n                        // Determine if any parameters were 'upgraded' and provide message\n                        var upgrade_message = \"\";\n                        _.each(data.steps, function(step, step_id) {\n                            var details = \"\";\n                            if (step.errors) {\n                                details += \"<li>\" + step.errors + \"</li>\";\n                            }\n                            _.each(data.upgrade_messages[step_id], function(m) {\n                                details += \"<li>\" + m + \"</li>\";\n                            });\n                            if (details) {\n                                upgrade_message +=\n                                    \"<li>Step \" +\n                                    (parseInt(step_id, 10) + 1) +\n                                    \": \" +\n                                    self.workflow.nodes[step_id].name +\n                                    \"<ul>\" +\n                                    details +\n                                    \"</ul></li>\";\n                            }\n                        });\n                        if (upgrade_message) {\n                            window.show_modal(\n                                \"Issues loading this workflow\",\n                                \"Please review the following issues, possibly resulting from tool upgrades or changes.<p><ul>\" +\n                                    upgrade_message +\n                                    \"</ul></p>\",\n                                { Continue: hide_modal }\n                            );\n                        } else {\n                            hide_modal();\n                        }\n                        self.showWorkflowParameters();\n                    },\n                    beforeSubmit: function(data) {\n                        show_message(\"Loading workflow\", \"progress\");\n                    }\n                });\n\n                window.make_popupmenu &&\n                    make_popupmenu($(\"#workflow-options-button\"), {\n                        Save: save_current_workflow,\n                        \"Save As\": workflow_save_as,\n                        Run: function() {\n                            window.location = Galaxy.root + \"workflow/run?id=\" + self.options.id;\n                        },\n                        \"Edit Attributes\": function() {\n                            self.workflow.clear_active_node();\n                        },\n                        \"Auto Re-layout\": layout_editor,\n                        Close: close_editor\n                    });\n\n                /******************************************** Issue 3000*/\n                function workflow_save_as() {\n                    var body = $(\n                        '<form><label style=\"display:inline-block; width: 100%;\">Save as name: </label><input type=\"text\" id=\"workflow_rename\" style=\"width: 80%;\" autofocus/>' +\n                            '<br><label style=\"display:inline-block; width: 100%;\">Annotation: </label><input type=\"text\" id=\"wf_annotation\" style=\"width: 80%;\" /></form>'\n                    );\n                    window.show_modal(\"Save As a New Workflow\", body, {\n                        OK: function() {\n                            var rename_name =\n                                $(\"#workflow_rename\").val().length > 0\n                                    ? $(\"#workflow_rename\").val()\n                                    : \"SavedAs_\" + self.workflow.name;\n                            var rename_annotation =\n                                $(\"#wf_annotation\").val().length > 0 ? $(\"#wf_annotation\").val() : \"\";\n                            $.ajax({\n                                url: self.urls.workflow_save_as,\n                                type: \"POST\",\n                                data: {\n                                    workflow_name: rename_name,\n                                    workflow_annotation: rename_annotation,\n                                    workflow_data: function() {\n                                        return JSON.stringify(self.workflow.to_simple());\n                                    }\n                                }\n                            })\n                                .done(function(id) {\n                                    window.onbeforeunload = undefined;\n                                    window.location = Galaxy.root + \"workflow/editor?id=\" + id;\n                                    hide_modal();\n                                })\n                                .fail(function() {\n                                    hide_modal();\n                                    alert(\"Saving this workflow failed. Please contact this site's administrator.\");\n                                });\n                        },\n                        Cancel: hide_modal\n                    });\n                }\n\n                function edit_workflow_outputs() {\n                    self.workflow.clear_active_node();\n                    $(\".right-content\").hide();\n                    var new_content = \"\";\n                    for (var node_key in self.workflow.nodes) {\n                        var node = self.workflow.nodes[node_key];\n                        if ([\"tool\", \"subworkflow\"].indexOf(node.type) >= 0) {\n                            new_content +=\n                                \"<div class='toolForm' style='margin-bottom:5px;'><div class='toolFormTitle'>Step \" +\n                                node.id +\n                                \" - \" +\n                                node.name +\n                                \"</div>\";\n                            for (var ot_key in node.output_terminals) {\n                                var output = node.output_terminals[ot_key];\n                                if (node.isWorkflowOutput(output.name)) {\n                                    new_content +=\n                                        \"<p>\" +\n                                        output.name +\n                                        \"<input type='checkbox' name='\" +\n                                        node.id +\n                                        \"|\" +\n                                        output.name +\n                                        \"' checked /></p>\";\n                                } else {\n                                    new_content +=\n                                        \"<p>\" +\n                                        output.name +\n                                        \"<input type='checkbox' name='\" +\n                                        node.id +\n                                        \"|\" +\n                                        output.name +\n                                        \"' /></p>\";\n                                }\n                            }\n                            new_content += \"</div>\";\n                        }\n                    }\n                    $(\"#output-fill-area\").html(new_content);\n                    $(\"#output-fill-area input\").bind(\"click\", function() {\n                        var node_id = this.name.split(\"|\")[0];\n                        var workflowNode = this.workflow.nodes[node_id];\n                        var output_name = this.name.split(\"|\")[1];\n                        if (this.checked) {\n                            workflowNode.addWorkflowOutput(output_name);\n                        } else {\n                            workflowNode.removeWorkflowOutput(output_name);\n                        }\n                        self.workflow.has_changes = true;\n                    });\n                    $(\"#workflow-output-area\").show();\n                }\n\n                function layout_editor() {\n                    self.workflow.layout();\n                    self.workflow.fit_canvas_to_nodes();\n                    self.scroll_to_nodes();\n                    self.canvas_manager.draw_overview();\n                }\n\n                // On load, set the size to the pref stored in local storage if it exists\n                var overview_size = $.jStorage.get(\"overview-size\");\n                if (overview_size !== undefined) {\n                    $(\"#overview-border\").css({\n                        width: overview_size,\n                        height: overview_size\n                    });\n                }\n\n                // Show viewport on load unless pref says it's off\n                if ($.jStorage.get(\"overview-off\")) {\n                    hide_overview();\n                } else {\n                    show_overview();\n                }\n\n                // Stores the size of the overview into local storage when it's resized\n                $(\"#overview-border\").bind(\"dragend\", function(e, d) {\n                    var op = $(this).offsetParent();\n                    var opo = op.offset();\n                    var new_size = Math.max(op.width() - (d.offsetX - opo.left), op.height() - (d.offsetY - opo.top));\n                    $.jStorage.set(\"overview-size\", new_size + \"px\");\n                });\n\n                function show_overview() {\n                    $.jStorage.set(\"overview-off\", false);\n                    $(\"#overview-border\").css(\"right\", \"0px\");\n                    $(\"#close-viewport\").css(\"background-position\", \"0px 0px\");\n                }\n\n                function hide_overview() {\n                    $.jStorage.set(\"overview-off\", true);\n                    $(\"#overview-border\").css(\"right\", \"20000px\");\n                    $(\"#close-viewport\").css(\"background-position\", \"12px 0px\");\n                }\n\n                // Lets the overview be toggled visible and invisible, adjusting the arrows accordingly\n                $(\"#close-viewport\").click(function() {\n                    if ($(\"#overview-border\").css(\"right\") === \"0px\") {\n                        hide_overview();\n                    } else {\n                        show_overview();\n                    }\n                });\n\n                // Unload handler\n                window.onbeforeunload = function() {\n                    if (workflow && self.workflow.has_changes) {\n                        return \"There are unsaved changes to your workflow which will be lost.\";\n                    }\n                };\n\n                this.options.workflows.length > 0 &&\n                    $(\"#left\")\n                        .find(\".toolMenu\")\n                        .append(this._buildToolPanelWorkflows());\n\n                // Tool menu\n                $(\"div.toolSectionBody\").hide();\n                $(\"div.toolSectionTitle > span\").wrap(\"<a href='#'></a>\");\n                var last_expanded = null;\n                $(\"div.toolSectionTitle\").each(function() {\n                    var body = $(this).next(\"div.toolSectionBody\");\n                    $(this).click(function() {\n                        if (body.is(\":hidden\")) {\n                            if (last_expanded) last_expanded.slideUp(\"fast\");\n                            last_expanded = body;\n                            body.slideDown(\"fast\");\n                        } else {\n                            body.slideUp(\"fast\");\n                            last_expanded = null;\n                        }\n                    });\n                });\n\n                // Rename async.\n                async_save_text(\"workflow-name\", \"workflow-name\", self.urls.rename_async, \"new_name\");\n\n                // Tag async. Simply have the workflow edit element generate a click on the tag element to activate tagging.\n                $(\"#workflow-tag\").click(function() {\n                    $(\".tag-area\").click();\n                    return false;\n                });\n                // Annotate async.\n                async_save_text(\n                    \"workflow-annotation\",\n                    \"workflow-annotation\",\n                    self.urls.annotate_async,\n                    \"new_annotation\",\n                    25,\n                    true,\n                    4\n                );\n            },\n\n            _buildToolPanelWorkflows: function() {\n                var self = this;\n                var $section = $(\n                    '<div class=\"toolSectionWrapper\">' +\n                        '<div class=\"toolSectionTitle\">' +\n                        '<a href=\"#\"><span>Workflows</span></a>' +\n                        \"</div>\" +\n                        '<div class=\"toolSectionBody\">' +\n                        '<div class=\"toolSectionBg\"/>' +\n                        \"</div>\" +\n                        \"</div>\"\n                );\n                _.each(this.options.workflows, function(workflow) {\n                    if (workflow.id !== self.options.id) {\n                        var copy = new Ui.ButtonIcon({\n                            icon: \"fa fa-copy\",\n                            cls: \"ui-button-icon-plain\",\n                            tooltip: \"Copy and insert individual steps\",\n                            onclick: function() {\n                                if (workflow.step_count < 2) {\n                                    self.copy_into_workflow(workflow.id, workflow.name);\n                                } else {\n                                    // don't ruin the workflow by adding 50 steps unprompted.\n                                    Galaxy.modal.show({\n                                        title: \"Warning\",\n                                        body:\n                                            \"This will copy \" + workflow.step_count + \" new steps into your workflow.\",\n                                        buttons: {\n                                            Cancel: function() {\n                                                Galaxy.modal.hide();\n                                            },\n                                            Copy: function() {\n                                                Galaxy.modal.hide();\n                                                self.copy_into_workflow(workflow.id, workflow.name);\n                                            }\n                                        }\n                                    });\n                                }\n                            }\n                        });\n                        var $add = $(\"<a/>\")\n                            .attr(\"href\", \"#\")\n                            .html(workflow.name)\n                            .on(\"click\", function() {\n                                self.add_node_for_subworkflow(workflow.latest_id, workflow.name);\n                            });\n                        $section.find(\".toolSectionBg\").append(\n                            $(\"<div/>\")\n                                .addClass(\"toolTitle\")\n                                .append($add)\n                                .append(copy.$el)\n                        );\n                    }\n                });\n                return $section;\n            },\n\n            copy_into_workflow: function(workflowId) {\n                // Load workflow definition\n                var self = this;\n                this._workflowLoadAjax(workflowId, {\n                    success: function(data) {\n                        self.workflow.from_simple(data, false);\n                        // Determine if any parameters were 'upgraded' and provide message\n                        var upgrade_message = \"\";\n                        $.each(data.upgrade_messages, function(k, v) {\n                            upgrade_message +=\n                                \"<li>Step \" + (parseInt(k, 10) + 1) + \": \" + self.workflow.nodes[k].name + \"<ul>\";\n                            $.each(v, function(i, vv) {\n                                upgrade_message += \"<li>\" + vv + \"</li>\";\n                            });\n                            upgrade_message += \"</ul></li>\";\n                        });\n                        if (upgrade_message) {\n                            window.show_modal(\n                                \"Subworkflow embedded with changes\",\n                                \"Problems were encountered loading this workflow (possibly a result of tool upgrades). Please review the following parameters and then save.<ul>\" +\n                                    upgrade_message +\n                                    \"</ul>\",\n                                { Continue: hide_modal }\n                            );\n                        } else {\n                            hide_modal();\n                        }\n                    },\n                    beforeSubmit: function(data) {\n                        show_message(\"Importing workflow\", \"progress\");\n                    }\n                });\n            },\n\n            // Global state for the whole workflow\n            reset: function() {\n                this.workflow && this.workflow.remove_all();\n                this.workflow = Globals.workflow = new Workflow(this, $(\"#canvas-container\"));\n            },\n\n            scroll_to_nodes: function() {\n                var cv = $(\"#canvas-viewport\");\n                var cc = $(\"#canvas-container\");\n                var top, left;\n                if (cc.width() < cv.width()) {\n                    left = (cv.width() - cc.width()) / 2;\n                } else {\n                    left = 0;\n                }\n                if (cc.height() < cv.height()) {\n                    top = (cv.height() - cc.height()) / 2;\n                } else {\n                    top = 0;\n                }\n                cc.css({ left: left, top: top });\n            },\n\n            _workflowLoadAjax: function(workflowId, options) {\n                $.ajax(\n                    Utils.merge(options, {\n                        url: this.urls.load_workflow,\n                        data: { id: workflowId, _: \"true\" },\n                        dataType: \"json\",\n                        cache: false\n                    })\n                );\n            },\n\n            _moduleInitAjax: function(node, request_data) {\n                var self = this;\n                Utils.request({\n                    type: \"POST\",\n                    url: Galaxy.root + \"api/workflows/build_module\",\n                    data: request_data,\n                    success: function(data) {\n                        node.init_field_data(data);\n                        node.update_field_data(data);\n                        self.workflow.activate_node(node);\n                    }\n                });\n            },\n\n            // Add a new step to the workflow by tool id\n            add_node_for_tool: function(id, title) {\n                var node = this.workflow.create_node(\"tool\", title, id);\n                this._moduleInitAjax(node, {\n                    type: \"tool\",\n                    tool_id: id,\n                    _: \"true\"\n                });\n            },\n\n            // Add a new step to the workflow by tool id\n            add_node_for_subworkflow: function(id, title) {\n                var node = this.workflow.create_node(\"subworkflow\", title, id);\n                this._moduleInitAjax(node, {\n                    type: \"subworkflow\",\n                    content_id: id,\n                    _: \"true\"\n                });\n            },\n\n            add_node_for_module: function(type, title) {\n                var node = this.workflow.create_node(type, title);\n                this._moduleInitAjax(node, { type: type, _: \"true\" });\n            },\n\n            // This function preloads how to display known pja's.\n            display_pja: function(pja, node) {\n                // DBTODO SANITIZE INPUTS.\n                var self = this;\n                $(\"#pja_container\").append(get_pja_form(pja, node));\n                $(\"#pja_container>.toolForm:last>.toolFormTitle>.buttons\").click(function() {\n                    var action_to_rem = $(this)\n                        .closest(\".toolForm\", \".action_tag\")\n                        .children(\".action_tag:first\")\n                        .text();\n                    $(this)\n                        .closest(\".toolForm\")\n                        .remove();\n                    delete self.workflow.active_node.post_job_actions[action_to_rem];\n                    self.workflow.active_form_has_changes = true;\n                });\n            },\n\n            display_pja_list: function() {\n                return pja_list;\n            },\n\n            display_file_list: function(node) {\n                var addlist = \"<select id='node_data_list' name='node_data_list'>\";\n                for (var out_terminal in node.output_terminals) {\n                    addlist += \"<option value='\" + out_terminal + \"'>\" + out_terminal + \"</option>\";\n                }\n                addlist += \"</select>\";\n                return addlist;\n            },\n\n            new_pja: function(action_type, target, node) {\n                if (node.post_job_actions === undefined) {\n                    //New tool node, set up dict.\n                    node.post_job_actions = {};\n                }\n                if (node.post_job_actions[action_type + target] === undefined) {\n                    var new_pja = {};\n                    new_pja.action_type = action_type;\n                    new_pja.output_name = target;\n                    node.post_job_actions[action_type + target] = null;\n                    node.post_job_actions[action_type + target] = new_pja;\n                    display_pja(new_pja, node);\n                    this.workflow.active_form_has_changes = true;\n                    return true;\n                } else {\n                    return false;\n                }\n            },\n\n            showWorkflowParameters: function() {\n                var parameter_re = /\\$\\{.+?\\}/g;\n                var workflow_parameters = [];\n                var wf_parm_container = $(\"#workflow-parameters-container\");\n                var wf_parm_box = $(\"#workflow-parameters-box\");\n                var new_parameter_content = \"\";\n                var matches = [];\n                $.each(this.workflow.nodes, function(k, node) {\n                    if (node.config_form && node.config_form.inputs) {\n                        Utils.deepeach(node.config_form.inputs, function(d) {\n                            if (typeof d.value == \"string\") {\n                                var form_matches = d.value.match(parameter_re);\n                                if (form_matches) {\n                                    matches = matches.concat(form_matches);\n                                }\n                            }\n                        });\n                    }\n                    if (node.post_job_actions) {\n                        $.each(node.post_job_actions, function(k, pja) {\n                            if (pja.action_arguments) {\n                                $.each(pja.action_arguments, function(k, action_argument) {\n                                    var arg_matches = action_argument.match(parameter_re);\n                                    if (arg_matches) {\n                                        matches = matches.concat(arg_matches);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                    if (matches) {\n                        $.each(matches, function(k, element) {\n                            if ($.inArray(element, workflow_parameters) === -1) {\n                                workflow_parameters.push(element);\n                            }\n                        });\n                    }\n                });\n                if (workflow_parameters && workflow_parameters.length !== 0) {\n                    $.each(workflow_parameters, function(k, element) {\n                        new_parameter_content += \"<div>\" + element.substring(2, element.length - 1) + \"</div>\";\n                    });\n                    wf_parm_container.html(new_parameter_content);\n                    wf_parm_box.show();\n                } else {\n                    wf_parm_container.html(new_parameter_content);\n                    wf_parm_box.hide();\n                }\n            },\n\n            showAttributes: function() {\n                $(\".right-content\").hide();\n                $(\"#edit-attributes\").show();\n            },\n\n            showForm: function(content, node) {\n                var self = this;\n                var cls = \"right-content\";\n                var id = cls + \"-\" + node.id;\n                var $container = $(\"#\" + cls);\n                if (content && $container.find(\"#\" + id).length == 0) {\n                    var $el = $('<div id=\"' + id + '\" class=\"' + cls + '\"/>');\n                    content.node = node;\n                    content.workflow = this.workflow;\n                    content.datatypes = this.datatypes;\n                    content.icon = WorkflowIcons[node.type];\n                    content.cls = \"ui-portlet-narrow\";\n                    if (node) {\n                        var form_type = node.type == \"tool\" ? \"Tool\" : \"Default\";\n                        $el.append(new FormWrappers[form_type](content).form.$el);\n                        $container.append($el);\n                    } else {\n                        Galaxy.emit.debug(\"workflow-view::initialize()\", \"Node not found in workflow.\");\n                    }\n                }\n                $(\".\" + cls).hide();\n                $container.find(\"#\" + id).show();\n                $container.show();\n                $container.scrollTop();\n            },\n\n            isSubType: function(child, parent) {\n                child = this.ext_to_type[child];\n                parent = this.ext_to_type[parent];\n                return this.type_to_type[child] && parent in this.type_to_type[child];\n            },\n\n            prebuildNode: function(type, title_text, content_id) {\n                var self = this;\n                var $f = $(\"<div class='toolForm toolFormInCanvas'/>\");\n                var $title = $(\n                    \"<div class='toolFormTitle unselectable'><span class='nodeTitle'>\" + title_text + \"</div></div>\"\n                );\n                add_node_icon($title.find(\".nodeTitle\"), type);\n                $f.append($title);\n                $f.css(\"left\", $(window).scrollLeft() + 20);\n                $f.css(\"top\", $(window).scrollTop() + 20);\n                $f.append($(\"<div class='toolFormBody'></div>\"));\n                var node = new Node(this, { element: $f });\n                node.type = type;\n                node.content_id = content_id;\n                var tmp =\n                    \"<div><img height='16' align='middle' src='\" +\n                    Galaxy.root +\n                    \"static/images/loading_small_white_bg.gif'/> loading tool info...</div>\";\n                $f.find(\".toolFormBody\").append(tmp);\n                // Fix width to computed width\n                // Now add floats\n                var buttons = $(\"<div class='buttons' style='float: right;'></div>\");\n                buttons.append(\n                    $(\"<div/>\")\n                        .addClass(\"fa-icon-button fa fa-times\")\n                        .click(function(e) {\n                            node.destroy();\n                        })\n                );\n                // Place inside container\n                $f.appendTo(\"#canvas-container\");\n                // Position in container\n                var o = $(\"#canvas-container\").position();\n                var p = $(\"#canvas-container\").parent();\n                var width = $f.width();\n                var height = $f.height();\n                $f.css({\n                    left: -o.left + p.width() / 2 - width / 2,\n                    top: -o.top + p.height() / 2 - height / 2\n                });\n                buttons.prependTo($f.find(\".toolFormTitle\"));\n                width += buttons.width() + 10;\n                $f.css(\"width\", width);\n                $f\n                    .bind(\"dragstart\", function() {\n                        self.workflow.activate_node(node);\n                    })\n                    .bind(\"dragend\", function() {\n                        self.workflow.node_changed(this);\n                        self.workflow.fit_canvas_to_nodes();\n                        self.canvas_manager.draw_overview();\n                    })\n                    .bind(\"dragclickonly\", function() {\n                        self.workflow.activate_node(node);\n                    })\n                    .bind(\"drag\", function(e, d) {\n                        // Move\n                        var po = $(this)\n                                .offsetParent()\n                                .offset(),\n                            x = d.offsetX - po.left,\n                            y = d.offsetY - po.top;\n                        $(this).css({ left: x, top: y });\n                        // Redraw\n                        $(this)\n                            .find(\".terminal\")\n                            .each(function() {\n                                this.terminal.redraw();\n                            });\n                    });\n                return node;\n            }\n        });\n    }\n);\n"]}