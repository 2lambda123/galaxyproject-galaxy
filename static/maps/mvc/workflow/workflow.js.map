{"version":3,"sources":["mvc/workflow/workflow.js"],"names":["define","mod_toastr","WORKFLOWS","QueryStringParsing","_","Backbone","View","extend","initialize","bindAll","this","$","html","timeOut","_rowTemplate","events","showInToolPanel","click #delete-workflow","click #rename-workflow","click #copy-workflow","render","removeWorkflow","el","model","success","get","window","location","Galaxy","root","renameWorkflow","oldName","wfName","newName","name","remove","copyWorkflow","prompt","self","save","currentOwner","collection","error","getJSON","urlRoot","id","wfJson","options","errorThrown","user","attributes","username","create","at","wait","checkboxHtml","resp","TagEditor","jqXHR","TagsEditor","responseJSON","err_msg","toggle","wfId","_templateActions","show","unhighlightDropZone","escape","drop","dragover","ev","renderTagEditor","TAGS","e","find","workflow_mode","files","dataTransfer","onload","wf_json","_showArgErrors","header","_templateHeader","tableTemplate","confirmDelete","minQueryLength","searchWorkflow","adjustActiondropdown","workflowItemView","setElement","WorkflowCollection","fetch","done","workflow","$el_shared_wf_link","appendItem","click","dragleave","$el_searchinput","addClass","preventDefault","regular_expression","$el_tabletr","removeClass","f","i","readWorkflowFiles","css","reader","FileReader","theFile","JSON","parse","result","_templateNoWorkflow","_templateActionButtons","_templateWorkflowTable","once","ImportWorkflowView","msg_text","info","templateActions","_mainTemplate","models","each","item","WorkflowListView","WorkflowItemView","append","confirm","min_querylen","on","query","val","length","RegExp","hide","filter","test","text","tableHtml","$el","empty","url","myexperiment_target_url"],"mappings":"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","file":"../../../scripts/mvc/workflow/workflow.js","sourcesContent":["/** Workflow view */\ndefine([\"libs/toastr\", \"mvc/tag\", \"mvc/workflow/workflow-model\", \"utils/query-string-parsing\"], function(\n    mod_toastr,\n    TAGS,\n    WORKFLOWS,\n    QueryStringParsing\n) {\n    /** View of the individual workflows */\n    var WorkflowItemView = Backbone.View.extend({\n        tagName: \"tr\", // name of (orphan) root tag in this.el\n        initialize: function() {\n            _.bindAll(\n                this,\n                \"render\",\n                \"_rowTemplate\",\n                \"renderTagEditor\",\n                \"_templateActions\",\n                \"removeWorkflow\",\n                \"copyWorkflow\"\n            ); // every function that uses 'this' as the current object should be in here\n            mod_toastr.options.timeOut = 1500;\n        },\n\n        events: {\n            \"click #show-in-tool-panel\": \"showInToolPanel\",\n            \"click #delete-workflow\": \"removeWorkflow\",\n            \"click #rename-workflow\": \"renameWorkflow\",\n            \"click #copy-workflow\": \"copyWorkflow\"\n        },\n\n        render: function() {\n            $(this.el).html(this._rowTemplate());\n            return this;\n        },\n\n        showInToolPanel: function() {\n            this.model.set(\"show_in_tool_panel\", !this.model.get(\"show_in_tool_panel\"));\n            this.model.save();\n            // This reloads the whole page, so that the workflow appears in the tool panel.\n            // Ideally we would notify only the tool panel of a change\n            window.location = Galaxy.root + \"workflow\";\n        },\n\n        removeWorkflow: function() {\n            var wfName = this.model.get(\"name\");\n            if (window.confirm(\"Are you sure you want to delete workflow '\" + wfName + \"'?\")) {\n                this.model.destroy({\n                    success: function() {\n                        mod_toastr.success(\"Successfully deleted workflow '\" + wfName + \"'\");\n                    }\n                });\n                this.remove();\n            }\n        },\n\n        renameWorkflow: function() {\n            var oldName = this.model.get(\"name\");\n            var newName = window.prompt(\"Enter a new Name for workflow '\" + oldName + \"'\", oldName);\n            if (newName) {\n                this.model.save(\n                    { name: newName },\n                    {\n                        success: function() {\n                            mod_toastr.success(\"Successfully renamed workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                        }\n                    }\n                );\n                this.render();\n            }\n        },\n\n        copyWorkflow: function() {\n            var self = this;\n            var oldName = this.model.get(\"name\");\n            $.getJSON(this.model.urlRoot + \"/\" + this.model.id + \"/download\", function(wfJson) {\n                var newName = \"Copy of \" + oldName;\n                var currentOwner = self.model.get(\"owner\");\n                if (currentOwner != Galaxy.user.attributes.username) {\n                    newName += \" shared by user \" + currentOwner;\n                }\n                wfJson.name = newName;\n                self.collection.create(wfJson, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(\"Successfully copied workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                    },\n                    error: function(model, resp, options) {\n                        // signature seems to have changed over the course of backbone dev\n                        // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }).error(function(jqXHR, textStatus, errorThrown) {\n                mod_toastr.error(jqXHR.responseJSON.err_msg);\n            });\n        },\n\n        _rowTemplate: function() {\n            var show = this.model.get(\"show_in_tool_panel\");\n            var wfId = this.model.id;\n            var checkboxHtml =\n                '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n                (show ? 'checked=\"' + show + '\"' : \"\") +\n                ' value=\"' +\n                wfId +\n                '\">';\n            var trHtml =\n                \"<td>\" +\n                '<div class=\"dropdown\">' +\n                '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n                _.escape(this.model.get(\"name\")) +\n                '<span class=\"caret\"></span>' +\n                \"</button>\" +\n                this._templateActions() +\n                \"</div>\" +\n                \"</td>\" +\n                \"<td><span>\" +\n                '<div class=\"' +\n                wfId +\n                ' tags-display\"></div>' +\n                \"</td>\" +\n                \"<td>\" +\n                (this.model.get(\"owner\") === Galaxy.user.attributes.username ? \"You\" : this.model.get(\"owner\")) +\n                \"</span></td>\" +\n                \"<td>\" +\n                this.model.get(\"number_of_steps\") +\n                \"</td>\" +\n                \"<td>\" +\n                (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n                \"</td>\" +\n                \"<td>\" +\n                checkboxHtml +\n                \"</td>\";\n            return trHtml;\n        },\n\n        renderTagEditor: function() {\n            var TagEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $.find(\".\" + this.model.id + \".tags-display\"),\n                workflow_mode: true\n            });\n            TagEditor.toggle(true);\n            TagEditor.render();\n        },\n\n        /** Template for user actions for workflows */\n        _templateActions: function() {\n            if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n                return (\n                    '<ul class=\"dropdown-menu action-dpd\">' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/editor?id=\" +\n                    this.model.id +\n                    '\">Edit</a></li>' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/run?id=\" +\n                    this.model.id +\n                    '\">Run</a></li>' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/sharing?id=\" +\n                    this.model.id +\n                    '\">Share</a></li>' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"api/workflows/\" +\n                    this.model.id +\n                    '/download?format=json-download\">Download</a></li>' +\n                    '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                    '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/display_by_id?id=\" +\n                    this.model.id +\n                    '\">View</a></li>' +\n                    '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                    \"</ul>\"\n                );\n            } else {\n                return (\n                    '<ul class=\"dropdown-menu action-dpd\">' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/display_by_username_and_slug?username=\" +\n                    this.model.get(\"owner\") +\n                    \"&slug=\" +\n                    this.model.get(\"slug\") +\n                    '\">View</a></li>' +\n                    '<li><a href=\"' +\n                    Galaxy.root +\n                    \"workflow/run?id=\" +\n                    this.model.id +\n                    '\">Run</a></li>' +\n                    '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                    '<li><a class=\"link-confirm-shared-' +\n                    this.model.id +\n                    '\" href=\"' +\n                    Galaxy.root +\n                    \"workflow/sharing?unshare_me=True&id=\" +\n                    this.model.id +\n                    '\">Remove</a></li>' +\n                    \"</ul>\"\n                );\n            }\n        }\n    });\n\n    /** View of the main workflow list page */\n    var WorkflowListView = Backbone.View.extend({\n        title: \"Workflows\",\n        initialize: function() {\n            this.setElement(\"<div/>\");\n            _.bindAll(this, \"adjustActiondropdown\");\n            this.collection = new WORKFLOWS.WorkflowCollection();\n            this.collection.fetch().done(this.render());\n            this.collection.bind(\"add\", this.appendItem);\n            this.collection.on(\"sync\", this.render, this);\n        },\n\n        events: {\n            dragleave: \"unhighlightDropZone\",\n            drop: \"drop\",\n            dragover: function(ev) {\n                $(\".hidden_description_layer\").addClass(\"dragover\");\n                $(\".menubutton\").addClass(\"background-none\");\n                ev.preventDefault();\n            }\n        },\n\n        unhighlightDropZone: function() {\n            $(\".hidden_description_layer\").removeClass(\"dragover\");\n            $(\".menubutton\").removeClass(\"background-none\");\n        },\n\n        drop: function(e) {\n            // TODO: check that file is valid galaxy workflow\n            this.unhighlightDropZone();\n            e.preventDefault();\n            var files = e.dataTransfer.files;\n            var self = this;\n            for (var i = 0, f; (f = files[i]); i++) {\n                self.readWorkflowFiles(f);\n            }\n        },\n\n        readWorkflowFiles: function(f) {\n            var self = this;\n            var reader = new FileReader();\n            reader.onload = function(theFile) {\n                var wf_json;\n                try {\n                    wf_json = JSON.parse(reader.result);\n                } catch (e) {\n                    mod_toastr.error(\"Could not read file '\" + f.name + \"'. Verify it is a valid Galaxy workflow\");\n                    wf_json = null;\n                }\n                if (wf_json) {\n                    self.collection.create(wf_json, {\n                        at: 0,\n                        wait: true,\n                        success: function() {\n                            mod_toastr.success(\"Successfully imported workflow '\" + wf_json.name + \"'\");\n                        },\n                        error: function(model, resp, options) {\n                            mod_toastr.error(options.errorThrown);\n                        }\n                    });\n                }\n            };\n            reader.readAsText(f, \"utf-8\");\n        },\n\n        _showArgErrors: _.once(function() {\n            // Parse args out of params, display if there's a message.\n            var msg_text = QueryStringParsing.get(\"message\");\n            var msg_status = QueryStringParsing.get(\"status\");\n            if (msg_status === \"error\") {\n                mod_toastr.error(_.escape(msg_text || \"Unknown Error, please report this to an administrator.\"));\n            } else if (msg_text) {\n                mod_toastr.info(_.escape(msg_text));\n            }\n        }),\n\n        render: function() {\n            // Add workflow header\n            var header = this._templateHeader();\n            // Add the actions buttons\n            var templateActions = this._templateActionButtons();\n            var tableTemplate = this._templateWorkflowTable();\n            this.$el.html(header + templateActions + tableTemplate);\n            var self = this;\n            _(this.collection.models).each(function(item) {\n                // in case collection is not empty\n                self.appendItem(item);\n                self.confirmDelete(item);\n            }, this);\n            var minQueryLength = 3;\n            this.searchWorkflow(this.$(\".search-wf\"), this.$(\".workflow-search tr\"), minQueryLength);\n            this.adjustActiondropdown();\n            this._showArgErrors();\n            return this;\n        },\n\n        appendItem: function(item) {\n            var workflowItemView = new WorkflowItemView({\n                model: item,\n                collection: this.collection\n            });\n            $(\".workflow-search\").append(workflowItemView.render().el);\n            workflowItemView.renderTagEditor();\n        },\n\n        /** Add confirm box before removing/unsharing workflow */\n        confirmDelete: function(workflow) {\n            var $el_shared_wf_link = this.$(\".link-confirm-shared-\" + workflow.id);\n            $el_shared_wf_link.click(function() {\n                return window.confirm(\n                    \"Are you sure you want to remove the shared workflow '\" + workflow.attributes.name + \"'?\"\n                );\n            });\n        },\n\n        /** Implement client side workflow search/filtering */\n        searchWorkflow: function($el_searchinput, $el_tabletr, min_querylen) {\n            $el_searchinput.on(\"keyup\", function() {\n                var query = $(this).val();\n                // Filter when query is at least 3 characters\n                // otherwise show all rows\n                if (query.length >= min_querylen) {\n                    // Ignore the query's case using 'i'\n                    var regular_expression = new RegExp(query, \"i\");\n                    $el_tabletr.hide();\n                    $el_tabletr\n                        .filter(function() {\n                            // Apply regular expression on each row's text\n                            // and show when there is a match\n                            return regular_expression.test($(this).text());\n                        })\n                        .show();\n                } else {\n                    $el_tabletr.show();\n                }\n            });\n        },\n\n        /** Ajust the position of dropdown with respect to table */\n        adjustActiondropdown: function() {\n            $(this.el).on(\"show.bs.dropdown\", function() {\n                $(this.el).css(\"overflow\", \"inherit\");\n            });\n            $(this.el).on(\"hide.bs.dropdown\", function() {\n                $(this.el).css(\"overflow\", \"auto\");\n            });\n        },\n\n        /** Template for no workflow */\n        _templateNoWorkflow: function() {\n            return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n        },\n\n        /** Template for actions buttons */\n        _templateActionButtons: function() {\n            return (\n                '<ul class=\"manage-table-actions\">' +\n                \"<li>\" +\n                '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n                \"</li>\" +\n                \"<li>\" +\n                '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n                Galaxy.root +\n                'workflow/create\">' +\n                \"</a>\" +\n                \"</li>\" +\n                \"<li>\" +\n                '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n                Galaxy.root +\n                'workflow/import_workflow\">' +\n                \"</a>\" +\n                \"</li>\" +\n                \"</ul>\"\n            );\n        },\n\n        /** Template for workflow table */\n        _templateWorkflowTable: function() {\n            var tableHtml =\n                '<table class=\"table colored\"><thead>' +\n                '<tr class=\"header\">' +\n                \"<th>Name</th>\" +\n                \"<th>Tags</th>\" +\n                \"<th>Owner</th>\" +\n                \"<th># of Steps</th>\" +\n                \"<th>Published</th>\" +\n                \"<th>Show in tools panel</th>\" +\n                \"</tr></thead>\";\n            return (\n                tableHtml +\n                '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n                \"</tbody></table></div>\"\n            );\n        },\n\n        /** Main template */\n        _templateHeader: function() {\n            return (\n                '<div class=\"page-container\">' +\n                '<div class=\"user-workflows wf\">' +\n                '<div class=\"response-message\"></div>' +\n                \"<h2>Your workflows</h2>\" +\n                \"</div>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    var ImportWorkflowView = Backbone.View.extend({\n        initialize: function() {\n            this.setElement(\"<div/>\");\n            this.render();\n        },\n\n        /** Open page to import workflow */\n        render: function() {\n            var self = this;\n            $.getJSON(Galaxy.root + \"workflow/upload_import_workflow\", function(options) {\n                self.$el.empty().append(self._mainTemplate(options));\n            });\n        },\n\n        /** Template for the import workflow page */\n        _mainTemplate: function(options) {\n            return (\n                \"<div class='toolForm'>\" +\n                \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n                \"<div class='toolFormBody'>\" +\n                \"<form name='import_workflow' id='import_workflow' action='\" +\n                Galaxy.root +\n                \"workflow/upload_import_workflow\" +\n                \"' enctype='multipart/form-data' method='POST'>\" +\n                \"<div class='form-row'>\" +\n                \"<label>Galaxy workflow URL:</label>\" +\n                \"<input type='text' name='url' class='input-url' value='\" +\n                options.url +\n                \"' size='40'>\" +\n                \"<div class='toolParamHelp' style='clear: both;'>\" +\n                \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n                \"</div>\" +\n                \"<div style='clear: both'></div>\" +\n                \"</div>\" +\n                \"<div class='form-row'>\" +\n                \"<label>Galaxy workflow file:</label>\" +\n                \"<div class='form-row-input'>\" +\n                \"<input type='file' name='file_data' class='input-file'/>\" +\n                \"</div>\" +\n                \"<div class='toolParamHelp' style='clear: both;'>\" +\n                \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n                \"</div>\" +\n                \"<div style='clear: both'></div>\" +\n                \"</div>\" +\n                \"<div class='form-row'>\" +\n                \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n                \"</div>\" +\n                \"</form>\" +\n                \"<hr/>\" +\n                \"<div class='form-row'>\" +\n                \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n                \"<div class='form-row-input'>\" +\n                \"<a href='\" +\n                options.myexperiment_target_url +\n                \"'> Visit myExperiment</a>\" +\n                \"</div>\" +\n                \"<div class='toolParamHelp' style='clear: both;'>\" +\n                \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n                \"</div>\" +\n                \"<div style='clear: both'></div>\" +\n                \"</div>\" +\n                \"</div>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: WorkflowListView,\n        ImportWorkflowView: ImportWorkflowView\n    };\n});\n"]}