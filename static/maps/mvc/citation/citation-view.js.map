{"version":3,"sources":["mvc/citation/citation-view.js"],"names":["define","baseMVC","citationModel","_l","CitationView","Backbone","View","extend","tagName","render","className","append","this","formattedReference","model","entryType","fields","authorsAndYear","_asSentence","author","year","title","pages","address","volume","ref","number","doiUrl","doi","booktitle","url","howpublished","_formatBookInfo","note","info","institution","type","editor","str","chapter","initialize","publisher","series","renderCitation","citation","rawTextarea","$","issn","$el","trim","showBibtex","el","listenTo","collection","events","click .citations-to-bibtex","click .citations-to-formatted","partialWarningElement","citationView","val","attributes","content","html","citationsElement","each","item","showFormatted","show","CitationListView","hide","select","partial","join"],"mappings":"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","file":"../../../scripts/mvc/citation/citation-view.js","sourcesContent":["define([\"mvc/base-mvc\", \"mvc/citation/citation-model\", \"utils/localization\"], function(baseMVC, citationModel, _l) {\n    var CitationView = Backbone.View.extend({\n        tagName: \"div\",\n        className: \"citations\",\n        render: function() {\n            this.$el.append(\"<p>\" + this.formattedReference() + \"</p>\");\n            return this;\n        },\n        formattedReference: function() {\n            var model = this.model;\n            var entryType = model.entryType();\n            var fields = model.fields();\n\n            var ref = \"\";\n            // Code inspired by...\n            // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n            var authorsAndYear =\n                this._asSentence((fields.author ? fields.author : \"\") + (fields.year ? \" (\" + fields.year + \")\" : \"\")) +\n                \" \";\n            var title = fields.title || \"\";\n            var pages = fields.pages ? \"pp. \" + fields.pages : \"\";\n            var address = fields.address;\n            if (entryType == \"article\") {\n                var volume =\n                    (fields.volume ? fields.volume : \"\") +\n                    (fields.number ? \" (\" + fields.number + \")\" : \"\") +\n                    (pages ? \", \" + pages : \"\");\n                ref =\n                    authorsAndYear +\n                    this._asSentence(title) +\n                    (fields.journal ? \"In <em>\" + fields.journal + \", \" : \"\") +\n                    this._asSentence(volume) +\n                    this._asSentence(fields.address) +\n                    \"</em>\";\n            } else if (entryType == \"inproceedings\" || entryType == \"proceedings\") {\n                ref =\n                    authorsAndYear +\n                    this._asSentence(title) +\n                    (fields.booktitle ? \"In <em>\" + fields.booktitle + \", \" : \"\") +\n                    (pages ? pages : \"\") +\n                    (address ? \", \" + address : \"\") +\n                    \".</em>\";\n            } else if (entryType == \"mastersthesis\" || entryType == \"phdthesis\") {\n                ref =\n                    authorsAndYear +\n                    this._asSentence(title) +\n                    (fields.howpublished ? fields.howpublished + \". \" : \"\") +\n                    (fields.note ? fields.note + \".\" : \"\");\n            } else if (entryType == \"techreport\") {\n                ref =\n                    authorsAndYear +\n                    this._asSentence(title) +\n                    this._asSentence(fields.institution) +\n                    this._asSentence(fields.number) +\n                    this._asSentence(fields.type);\n            } else if (entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\") {\n                ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n            } else {\n                ref =\n                    authorsAndYear +\n                    \" \" +\n                    this._asSentence(title) +\n                    this._asSentence(fields.howpublished) +\n                    this._asSentence(fields.note);\n            }\n            var doiUrl = \"\";\n            if (fields.doi) {\n                doiUrl = \"http://dx.doi.org/\" + fields.doi;\n                ref += '[<a href=\"' + doiUrl + '\" target=\"_blank\">doi:' + fields.doi + \"</a>]\";\n            }\n            var url = fields.url || doiUrl;\n            if (url) {\n                ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n            }\n            return ref;\n        },\n        _formatBookInfo: function(fields) {\n            var info = \"\";\n            if (fields.chapter) {\n                info += fields.chapter + \" in \";\n            }\n            if (fields.title) {\n                info += \"<em>\" + fields.title + \"</em>\";\n            }\n            if (fields.editor) {\n                info += \", Edited by \" + fields.editor + \", \";\n            }\n            if (fields.publisher) {\n                info += \", \" + fields.publisher;\n            }\n            if (fields.pages) {\n                info += \", pp. \" + fields.pages + \"\";\n            }\n            if (fields.series) {\n                info += \", <em>\" + fields.series + \"</em>\";\n            }\n            if (fields.volume) {\n                info += \", Vol.\" + fields.volume;\n            }\n            if (fields.issn) {\n                info += \", ISBN: \" + fields.issn;\n            }\n            return info + \".\";\n        },\n        _asSentence: function(str) {\n            return str && str.trim() ? str + \". \" : \"\";\n        }\n    });\n\n    var CitationListView = Backbone.View.extend({\n        el: \"#citations\",\n        /**\n     * Set up view.\n     */\n        initialize: function() {\n            this.listenTo(this.collection, \"add\", this.renderCitation);\n        },\n\n        events: {\n            \"click .citations-to-bibtex\": \"showBibtex\",\n            \"click .citations-to-formatted\": \"showFormatted\"\n        },\n\n        renderCitation: function(citation) {\n            var citationView = new CitationView({ model: citation });\n            this.$(\".citations-formatted\").append(citationView.render().el);\n            var rawTextarea = this.$(\".citations-bibtex-text\");\n            rawTextarea.val(rawTextarea.val() + \"\\n\\r\" + citation.attributes.content);\n        },\n\n        render: function() {\n            this.$el.html(this.citationsElement());\n            this.collection.each(function(item) {\n                this.renderCitation(item);\n            }, this);\n            this.showFormatted();\n        },\n\n        showBibtex: function() {\n            this.$(\".citations-to-formatted\").show();\n            this.$(\".citations-to-bibtex\").hide();\n            this.$(\".citations-bibtex\").show();\n            this.$(\".citations-formatted\").hide();\n            this.$(\".citations-bibtex-text\").select();\n        },\n\n        showFormatted: function() {\n            this.$(\".citations-to-formatted\").hide();\n            this.$(\".citations-to-bibtex\").show();\n            this.$(\".citations-bibtex\").hide();\n            this.$(\".citations-formatted\").show();\n        },\n\n        partialWarningElement: function() {\n            if (this.collection.partial) {\n                return [\n                    '<div style=\"padding:5px 10px\">',\n                    \"<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate\",\n                    \" citations explicitly at this time. When writing up your analysis, please manually\",\n                    \" review your histories and find all references\",\n                    \" that should be cited in order to completely describe your work. Also, please remember to\",\n                    ' <a href=\"https://galaxyproject.org/citing-galaxy\">cite Galaxy</a>.',\n                    \"</div>\"\n                ].join(\"\");\n            } else {\n                return \"\";\n            }\n        },\n\n        citationsElement: function() {\n            return [\n                '<div class=\"toolForm\">',\n                '<div class=\"toolFormTitle\">',\n                _l(\"Citations\"),\n                ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n                ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n                \"</div>\",\n                '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n                this.partialWarningElement(),\n                '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n                \"</div>\",\n                '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n                '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        }\n    });\n\n    //==============================================================================\n    return {\n        CitationView: CitationView,\n        CitationListView: CitationListView\n    };\n});\n"]}