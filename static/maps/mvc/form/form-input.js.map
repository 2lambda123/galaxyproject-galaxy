{"version":3,"sources":["mvc/form/form-input.js"],"names":["define","Backbone","View","extend","initialize","app","options","model","attributes","this","field","app_options","text_enable","text_disable","cls_enable","cls_disable","always_refresh","setElement","_template","$field","$","$info","$preview","$collapsible","$collapsible_text","$collapsible_icon","$title","$title_text","$error_text","$error","$backdrop","prepend","$el","collapsible_value","get","collapsed","undefined","JSON","render","stringify","listenTo","self","on","trigger","reset","backdrop","set","error","text","help_argument","help_text","indexOf","html","error_text","_","escape","color","style","collapsible_state","hide","show","removeClass","append","addClass","attr","tooltip","placement"],"mappings":"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","file":"../../../scripts/mvc/form/form-input.js","sourcesContent":["/**\n    This class creates a form input element wrapper\n*/\ndefine([], function() {\n    return Backbone.View.extend({\n        initialize: function(app, options) {\n            this.app = app;\n            this.app_options = app.model ? app.model.attributes : {};\n            this.field = (options && options.field) || new Backbone.View();\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    text_enable: this.app_options.text_enable || \"Enable\",\n                    text_disable: this.app_options.text_disable || \"Disable\",\n                    cls_enable: this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n                    cls_disable: this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n                    always_refresh: this.app_options.always_refresh\n                }).set(options);\n\n            // set element and link components\n            this.setElement(this._template());\n            this.$field = this.$(\".ui-form-field\");\n            this.$info = this.$(\".ui-form-info\");\n            this.$preview = this.$(\".ui-form-preview\");\n            this.$collapsible = this.$(\".ui-form-collapsible\");\n            this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n            this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n            this.$title = this.$(\".ui-form-title\");\n            this.$title_text = this.$(\".ui-form-title-text\");\n            this.$error_text = this.$(\".ui-form-error-text\");\n            this.$error = this.$(\".ui-form-error\");\n            this.$backdrop = this.$(\".ui-form-backdrop\");\n\n            // add field element\n            this.$field.prepend(this.field.$el);\n\n            // decide wether to expand or collapse fields\n            var collapsible_value = this.model.get(\"collapsible_value\");\n            this.field.collapsed =\n                collapsible_value !== undefined &&\n                JSON.stringify(this.model.get(\"value\")) == JSON.stringify(collapsible_value);\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n\n            // add click handler\n            var self = this;\n            this.$collapsible.on(\"click\", function() {\n                self.field.collapsed = !self.field.collapsed;\n                app.trigger && app.trigger(\"change\");\n                self.render();\n            });\n\n            // hide error on value change\n            if (this.field.model && !this.model.get(\"always_refresh\")) {\n                this.listenTo(this.field.model, \"change:value\", function() {\n                    self.reset();\n                });\n            }\n        },\n\n        /** Set backdrop for input element */\n        backdrop: function() {\n            this.model.set(\"backdrop\", true);\n        },\n\n        /** Set error text */\n        error: function(text) {\n            this.model.set(\"error_text\", text);\n        },\n\n        /** Reset this view */\n        reset: function() {\n            !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n        },\n\n        render: function() {\n            // render help\n            $(\".tooltip\").hide();\n            var help_text = this.model.get(\"help\", \"\");\n            var help_argument = this.model.get(\"argument\");\n            if (help_argument && help_text.indexOf(\"(\" + help_argument + \")\") == -1) {\n                help_text += \" (\" + help_argument + \")\";\n            }\n            this.$info.html(help_text);\n            // render visibility\n            this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n            // render preview view for collapsed fields\n            this.$preview\n                [\n                    (this.field.collapsed && this.model.get(\"collapsible_preview\")) || this.model.get(\"disabled\")\n                        ? \"show\"\n                        : \"hide\"\n                ]()\n                .html(_.escape(this.model.get(\"text_value\")));\n            // render error messages\n            var error_text = this.model.get(\"error_text\");\n            this.$error[error_text ? \"show\" : \"hide\"]();\n            this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n            this.$error_text.html(error_text);\n            // render backdrop\n            this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n            // render input field\n            this.field.collapsed || this.model.get(\"disabled\") ? this.$field.hide() : this.$field.show();\n            // render input field color and style\n            this.field.model &&\n                this.field.model.set({\n                    color: this.model.get(\"color\"),\n                    style: this.model.get(\"style\")\n                });\n            // render collapsible options\n            if (!this.model.get(\"disabled\") && this.model.get(\"collapsible_value\") !== undefined) {\n                var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n                this.$title_text.hide();\n                this.$collapsible.show();\n                this.$collapsible_text.text(this.model.get(\"label\"));\n                this.$collapsible_icon\n                    .removeClass()\n                    .addClass(\"icon\")\n                    .addClass(this.model.get(\"cls_\" + collapsible_state))\n                    .attr(\"data-original-title\", this.model.get(\"text_\" + collapsible_state))\n                    .tooltip({ placement: \"bottom\" });\n            } else {\n                this.$title_text.show().text(this.model.get(\"label\"));\n                this.$collapsible.hide();\n            }\n        },\n\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"ui-form-element\")\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"ui-form-error ui-error\")\n                        .append($(\"<span/>\").addClass(\"fa fa-arrow-down\"))\n                        .append($(\"<span/>\").addClass(\"ui-form-error-text\"))\n                )\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"ui-form-title\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-form-collapsible\")\n                                .append($(\"<i/>\").addClass(\"ui-form-collapsible-icon\"))\n                                .append($(\"<span/>\").addClass(\"ui-form-collapsible-text\"))\n                        )\n                        .append($(\"<span/>\").addClass(\"ui-form-title-text\"))\n                )\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"ui-form-field\")\n                        .append($(\"<span/>\").addClass(\"ui-form-info\"))\n                        .append($(\"<div/>\").addClass(\"ui-form-backdrop\"))\n                )\n                .append($(\"<div/>\").addClass(\"ui-form-preview\"));\n        }\n    });\n});\n"]}