{"version":3,"sources":["mvc/upload/composite/composite-view.js"],"names":["define","collection","initialize","Utils","list_genomes","app","Popover","Select","Ui","Backbone","ftp_upload_site","setElement","UploadModel","_template","self","this","btnStart","title","options","onclick","list_extensions","currentFtp","Button","_eventStart","each","btnClose","modal","hide","data","filter","ext","$","prepend","button","$el","select_extension","findWhere","id","container","details","composite_files","_","file_desc","extension","item","add","size","on","name","preventDefault","e","UploadExtension","target","text","select_genome","View","value","list","placement","listenTo","model","_eventAnnounce","first","disable","enable","onchange","render","get","removeClass","where","status","length","addClass","upload_row","UploadRow","append","uploadpost","url","error","_eventError","message","set","progress","percentage","_eventProgress","nginx_upload_path","toData","it","_eventSuccess","Galaxy","currHistoryPanel","refreshContents","info"],"mappings":"aACAA,QAEQ,cASA,0BACIC,qCACAC,8BACI,oBACA,mBACA,kBAEA,SAAAC,EAAKC,EAAeC,EAAID,EAAxBE,EAAAC,EAAAC,GACA,OAAAC,SAAKC,KAAAA,QACLT,WAAKU,IAAWC,EAAKC,WAPzBX,WAAY,SAASG,GASjB,IAAAS,EAAAC,KACAA,KAAKC,IAALX,EACIY,KAAAA,QAD0BZ,EAAAa,QAE1BC,KAAAA,gBAASd,EAAAe,gBACLN,KAAAA,aAAAT,EAAAD,aACHW,KAAAL,gBAAAL,EAAAgB,aAJLN,KAAAJ,WAAAI,KAAAF,aAQIM,KAAAA,SAAS,IAAAX,EAAAc,QACLR,MAAKT,QACRc,QAAA,WAJLL,EAAAS,iBAQEC,KAAMC,SAAKT,IAAUR,EAAAc,QACnBR,MAAO,QADXK,QAAA,WALQL,EAAKT,IAAIqB,MAAMC,UAanBC,EAAAA,MAAQC,KAAAA,SAAYT,KAAAA,UAAiB,SAASU,GAC1ChB,EAAAiB,EAAOD,mBAAPE,QAAAC,EAAAC,OAIAnB,KAAAoB,iBAAgBC,IAAAA,EAAehB,MAC3BiB,IAAAA,0BAD4CC,UAAhDvB,KAAAgB,EAAA,4BAGAH,KAAIW,EAAAA,OAAWA,KAAAA,gBAAQC,SAAiBV,GACpCW,OAAOF,EAAAA,kBAECF,SAAAA,SAAIvB,GACJ4B,EAAAA,WAAAA,QAFgB,IAAAH,EAApBE,EAAAL,UAAAtB,EAAAM,iBADJiB,GAAAM,IAOPJ,GAAAA,EAAAC,iBAnBLC,EAAAjB,KAAAe,EAAAC,gBAAA,SAAAI,GAagB9B,EAAKb,WAAW4C,KAShCR,GAAAvB,EAAAb,WAAA6C,OACOJ,UAAAE,EACFG,aAAYH,EAAAI,YASZD,KAAGhB,EAAA,iCACEkB,GAAAA,QAAF,SAAAC,GAXR,IAAAC,GAGYjB,IAAKH,EAAEmB,EAAEE,QAWrBnC,MAAAH,EAAAqB,iBAAAkB,OACKC,UAAoB/C,EAAOgD,iBAAKC,QAC5BC,KAAA3C,EAAAM,gBACMsC,UAAO,UAFtBX,GAAA,YAAA,SAAAG,GAJQA,EAAED,mBAYVlC,KAAAuC,cAAA,IAAA/C,EAAAgD,MAGKI,IAAL,0BACI7C,UAAAC,KAAAgB,EAAA,yBADJH,KAAAb,KAAAX,aAGK+B,MAAAA,KAAAA,QAAiBjB,iBAIlBH,KAAA4C,SAAA5C,KAAWd,WAAA,MAAA,SAAA2D,GACXA,EAAQC,eAAgBC,KAExB/C,KAAKuC,SAAAA,KAAcS,WAAnB,aAAA,WACAjD,EAAKqB,WAELpB,KAAKuC,iBAAcU,QAAnBC,SAAAlD,KAAAoB,iBAAAqB,SACAzC,KAAKoB,UAML+B,OAAA,WACA,IAAAN,EAAK5C,KAALf,WAA2B6D,QACxBF,GAAA,WAAAA,EAAAO,IAAA,WACHpD,KAAKC,cAAL+C,UACAhD,KAAKC,iBAAaoD,YAEfrD,KAAAuC,cAAiBU,SA1GJjD,KAAAoB,iBAAA6B,UA8GxBjD,KAAAd,WAAAoE,OAAAC,OAAA,UAAAC,QAAAxD,KAAAd,WAAAsE,QACAxD,KAAAd,WAAAsE,OAAA,GAEAxD,KAAAC,SAAAgD,SACAH,KAAgB7C,SAAAkB,IAAAsC,SAAA,iBAELzD,KAAAC,SAAA+C,UACAhD,KAAAC,SAAPkB,IAAwBkC,YAAKnE,gBArHTc,KAAAgB,EAAA,iBAAAhB,KAAAd,WAAAsE,OAAA,EAAA,OAAA,WA+HZ5B,eAAAA,SAAgBR,GAFV,IAAVsC,EAAA,IAAAC,EAAA3D,MAAA6C,MAAAA,IADJ7C,KAAAgB,EAAA,+BAAA4C,OAAAF,EAAAvC,KAME0C,KAAAA,EAAAA,iBAAW7D,KAAAd,WAAAsE,OAAA,EAAA,OAAA,UACTM,EAAUxE,UAITkB,YALQ,WAMTuD,IAAAA,EAAO/D,KACHD,KAAAA,WAAKiE,KAAYC,SAAjBpB,GAPKA,EAAAqB,KASTC,OAAUpE,EAAAwC,cAAS6B,QACfrE,UAAKsE,EAAeD,iBAApB3B,YA5IYzB,EAAA6C,YAmIhBC,IAAK9D,KAAKV,IAAIa,QAAQmE,kBAc9BzD,KAAAb,KAAAV,IAAAiF,OAAAvE,KAAAd,WAAA4B,UACAuD,QAAgB,SAAAJ,GACP/E,EAAWuB,cAAc+D,IAA9BT,MAAA,SAAAE,GAnJoBlE,EAAAiE,YAAAC,IAwJxBE,SAAA,SAAAC,GACerE,EAAAsE,eAAAD,OAPfC,eAAgB,SAASD,GAczBpE,KAAAd,WAAAuB,KAAA,SAAA+D,GACAR,EAAaE,IAAA,aAAAE,MARbK,cAAe,SAASR,GAcxBjE,KAAAd,WAAAuB,KAAA,SAAA+D,GACWA,EAAAN,IAAA,SAAA,aAgCVQ,OAAAC,iBAAAC,mBAvCDZ,YAAa,SAASC,GAClBjE,KAAKd,WAAWuB,KAAK,SAAS+D,GAC1BA,EAAGN,KAAMX,OAAQ,QAASsB,KAAMZ,OAKxCnE,UAAW,WACP,MACI","file":"../../../../scripts/mvc/upload/composite/composite-view.js","sourcesContent":["/** Renders contents of the composite uploader */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-model\",\n        \"mvc/upload/composite/composite-row\",\n        \"mvc/upload/upload-extension\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-select\",\n        \"mvc/ui/ui-misc\"\n    ],\n    function(Utils, UploadModel, UploadRow, UploadExtension, Popover, Select, Ui) {\n        return Backbone.View.extend({\n            collection: new UploadModel.Collection(),\n            initialize: function(app) {\n                var self = this;\n                this.app = app;\n                this.options = app.options;\n                this.list_extensions = app.list_extensions;\n                this.list_genomes = app.list_genomes;\n                this.ftp_upload_site = app.currentFtp();\n                this.setElement(this._template());\n\n                // create button section\n                this.btnStart = new Ui.Button({\n                    title: \"Start\",\n                    onclick: function() {\n                        self._eventStart();\n                    }\n                });\n                this.btnClose = new Ui.Button({\n                    title: \"Close\",\n                    onclick: function() {\n                        self.app.modal.hide();\n                    }\n                });\n\n                // append buttons to dom\n                _.each([this.btnStart, this.btnClose], function(button) {\n                    self.$(\".upload-buttons\").prepend(button.$el);\n                });\n\n                // select extension\n                this.select_extension = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-extension\"),\n                    data: _.filter(this.list_extensions, function(ext) {\n                        return ext.composite_files;\n                    }),\n                    onchange: function(extension) {\n                        self.collection.reset();\n                        var details = _.findWhere(self.list_extensions, {\n                            id: extension\n                        });\n                        if (details && details.composite_files) {\n                            _.each(details.composite_files, function(item) {\n                                self.collection.add({\n                                    id: self.collection.size(),\n                                    file_desc: item.description || item.name\n                                });\n                            });\n                        }\n                    }\n                });\n\n                // handle extension info popover\n                this.$(\".upload-footer-extension-info\")\n                    .on(\"click\", function(e) {\n                        new UploadExtension({\n                            $el: $(e.target),\n                            title: self.select_extension.text(),\n                            extension: self.select_extension.value(),\n                            list: self.list_extensions,\n                            placement: \"top\"\n                        });\n                    })\n                    .on(\"mousedown\", function(e) {\n                        e.preventDefault();\n                    });\n\n                // genome extension\n                this.select_genome = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-genome\"),\n                    data: this.list_genomes,\n                    value: this.options.default_genome\n                });\n\n                // listener for collection triggers on change in composite datatype and extension selection\n                this.listenTo(this.collection, \"add\", function(model) {\n                    self._eventAnnounce(model);\n                });\n                this.listenTo(this.collection, \"change add\", function() {\n                    self.render();\n                });\n                this.select_extension.options.onchange(this.select_extension.value());\n                this.render();\n            },\n\n            render: function() {\n                var model = this.collection.first();\n                if (model && model.get(\"status\") == \"running\") {\n                    this.select_genome.disable();\n                    this.select_extension.disable();\n                } else {\n                    this.select_genome.enable();\n                    this.select_extension.enable();\n                }\n                if (\n                    this.collection.where({ status: \"ready\" }).length == this.collection.length &&\n                    this.collection.length > 0\n                ) {\n                    this.btnStart.enable();\n                    this.btnStart.$el.addClass(\"btn-primary\");\n                } else {\n                    this.btnStart.disable();\n                    this.btnStart.$el.removeClass(\"btn-primary\");\n                }\n                this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n            },\n\n            //\n            // upload events / process pipeline\n            //\n\n            /** Builds the basic ui with placeholder rows for each composite data type file */\n            _eventAnnounce: function(model) {\n                var upload_row = new UploadRow(this, { model: model });\n                this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n                this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n                upload_row.render();\n            },\n\n            /** Start upload process */\n            _eventStart: function() {\n                var self = this;\n                this.collection.each(function(model) {\n                    model.set({\n                        genome: self.select_genome.value(),\n                        extension: self.select_extension.value()\n                    });\n                });\n                $.uploadpost({\n                    url: this.app.options.nginx_upload_path,\n                    data: this.app.toData(this.collection.filter()),\n                    success: function(message) {\n                        self._eventSuccess(message);\n                    },\n                    error: function(message) {\n                        self._eventError(message);\n                    },\n                    progress: function(percentage) {\n                        self._eventProgress(percentage);\n                    }\n                });\n            },\n\n            /** Refresh progress state */\n            _eventProgress: function(percentage) {\n                this.collection.each(function(it) {\n                    it.set(\"percentage\", percentage);\n                });\n            },\n\n            /** Refresh success state */\n            _eventSuccess: function(message) {\n                this.collection.each(function(it) {\n                    it.set(\"status\", \"success\");\n                });\n                Galaxy.currHistoryPanel.refreshContents();\n            },\n\n            /** Refresh error state */\n            _eventError: function(message) {\n                this.collection.each(function(it) {\n                    it.set({ status: \"error\", info: message });\n                });\n            },\n\n            /** Load html template */\n            _template: function() {\n                return (\n                    '<div class=\"upload-view-composite\">' +\n                    '<div class=\"upload-top\">' +\n                    '<h6 class=\"upload-top-info\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-box\">' +\n                    '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                    \"<thead>\" +\n                    \"<tr>\" +\n                    \"<th/>\" +\n                    \"<th/>\" +\n                    \"<th>Description</th>\" +\n                    \"<th>Name</th>\" +\n                    \"<th>Size</th>\" +\n                    \"<th>Settings</th>\" +\n                    \"<th>Status</th>\" +\n                    \"</tr>\" +\n                    \"</thead>\" +\n                    \"<tbody/>\" +\n                    \"</table>\" +\n                    \"</div>\" +\n                    '<div class=\"upload-footer\">' +\n                    '<span class=\"upload-footer-title\">Composite Type:</span>' +\n                    '<span class=\"upload-footer-extension\"/>' +\n                    '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                    '<span class=\"upload-footer-title\">Genome/Build:</span>' +\n                    '<span class=\"upload-footer-genome\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-buttons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n    }\n);\n"]}