{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["define","upload_size","collection","counter","success","UploadRow","UploadFtp","UploadExtension","Popover","Select","Ui","LIST_COLLECTION_CREATOR","error","View","extend","reset","UploadModel","Collection","announce","list_extensions","running","list_genomes","ui_button","ftp_upload_site","app","currentFtp","this","initialize","btnLocal","id","self","title","onclick","options","select","icon","btnFtp","Button","uploadbox","_eventFtp","btnBuild","_eventCreate","_eventBuild","btnStop","_eventStart","_eventStop","btnReset","_eventReset","btnClose","modal","hide","url","_eventAnnounce","_","each","progress","_eventProgress","btnCreate","_eventSuccess","btnStart","_eventError","complete","button","_eventComplete","prepend","$el","ondragleave","$","removeClass","index","file","toData","get","history_id","container","percentage","message","select_extension","filter","updateExtension","addClass","collectionType","value","onchange","updateCollectionType","css","e","ext","list","placement","extension","select_collection","select_genome","default_genome","genome","_updateScreen","on","target","file_mode","file_path","upload_row","data","updateGenome","set","model","pluck","it","new_model","Model","upload_completed","name","size","mode","path","currHistoryPanel","add","append","_uploadPercentage","hids","status","allHids","forEach","selection","info","Galaxy","buildCollection","models","upload","push","apply","map","hid","getByHid","constructor","empty","historyId","ftp","onadd","ftp_file","onremove","remove","visible","start","model_index","show","currentHistory","html","stop","default_extension","defaults_only","enable_start","enable_sources","show_table","compatible","enable_reset","enable_build","_template"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["/** Renders contents of the collection uploader */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/upload/upload-model\",\n        \"mvc/upload/collection/collection-row\",\n        \"mvc/upload/upload-ftp\",\n        \"mvc/upload/upload-extension\",\n        \"mvc/ui/ui-popover\",\n        \"mvc/ui/ui-select\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/collection/list-collection-creator\",\n        \"utils/uploadbox\"\n    ],\n    function(Utils, UploadModel, UploadRow, UploadFtp, UploadExtension, Popover, Select, Ui, LIST_COLLECTION_CREATOR) {\n        return Backbone.View.extend({\n            // current upload size in bytes\n            upload_size: 0,\n\n            // contains upload row models\n            collection: new UploadModel.Collection(),\n\n            // keeps track of the current uploader state\n            counter: {\n                announce: 0,\n                success: 0,\n                error: 0,\n                running: 0,\n                reset: function() {\n                    this.announce = this.success = this.error = this.running = 0;\n                }\n            },\n\n            initialize: function(app) {\n                var self = this;\n                this.app = app;\n                this.options = app.options;\n                this.list_extensions = app.list_extensions;\n                this.list_genomes = app.list_genomes;\n                this.ui_button = app.ui_button;\n                this.ftp_upload_site = app.currentFtp();\n                this.setElement(this._template());\n\n                // append buttons to dom\n                this.btnLocal = new Ui.Button({\n                    id: \"btn-local\",\n                    title: \"Choose local files\",\n                    onclick: function() {\n                        self.uploadbox.select();\n                    },\n                    icon: \"fa fa-laptop\"\n                });\n                this.btnFtp = new Ui.Button({\n                    id: \"btn-ftp\",\n                    title: \"Choose FTP files\",\n                    onclick: function() {\n                        self._eventFtp();\n                    },\n                    icon: \"fa fa-folder-open-o\"\n                });\n                this.btnCreate = new Ui.Button({\n                    id: \"btn-new\",\n                    title: \"Paste/Fetch data\",\n                    onclick: function() {\n                        self._eventCreate();\n                    },\n                    icon: \"fa fa-edit\"\n                });\n                this.btnStart = new Ui.Button({\n                    id: \"btn-start\",\n                    title: \"Start\",\n                    onclick: function() {\n                        self._eventStart();\n                    }\n                });\n                this.btnBuild = new Ui.Button({\n                    id: \"btn-build\",\n                    title: \"Build\",\n                    onclick: function() {\n                        self._eventBuild();\n                    }\n                });\n                this.btnStop = new Ui.Button({\n                    id: \"btn-stop\",\n                    title: \"Pause\",\n                    onclick: function() {\n                        self._eventStop();\n                    }\n                });\n                this.btnReset = new Ui.Button({\n                    id: \"btn-reset\",\n                    title: \"Reset\",\n                    onclick: function() {\n                        self._eventReset();\n                    }\n                });\n                this.btnClose = new Ui.Button({\n                    id: \"btn-close\",\n                    title: \"Close\",\n                    onclick: function() {\n                        self.app.modal.hide();\n                    }\n                });\n                _.each(\n                    [\n                        this.btnLocal,\n                        this.btnFtp,\n                        this.btnCreate,\n                        this.btnStop,\n                        this.btnReset,\n                        this.btnStart,\n                        this.btnBuild,\n                        this.btnClose\n                    ],\n                    function(button) {\n                        self.$(\".upload-buttons\").prepend(button.$el);\n                    }\n                );\n\n                // file upload\n                this.uploadbox = this.$(\".upload-box\").uploadbox({\n                    url: this.app.options.nginx_upload_path,\n                    announce: function(index, file) {\n                        self._eventAnnounce(index, file);\n                    },\n                    initialize: function(index) {\n                        return self.app.toData([self.collection.get(index)], self.history_id);\n                    },\n                    progress: function(index, percentage) {\n                        self._eventProgress(index, percentage);\n                    },\n                    success: function(index, message) {\n                        self._eventSuccess(index, message);\n                    },\n                    error: function(index, message) {\n                        self._eventError(index, message);\n                    },\n                    complete: function() {\n                        self._eventComplete();\n                    },\n                    ondragover: function() {\n                        self.$(\".upload-box\").addClass(\"highlight\");\n                    },\n                    ondragleave: function() {\n                        self.$(\".upload-box\").removeClass(\"highlight\");\n                    }\n                });\n\n                // add ftp file viewer\n                this.ftp = new Popover.View({\n                    title: \"FTP files\",\n                    container: this.btnFtp.$el\n                });\n\n                // select extension\n                this.select_extension = new Select.View({\n                    css: \"upload-footer-selection-compressed\",\n                    container: this.$(\".upload-footer-extension\"),\n                    data: _.filter(this.list_extensions, function(ext) {\n                        return !ext.composite_files;\n                    }),\n                    value: this.options.default_extension,\n                    onchange: function(extension) {\n                        self.updateExtension(extension);\n                    }\n                });\n\n                this.collectionType = \"list\";\n                this.select_collection = new Select.View({\n                    css: \"upload-footer-selection-compressed\",\n                    container: this.$(\".upload-footer-collection-type\"),\n                    data: [\n                        { id: \"list\", text: \"List\" },\n                        { id: \"paired\", text: \"Paired\" },\n                        { id: \"list:paired\", text: \"List of Pairs\" }\n                    ],\n                    value: \"list\",\n                    onchange: function(collectionType) {\n                        self.updateCollectionType(collectionType);\n                    }\n                });\n\n                // handle extension info popover\n                this.$(\".upload-footer-extension-info\")\n                    .on(\"click\", function(e) {\n                        new UploadExtension({\n                            $el: $(e.target),\n                            title: self.select_extension.text(),\n                            extension: self.select_extension.value(),\n                            list: self.list_extensions,\n                            placement: \"top\"\n                        });\n                    })\n                    .on(\"mousedown\", function(e) {\n                        e.preventDefault();\n                    });\n\n                // genome extension\n                this.select_genome = new Select.View({\n                    css: \"upload-footer-selection\",\n                    container: this.$(\".upload-footer-genome\"),\n                    data: this.list_genomes,\n                    value: this.options.default_genome,\n                    onchange: function(genome) {\n                        self.updateGenome(genome);\n                    }\n                });\n\n                // events\n                this.collection.on(\"remove\", function(model) {\n                    self._eventRemove(model);\n                });\n                this._updateScreen();\n            },\n\n            /** A new file has been dropped/selected through the uploadbox plugin */\n            _eventAnnounce: function(index, file) {\n                this.counter.announce++;\n                var new_model = new UploadModel.Model({\n                    id: index,\n                    file_name: file.name,\n                    file_size: file.size,\n                    file_mode: file.mode || \"local\",\n                    file_path: file.path,\n                    file_data: file,\n                    extension: this.select_extension.value(),\n                    genome: this.select_genome.value()\n                });\n                this.collection.add(new_model);\n                var upload_row = new UploadRow(this, { model: new_model });\n                this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n                this._updateScreen();\n                upload_row.render();\n            },\n\n            /** Progress */\n            _eventProgress: function(index, percentage) {\n                var it = this.collection.get(index);\n                it.set(\"percentage\", percentage);\n                this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n            },\n\n            /** Success */\n            _eventSuccess: function(index, message) {\n                // var hdaId = message[\"outputs\"][0][\"id\"];\n                var hids = _.pluck(message[\"outputs\"], \"hid\");\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"success\", hids: hids });\n                this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.success++;\n                this._updateScreen();\n                Galaxy.currHistoryPanel.refreshContents();\n            },\n\n            /** Error */\n            _eventError: function(index, message) {\n                var it = this.collection.get(index);\n                it.set({ percentage: 100, status: \"error\", info: message });\n                this.ui_button.model.set({\n                    percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n                    status: \"danger\"\n                });\n                this.upload_completed += it.get(\"file_size\") * 100;\n                this.counter.announce--;\n                this.counter.error++;\n                this._updateScreen();\n            },\n\n            /** Queue is done */\n            _eventComplete: function() {\n                this.collection.each(function(model) {\n                    model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n                });\n                this.counter.running = 0;\n                this._updateScreen();\n            },\n\n            _eventBuild: function() {\n                var allHids = [];\n                _.forEach(this.collection.models, function(upload) {\n                    allHids.push.apply(allHids, upload.get(\"hids\"));\n                });\n                var models = _.map(allHids, function(hid) {\n                    return Galaxy.currHistoryPanel.collection.getByHid(hid);\n                });\n                var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n                // I'm building the selection wrong because I need to set this historyId directly.\n                selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n                Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n                this.counter.running = 0;\n                this._updateScreen();\n                this._eventReset();\n                this.app.modal.hide();\n            },\n\n            /** Remove model from upload list */\n            _eventRemove: function(model) {\n                var status = model.get(\"status\");\n                if (status == \"success\") {\n                    this.counter.success--;\n                } else if (status == \"error\") {\n                    this.counter.error--;\n                } else {\n                    this.counter.announce--;\n                }\n                this.uploadbox.remove(model.id);\n                this._updateScreen();\n            },\n\n            //\n            // events triggered by this view\n            //\n\n            /** Show/hide ftp popup */\n            _eventFtp: function() {\n                if (!this.ftp.visible) {\n                    this.ftp.empty();\n                    var self = this;\n                    this.ftp.append(\n                        new UploadFtp({\n                            collection: this.collection,\n                            ftp_upload_site: this.ftp_upload_site,\n                            onadd: function(ftp_file) {\n                                return self.uploadbox.add([\n                                    {\n                                        mode: \"ftp\",\n                                        name: ftp_file.path,\n                                        size: ftp_file.size,\n                                        path: ftp_file.path\n                                    }\n                                ]);\n                            },\n                            onremove: function(model_index) {\n                                self.collection.remove(model_index);\n                            }\n                        }).$el\n                    );\n                    this.ftp.show();\n                } else {\n                    this.ftp.hide();\n                }\n            },\n\n            /** Create a new file */\n            _eventCreate: function() {\n                this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n            },\n\n            /** Start upload process */\n            _eventStart: function() {\n                if (this.counter.announce == 0 || this.counter.running > 0) {\n                    return;\n                }\n                var self = this;\n                this.upload_size = 0;\n                this.upload_completed = 0;\n                this.collection.each(function(model) {\n                    if (model.get(\"status\") == \"init\") {\n                        model.set(\"status\", \"queued\");\n                        self.upload_size += model.get(\"file_size\");\n                    }\n                });\n                this.ui_button.model.set({ percentage: 0, status: \"success\" });\n                this.counter.running = this.counter.announce;\n                this.history_id = this.app.currentHistory();\n                this.uploadbox.start();\n                this._updateScreen();\n            },\n\n            /** Pause upload process */\n            _eventStop: function() {\n                if (this.counter.running > 0) {\n                    this.ui_button.model.set(\"status\", \"info\");\n                    $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n                    this.uploadbox.stop();\n                }\n            },\n\n            /** Remove all */\n            _eventReset: function() {\n                if (this.counter.running == 0) {\n                    this.collection.reset();\n                    this.counter.reset();\n                    this.uploadbox.reset();\n                    this.select_extension.value(this.options.default_extension);\n                    this.select_genome.value(this.options.default_genome);\n                    this.ui_button.model.set(\"percentage\", 0);\n                    this._updateScreen();\n                }\n            },\n\n            /** Update extension for all models */\n            updateExtension: function(extension, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n                    ) {\n                        model.set(\"extension\", extension);\n                    }\n                });\n            },\n\n            /** Update collection type */\n            updateCollectionType: function(collectionType) {\n                var self = this;\n                this.collectionType = collectionType;\n            },\n\n            /** Update genome for all models */\n            updateGenome: function(genome, defaults_only) {\n                var self = this;\n                this.collection.each(function(model) {\n                    if (\n                        model.get(\"status\") == \"init\" &&\n                        (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n                    ) {\n                        model.set(\"genome\", genome);\n                    }\n                });\n            },\n\n            /** Set screen */\n            _updateScreen: function() {\n                var message = \"\";\n                if (this.counter.announce == 0) {\n                    if (this.uploadbox.compatible()) {\n                        message = \"&nbsp;\";\n                    } else {\n                        message =\n                            \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n                    }\n                } else {\n                    if (this.counter.running == 0) {\n                        message =\n                            \"You added \" +\n                            this.counter.announce +\n                            \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n                    } else {\n                        message =\n                            \"Please wait...\" +\n                            this.counter.announce +\n                            \" out of \" +\n                            this.counter.running +\n                            \" remaining.\";\n                    }\n                }\n                this.$(\".upload-top-info\").html(message);\n                var enable_reset =\n                    this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n                var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n                var enable_build =\n                    this.counter.running == 0 &&\n                    this.counter.announce == 0 &&\n                    this.counter.success > 0 &&\n                    this.counter.error == 0;\n                var enable_sources = this.counter.running == 0;\n                var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n                this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n                this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n                this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n                this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n                this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n                this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n                this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n                this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n                this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n                this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n            },\n\n            /** Calculate percentage of all queued uploads */\n            _uploadPercentage: function(percentage, size) {\n                return (this.upload_completed + percentage * size) / this.upload_size;\n            },\n\n            /** Template */\n            _template: function() {\n                return (\n                    '<div class=\"upload-view-default\">' +\n                    '<div class=\"upload-top\">' +\n                    '<h6 class=\"upload-top-info\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-box\">' +\n                    '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                    '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n                    \"<thead>\" +\n                    \"<tr>\" +\n                    \"<th>Name</th>\" +\n                    \"<th>Size</th>\" +\n                    \"<th>Status</th>\" +\n                    \"<th/>\" +\n                    \"</tr>\" +\n                    \"</thead>\" +\n                    \"<tbody/>\" +\n                    \"</table>\" +\n                    \"</div>\" +\n                    '<div class=\"upload-footer\">' +\n                    '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n                    '<span class=\"upload-footer-collection-type\"/>' +\n                    '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n                    '<span class=\"upload-footer-extension\"/>' +\n                    '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n                    '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n                    '<span class=\"upload-footer-genome\"/>' +\n                    \"</div>\" +\n                    '<div class=\"upload-buttons\"/>' +\n                    \"</div>\"\n                );\n            }\n        });\n    }\n);\n"]}