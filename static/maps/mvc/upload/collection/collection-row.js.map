{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["define","Utils","UploadModel","UploadSettings","Popover","Select","Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","this","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","$info_progress","$text_content","$symbol","$progress_bar","$percentage","settings","title","container","placement","select_genome","value","select_extension","on","_removeRow","e","set","url_paste","target","val","file_size","length","listenTo","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileSize","remove","collection","render","attributes","html","escape","file_name","bytesToString","width","top","file_mode","show","height","addClass","$el","info","get","hide","percentage","parseInt","css","status","enabled","attr","indexOf","_showSettings","visible","empty","append","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["/** Renders the collection uploader rows */\ndefine(\n    [\"utils/utils\", \"mvc/upload/upload-model\", \"mvc/upload/upload-settings\", \"mvc/ui/ui-popover\", \"mvc/ui/ui-select\"],\n    function(Utils, UploadModel, UploadSettings, Popover, Select) {\n        return Backbone.View.extend({\n            /** Dictionary of upload states and associated icons */\n            status_classes: {\n                init: \"upload-icon-button fa fa-trash-o\",\n                queued: \"upload-icon fa fa-spinner fa-spin\",\n                running: \"upload-icon fa fa-spinner fa-spin\",\n                success: \"upload-icon-button fa fa-check\",\n                error: \"upload-icon-button fa fa-exclamation-triangle\"\n            },\n\n            initialize: function(app, options) {\n                var self = this;\n                this.app = app;\n                this.model = options.model;\n                this.setElement(this._template(options.model));\n                this.$mode = this.$(\".upload-mode\");\n                this.$title = this.$(\".upload-title-extended\");\n                this.$text = this.$(\".upload-text\");\n                this.$size = this.$(\".upload-size\");\n                this.$info_text = this.$(\".upload-info-text\");\n                this.$info_progress = this.$(\".upload-info-progress\");\n                this.$text_content = this.$(\".upload-text-content\");\n                this.$symbol = this.$(\".upload-symbol\");\n                this.$progress_bar = this.$(\".upload-progress-bar\");\n                this.$percentage = this.$(\".upload-percentage\");\n\n                // append popup to settings icon\n                this.settings = new Popover.View({\n                    title: \"Upload configuration\",\n                    container: this.$(\".upload-settings\"),\n                    placement: \"bottom\"\n                });\n\n                // identify default genome and extension values\n                var default_genome = this.app.select_genome.value();\n                var default_extension = this.app.select_extension.value();\n\n                // handle click event\n                this.$symbol.on(\"click\", function() {\n                    self._removeRow();\n                });\n\n                // handle text editing event\n                this.$text_content.on(\"change input\", function(e) {\n                    self.model.set({\n                        url_paste: $(e.target).val(),\n                        file_size: $(e.target).val().length\n                    });\n                });\n\n                // model events\n                this.listenTo(this.model, \"change:percentage\", function() {\n                    self._refreshPercentage();\n                });\n                this.listenTo(this.model, \"change:status\", function() {\n                    self._refreshStatus();\n                });\n                this.listenTo(this.model, \"change:info\", function() {\n                    self._refreshInfo();\n                });\n                this.listenTo(this.model, \"change:file_size\", function() {\n                    self._refreshFileSize();\n                });\n                this.listenTo(this.model, \"remove\", function() {\n                    self.remove();\n                });\n                this.app.collection.on(\"reset\", function() {\n                    self.remove();\n                });\n            },\n\n            render: function() {\n                var options = this.model.attributes;\n                this.$title.html(_.escape(options.file_name));\n                this.$size.html(Utils.bytesToString(options.file_size));\n                this.$mode\n                    .removeClass()\n                    .addClass(\"upload-mode\")\n                    .addClass(\"text-primary\");\n                if (options.file_mode == \"new\") {\n                    this.$text\n                        .css({\n                            width: this.$el.width() - 16 + \"px\",\n                            top: this.$el.height() - 8 + \"px\"\n                        })\n                        .show();\n                    this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n                    this.$mode.addClass(\"fa fa-edit\");\n                } else if (options.file_mode == \"local\") {\n                    this.$mode.addClass(\"fa fa-laptop\");\n                } else if (options.file_mode == \"ftp\") {\n                    this.$mode.addClass(\"fa fa-folder-open-o\");\n                }\n            },\n\n            /** Refresh info text */\n            _refreshInfo: function() {\n                var info = this.model.get(\"info\");\n                if (info) {\n                    this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n                } else {\n                    this.$info_text.hide();\n                }\n            },\n\n            /** Refresh percentage status */\n            _refreshPercentage: function() {\n                var percentage = parseInt(this.model.get(\"percentage\"));\n                this.$progress_bar.css({ width: percentage + \"%\" });\n                this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n            },\n\n            /** Refresh status */\n            _refreshStatus: function() {\n                var status = this.model.get(\"status\");\n                this.$symbol\n                    .removeClass()\n                    .addClass(\"upload-symbol\")\n                    .addClass(this.status_classes[status]);\n                this.model.set(\"enabled\", status == \"init\");\n                var enabled = this.model.get(\"enabled\");\n                this.$text_content.attr(\"disabled\", !enabled);\n                if (status == \"success\") {\n                    this.$el.addClass(\"success\");\n                    this.$percentage.html(\"100%\");\n                }\n                if (status == \"error\") {\n                    this.$el.addClass(\"danger\");\n                    this.$info_progress.hide();\n                }\n            },\n\n            /** Refresh file size */\n            _refreshFileSize: function() {\n                this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n            },\n\n            /** Remove row */\n            _removeRow: function() {\n                if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n                    this.app.collection.remove(this.model);\n                }\n            },\n\n            /** Attach file info popup */\n            _showSettings: function() {\n                if (!this.settings.visible) {\n                    this.settings.empty();\n                    this.settings.append(new UploadSettings(this).$el);\n                    this.settings.show();\n                } else {\n                    this.settings.hide();\n                }\n            },\n\n            /** View template */\n            _template: function(options) {\n                return (\n                    '<tr id=\"upload-row-' +\n                    options.id +\n                    '\" class=\"upload-row\">' +\n                    \"<td>\" +\n                    '<div class=\"upload-text-column\">' +\n                    '<div class=\"upload-mode\"/>' +\n                    '<div class=\"upload-title-extended\"/>' +\n                    '<div class=\"upload-text\">' +\n                    '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                    '<textarea class=\"upload-text-content form-control\"/>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-size\"/>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-info\">' +\n                    '<div class=\"upload-info-text\"/>' +\n                    '<div class=\"upload-info-progress progress\">' +\n                    '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n                    '<div class=\"upload-percentage\">0%</div>' +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td>\" +\n                    '<div class=\"upload-symbol ' +\n                    this.status_classes.init +\n                    '\"/>' +\n                    \"</td>\" +\n                    \"</tr>\"\n                );\n            }\n        });\n    }\n);\n"]}