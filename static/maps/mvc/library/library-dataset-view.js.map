{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","mod_toastr","mod_utils","el","LibraryDatasetView","Backbone","View","extend","model","edit_mode","defaults","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .remove-restrictions","click .toolbtn_save_permissions","click .toolbtn_save_modifications","select_extension","list_extensions","auto","description","id","text","list_genomes","initialize","options","this","_","mod_library_model","Item","that","showPermissions","show_version","fetchVersion","fetch","error","response","onclick","Galaxy","render","library_router","libraries","responseJSON","err_msg","back","remove","template","ldda_id","$el","item","get","$","tooltip","url","success","ldda","renderVersion","templateVersion","renderSelectBoxes","genome_build","file_ext","templateModifyDataset","downloadDataset","data","ld_ids","processDownload","html","root","inputs","method","param","each","split","pair","importIntoHistory","self","modal","show","closing_events","title","buttons","Close","hide","templateBulkImportInModal","body","histories","models","refreshUserHistoriesList","Import","length","callback","GalaxyHistories","warning","window","location","new_history_name","name","enableButton","disableButton","val","history_id","processImportToHistory","post","done","new_history","historyItem","urlRoot","getJSON","HistoryItem","jQuery","save","content","source","fetched_permissions","undefined","is_unrestricted","fail","templateDatasetPermissions","access_dataset_roles","set","selected_roles","is_admin","config","is_admin_user","accessSelectObject","selector","initialData","_serializeRoles","role_list","select_options","_generate_select_options","i","multiple","push","replace","formatResult","formatSelection","role","mod_select","initSelection","modify_item_roles","manageSelectObject","dropdownCssClass","manage_dataset_roles","dataType","quietMillis","type","page_limit","page","element","is_changed","container","find","new_name","join","ld","ajax","term","new_info","new_genome_build","select_genome","total","results","roles","more","patch","dataset_view","info","select2","copyToClipboard","preventDefault","href","lastIndexOf","new_ext","makeDatasetPrivate","e","history","substr","prompt","ids_list","roles_list","savePermissions","manage_ids","fetchExtAndGenomes","description_url","access_ids","_extractIds","sort","modify_ids","modifySelectObject","manage_ids[]","modify_ids[]","datatypes","key","extension","current_genome","a","b","unshift","value","genomes","current_ext","css","templateDataset"],"mappings":"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/KJJ,KAgLIyK,EAAA,IACAM,EAlLD,YA1kB+B,IAAAhL,SAojBE,IAAzBA,EAAQkC,eA6M3BF,EAAiBhC,EAAAkC,mBAGL,IAAAlC,EAAAmC,WACA6I,EAAAhL,EAAAmC,WAWAlC,KAAAsI,cAAA,IAbJtB,EAcIxI,MAWAwM,IAAA,wBACA3I,KAAAjC,EAAAP,aAyFAgI,UAAAzH,EAAAkB,IAAAwG,KAAA,0BACA+C,MApHJJ,IAsHIzK,KAAAT,iBAvHR,IAAAyH,EAAAxI,MAlwBsCwM,IAAA,2BAmkBlC3I,KAAMjC,EAAKZ,gBA2TnB2C,UAAAA,EAAuBb,IAAAwG,KAAA,6BACnB+C,MAASzJ,KAeD6J,gBAAA,WACA,OAAAhL,EAAAmB,UAqFA,wCApGJ,6BAh4BkC,0KAglB9B,uCA0ZZuE,iBACW1F,YAEC,mLACA,mCAzZA,mBAmaA,YACA,2CAiDA,2KA9DJ,qCA5+BkC,eA2lB9B,YAqdZwD,UACWxD,2CAmBV,uFApkCL,8KAgmBgB,oCAueT,oBACH3B,YADJ,OA7kCJ,UA2mBoB,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,2CACA,QACA,2JACA,SACA,UAGA,8BACA,2DACA,OACA,oHACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACF0J,KAAK,MAIfjG,gBAAiB,WACb,OAAO9B,EAAEmB,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACF4G,KAAK,MAIf7F,sBAAuB,WACnB,OAAOlC,EAAEmB,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACF4G,KAAK,MAIfrC,2BAA4B,WACxB,OAAO1F,EAAEmB,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACF4G,KAAK,MAIfvE,0BAA2B,WACvB,OAAOxD,EAAEmB,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACF4G,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define([\"libs/toastr\", \"mvc/library/library-model\", \"utils/utils\", \"mvc/ui/ui-select\"], function(\n    mod_toastr,\n    mod_library_model,\n    mod_utils,\n    mod_select\n) {\n    var LibraryDatasetView = Backbone.View.extend({\n        el: \"#center\",\n\n        model: null,\n\n        options: {},\n\n        defaults: {\n            edit_mode: false\n        },\n\n        events: {\n            \"click .toolbtn_modify_dataset\": \"enableModification\",\n            \"click .toolbtn_cancel_modifications\": \"render\",\n            \"click .toolbtn-download-dataset\": \"downloadDataset\",\n            \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n            \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n            \"click .make-private\": \"makeDatasetPrivate\",\n            \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n            \"click .toolbtn_save_permissions\": \"savePermissions\",\n            \"click .toolbtn_save_modifications\": \"saveModifications\"\n        },\n\n        // genome select\n        select_genome: null,\n\n        // extension select\n        select_extension: null,\n\n        // extension types\n        list_extensions: [],\n\n        // datatype placeholder for extension auto-detection\n        auto: {\n            id: \"auto\",\n            text: \"Auto-detect\",\n            description:\n                \"This system will try to detect the file type automatically.\" +\n                \" If your file is not detected properly as one of the known formats,\" +\n                \" it most likely means that it has some format problems (e.g., different\" +\n                \" number of columns on different rows). You can still coerce the system\" +\n                \" to set your data to the format you think it should be.\" +\n                \" You can also upload compressed files, which will automatically be decompressed.\"\n        },\n\n        // genomes\n        list_genomes: [],\n\n        initialize: function(options) {\n            this.options = _.extend(this.options, options);\n            this.fetchExtAndGenomes();\n            if (this.options.id) {\n                this.fetchDataset();\n            }\n        },\n\n        fetchDataset: function(options) {\n            this.options = _.extend(this.options, options);\n            this.model = new mod_library_model.Item({\n                id: this.options.id\n            });\n            var that = this;\n            this.model.fetch({\n                success: function() {\n                    if (that.options.show_permissions) {\n                        that.showPermissions();\n                    } else if (that.options.show_version) {\n                        that.fetchVersion();\n                    } else {\n                        that.render();\n                    }\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg + \" Click this to go back.\", \"\", {\n                            onclick: function() {\n                                Galaxy.libraries.library_router.back();\n                            }\n                        });\n                    } else {\n                        mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                            onclick: function() {\n                                Galaxy.libraries.library_router.back();\n                            }\n                        });\n                    }\n                }\n            });\n        },\n\n        render: function(options) {\n            this.options = _.extend(this.options, options);\n            $(\".tooltip\").remove();\n            var template = this.templateDataset();\n            this.$el.html(template({ item: this.model }));\n            $(\".peek\").html(this.model.get(\"peek\"));\n            $(\"#center [data-toggle]\").tooltip();\n        },\n\n        fetchVersion: function(options) {\n            this.options = _.extend(this.options, options);\n            that = this;\n            if (!this.options.ldda_id) {\n                this.render();\n                mod_toastr.error(\"Library dataset version requested but no id provided.\");\n            } else {\n                this.ldda = new mod_library_model.Ldda({\n                    id: this.options.ldda_id\n                });\n                this.ldda.url = this.ldda.urlRoot + this.model.id + \"/versions/\" + this.ldda.id;\n                this.ldda.fetch({\n                    success: function() {\n                        that.renderVersion();\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            }\n        },\n\n        renderVersion: function() {\n            $(\".tooltip\").remove();\n            var template = this.templateVersion();\n            this.$el.html(template({ item: this.model, ldda: this.ldda }));\n            $(\".peek\").html(this.ldda.get(\"peek\"));\n        },\n\n        enableModification: function() {\n            $(\".tooltip\").remove();\n            var template = this.templateModifyDataset();\n            this.$el.html(template({ item: this.model }));\n            this.renderSelectBoxes({\n                genome_build: this.model.get(\"genome_build\"),\n                file_ext: this.model.get(\"file_ext\")\n            });\n            $(\".peek\").html(this.model.get(\"peek\"));\n            $(\"#center [data-toggle]\").tooltip();\n        },\n\n        downloadDataset: function() {\n            var url = Galaxy.root + \"api/libraries/datasets/download/uncompressed\";\n            var data = { ld_ids: this.id };\n            this.processDownload(url, data);\n        },\n\n        processDownload: function(url, data, method) {\n            //url and data options required\n            if (url && data) {\n                //data can be string of parameters or array/object\n                data = typeof data == \"string\" ? data : $.param(data);\n                //split params into form inputs\n                var inputs = \"\";\n                $.each(data.split(\"&\"), function() {\n                    var pair = this.split(\"=\");\n                    inputs += '<input type=\"hidden\" name=\"' + pair[0] + '\" value=\"' + pair[1] + '\" />';\n                });\n                //send request\n                $('<form action=\"' + url + '\" method=\"' + (method || \"post\") + '\">' + inputs + \"</form>\")\n                    .appendTo(\"body\")\n                    .submit()\n                    .remove();\n\n                mod_toastr.info(\"Your download will begin soon.\");\n            }\n        },\n\n        importIntoHistory: function() {\n            this.refreshUserHistoriesList(function(self) {\n                var template = self.templateBulkImportInModal();\n                self.modal = Galaxy.modal;\n                self.modal.show({\n                    closing_events: true,\n                    title: \"Import into History\",\n                    body: template({ histories: self.histories.models }),\n                    buttons: {\n                        Import: function() {\n                            self.importCurrentIntoHistory();\n                        },\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            });\n        },\n\n        refreshUserHistoriesList: function(callback) {\n            var self = this;\n            this.histories = new mod_library_model.GalaxyHistories();\n            this.histories.fetch({\n                success: function(histories) {\n                    if (histories.length === 0) {\n                        mod_toastr.warning(\"You have to create history first. Click this to do so.\", \"\", {\n                            onclick: function() {\n                                window.location = Galaxy.root;\n                            }\n                        });\n                    } else {\n                        callback(self);\n                    }\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        },\n\n        importCurrentIntoHistory: function() {\n            this.modal.disableButton(\"Import\");\n            var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n            var that = this;\n            if (new_history_name !== \"\") {\n                $.post(Galaxy.root + \"api/histories\", {\n                    name: new_history_name\n                })\n                    .done(function(new_history) {\n                        that.processImportToHistory(new_history.id);\n                    })\n                    .fail(function(xhr, status, error) {\n                        mod_toastr.error(\"An error occurred.\");\n                    })\n                    .always(function() {\n                        that.modal.enableButton(\"Import\");\n                    });\n            } else {\n                var history_id = $(this.modal.$el)\n                    .find(\"select[name=dataset_import_single] option:selected\")\n                    .val();\n                this.processImportToHistory(history_id);\n                this.modal.enableButton(\"Import\");\n            }\n        },\n\n        processImportToHistory: function(history_id) {\n            var historyItem = new mod_library_model.HistoryItem();\n            historyItem.url = historyItem.urlRoot + history_id + \"/contents\";\n            // set the used history as current so user will see the last one\n            // that he imported into in the history panel on the 'analysis' page\n            jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + history_id);\n            // save the dataset into selected history\n            historyItem.save(\n                { content: this.id, source: \"library\" },\n                {\n                    success: function() {\n                        Galaxy.modal.hide();\n                        mod_toastr.success(\"Dataset imported. Click this to start analyzing it.\", \"\", {\n                            onclick: function() {\n                                window.location = Galaxy.root;\n                            }\n                        });\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\"Dataset not imported. \" + response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occured. Dataset not imported. Please try again.\");\n                        }\n                    }\n                }\n            );\n        },\n\n        showPermissions: function(options) {\n            var template = this.templateDatasetPermissions();\n            var self = this;\n            this.options = _.extend(this.options, options);\n            $(\".tooltip\").remove();\n            if (this.options.fetched_permissions !== undefined) {\n                if (this.options.fetched_permissions.access_dataset_roles.length === 0) {\n                    this.model.set({ is_unrestricted: true });\n                } else {\n                    this.model.set({ is_unrestricted: false });\n                }\n            }\n            this.$el.html(\n                template({\n                    item: this.model,\n                    is_admin: Galaxy.config.is_admin_user\n                })\n            );\n            $.get(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?scope=current\")\n                .done(function(fetched_permissions) {\n                    self.prepareSelectBoxes({\n                        fetched_permissions: fetched_permissions,\n                        is_admin: Galaxy.config.is_admin_user\n                    });\n                })\n                .fail(function() {\n                    mod_toastr.error(\"An error occurred while attempting to fetch dataset permissions.\");\n                });\n            $(\"#center [data-toggle]\").tooltip();\n            $(\"#center\").css(\"overflow\", \"auto\");\n        },\n\n        _serializeRoles: function(role_list) {\n            var selected_roles = [];\n            for (var i = 0; i < role_list.length; i++) {\n                // Replace the : and , in role's name since these are select2 separators for initialData\n                selected_roles.push(role_list[i][1] + \":\" + role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\"));\n            }\n            return selected_roles;\n        },\n\n        prepareSelectBoxes: function(options) {\n            this.options = _.extend(this.options, options);\n            this.accessSelectObject = new mod_select.View(\n                this._generate_select_options({\n                    selector: \"access_perm\",\n                    initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n                })\n            );\n            this.modifySelectObject = new mod_select.View(\n                this._generate_select_options({\n                    selector: \"modify_perm\",\n                    initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n                })\n            );\n            this.manageSelectObject = new mod_select.View(\n                this._generate_select_options({\n                    selector: \"manage_perm\",\n                    initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n                })\n            );\n        },\n\n        _generate_select_options: function(options) {\n            var select_options = {\n                minimumInputLength: 0,\n                multiple: true,\n                placeholder: \"Click to select a role\",\n                formatResult: function roleFormatResult(role) {\n                    return role.name + \" type: \" + role.type;\n                },\n                formatSelection: function roleFormatSelection(role) {\n                    return role.name;\n                },\n                initSelection: function(element, callback) {\n                    // the input tag has a value attribute preloaded that points to a preselected role's id\n                    // this function resolves that id attribute to an object that select2 can render\n                    // using its formatResult renderer - that way the role name is shown preselected\n                    var data = [];\n                    $(element.val().split(\",\")).each(function() {\n                        var item = this.split(\":\");\n                        data.push({\n                            id: item[0],\n                            name: item[1]\n                        });\n                    });\n                    callback(data);\n                },\n                dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n            };\n            select_options.container = this.$el.find(\"#\" + options.selector);\n            select_options.css = options.selector;\n            select_options.initialData = options.initialData.join(\",\");\n            select_options.ajax = {\n                url: Galaxy.root + \"api/libraries/datasets/\" + this.id + \"/permissions?scope=available\",\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size, should be same as used in 'more' variable below\n                        page: page // page number\n                    };\n                },\n                results: function(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            };\n            return select_options;\n        },\n\n        /**\n   * Save the changes made to the library dataset.\n   */\n        saveModifications: function(options) {\n            var is_changed = false;\n            var ld = this.model;\n            var new_name = this.$el.find(\".input_dataset_name\").val();\n            if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n                if (new_name.length > 0) {\n                    ld.set(\"name\", new_name);\n                    is_changed = true;\n                } else {\n                    mod_toastr.warning(\"Library dataset name has to be at least 1 character long.\");\n                    return;\n                }\n            }\n            var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n            if (typeof new_info !== \"undefined\" && new_info !== ld.get(\"misc_info\")) {\n                ld.set(\"misc_info\", new_info);\n                is_changed = true;\n            }\n            var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n            if (typeof new_genome_build !== \"undefined\" && new_genome_build !== ld.get(\"genome_build\")) {\n                ld.set(\"genome_build\", new_genome_build);\n                is_changed = true;\n            }\n            var new_ext = this.select_extension.$el.select2(\"data\").id;\n            if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n                ld.set(\"file_ext\", new_ext);\n                is_changed = true;\n            }\n            var dataset_view = this;\n            if (is_changed) {\n                ld.save(null, {\n                    patch: true,\n                    success: function(ld) {\n                        dataset_view.render();\n                        mod_toastr.success(\"Changes to library dataset saved.\");\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occured while attempting to update the library dataset.\");\n                        }\n                    }\n                });\n            } else {\n                dataset_view.render();\n                mod_toastr.info(\"Nothing has changed.\");\n            }\n        },\n\n        copyToClipboard: function(e) {\n            e.preventDefault();\n            var href = Backbone.history.location.href;\n            if (href.lastIndexOf(\"/permissions\") !== -1) {\n                href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n            }\n            window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n        },\n\n        makeDatasetPrivate: function() {\n            var self = this;\n            $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=make_private\")\n                .done(function(fetched_permissions) {\n                    self.model.set({ is_unrestricted: false });\n                    self.showPermissions({\n                        fetched_permissions: fetched_permissions\n                    });\n                    mod_toastr.success(\"The dataset is now private to you.\");\n                })\n                .fail(function() {\n                    mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n                });\n        },\n\n        removeDatasetRestrictions: function() {\n            var self = this;\n            $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=remove_restrictions\")\n                .done(function(fetched_permissions) {\n                    self.model.set({ is_unrestricted: true });\n                    self.showPermissions({\n                        fetched_permissions: fetched_permissions\n                    });\n                    mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n                })\n                .fail(function() {\n                    mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n                });\n        },\n\n        /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n        _extractIds: function(roles_list) {\n            var ids_list = [];\n            for (var i = roles_list.length - 1; i >= 0; i--) {\n                ids_list.push(roles_list[i].id);\n            }\n            return ids_list;\n        },\n\n        /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n        savePermissions: function(event) {\n            var self = this;\n            var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n            var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n            var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n            $.post(Galaxy.root + \"api/libraries/datasets/\" + self.id + \"/permissions?action=set_permissions\", {\n                \"access_ids[]\": access_ids,\n                \"manage_ids[]\": manage_ids,\n                \"modify_ids[]\": modify_ids\n            })\n                .done(function(fetched_permissions) {\n                    self.showPermissions({\n                        fetched_permissions: fetched_permissions\n                    });\n                    mod_toastr.success(\"Permissions saved.\");\n                })\n                .fail(function() {\n                    mod_toastr.error(\"An error occurred while attempting to set dataset permissions.\");\n                });\n        },\n\n        /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n        fetchExtAndGenomes: function() {\n            var that = this;\n            if (this.list_genomes.length == 0) {\n                mod_utils.get({\n                    url: Galaxy.root + \"api/datatypes?extension_only=False\",\n                    success: function(datatypes) {\n                        for (var key in datatypes) {\n                            that.list_extensions.push({\n                                id: datatypes[key].extension,\n                                text: datatypes[key].extension,\n                                description: datatypes[key].description,\n                                description_url: datatypes[key].description_url\n                            });\n                        }\n                        that.list_extensions.sort(function(a, b) {\n                            return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                        });\n                        that.list_extensions.unshift(that.auto);\n                    }\n                });\n            }\n            if (this.list_extensions.length == 0) {\n                mod_utils.get({\n                    url: Galaxy.root + \"api/genomes\",\n                    success: function(genomes) {\n                        for (var key in genomes) {\n                            that.list_genomes.push({\n                                id: genomes[key][1],\n                                text: genomes[key][0]\n                            });\n                        }\n                        that.list_genomes.sort(function(a, b) {\n                            return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                        });\n                    }\n                });\n            }\n        },\n\n        renderSelectBoxes: function(options) {\n            // This won't work properly unlesss we already have the data fetched.\n            // See this.fetchExtAndGenomes()\n            // TODO switch to common resources:\n            // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n            var that = this;\n            var current_genome = \"?\";\n            var current_ext = \"auto\";\n            if (typeof options !== \"undefined\") {\n                if (typeof options.genome_build !== \"undefined\") {\n                    current_genome = options.genome_build;\n                }\n                if (typeof options.file_ext !== \"undefined\") {\n                    current_ext = options.file_ext;\n                }\n            }\n            this.select_genome = new mod_select.View({\n                css: \"dataset-genome-select\",\n                data: that.list_genomes,\n                container: that.$el.find(\"#dataset_genome_select\"),\n                value: current_genome\n            });\n            this.select_extension = new mod_select.View({\n                css: \"dataset-extension-select\",\n                data: that.list_extensions,\n                container: that.$el.find(\"#dataset_extension_select\"),\n                value: current_ext\n            });\n        },\n\n        templateDataset: function() {\n            return _.template(\n                [\n                    // CONTAINER START\n                    '<div class=\"library_style_container\">',\n                    '<div id=\"library_toolbar\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-download\"></span>',\n                    \"&nbsp;Download\",\n                    \"</button>\",\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-book\"></span>',\n                    \"&nbsp;to History\",\n                    \"</button>\",\n                    '<% if (item.get(\"can_user_modify\")) { %>',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-pencil\"></span>',\n                    \"&nbsp;Modify\",\n                    \"</button>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"can_user_manage\")) { %>',\n                    '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-group\"></span>',\n                    \"&nbsp;Permissions\",\n                    \"</button>\",\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</div>\",\n\n                    // BREADCRUMBS\n                    '<ol class=\"breadcrumb\">',\n                    '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                    '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                    \"<% if (path_item[0] != item.id) { %>\",\n                    '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                    \"<% } else { %>\",\n                    '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"</ol>\",\n\n                    '<% if (item.get(\"is_unrestricted\")) { %>',\n                    \"<div>\",\n                    'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                    \"</div>\",\n                    \"<% } %>\",\n\n                    // TABLE START\n                    '<div class=\"dataset_table\">',\n                    '<table class=\"grid table table-striped table-condensed\">',\n                    \"<tr>\",\n                    '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                    '<td><%= _.escape(item.get(\"name\")) %></td>',\n                    \"</tr>\",\n                    '<% if (item.get(\"file_ext\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Data type</th>',\n                    '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"genome_build\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Genome build</th>',\n                    '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"file_size\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Size</th>',\n                    '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"date_uploaded\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Date uploaded (UTC)</th>',\n                    '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"uploaded_by\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Uploaded by</th>',\n                    '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"metadata_data_lines\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Data Lines</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Comment Lines</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"metadata_columns\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Number of Columns</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"metadata_column_types\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Column Types</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"message\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Message</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"misc_blurb\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Misc. blurb</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"misc_info\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Misc. info</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"tags\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Tags</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">UUID</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">State</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    \"</table>\",\n\n                    '<% if (item.get(\"job_stderr\")) { %>',\n                    \"<h4>Job Standard Error</h4>\",\n                    '<pre class=\"code\">',\n                    '<%= _.escape(item.get(\"job_stderr\")) %>',\n                    \"</pre>\",\n                    \"<% } %>\",\n\n                    '<% if (item.get(\"job_stdout\")) { %>',\n                    \"<h4>Job Standard Output</h4>\",\n                    '<pre class=\"code\">',\n                    '<%= _.escape(item.get(\"job_stdout\")) %>',\n                    \"</pre>\",\n                    \"<% } %>\",\n\n                    \"<div>\",\n                    '<pre class=\"peek\">',\n                    \"</pre>\",\n                    \"</div>\",\n\n                    '<% if (item.get(\"has_versions\")) { %>',\n                    \"<div>\",\n                    \"<h3>Expired versions:</h3>\",\n                    \"<ul>\",\n                    '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                    '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                    \"<% }) %>\",\n                    \"<ul>\",\n                    \"</div>\",\n                    \"<% } %>\",\n                    // TABLE END\n                    \"</div>\",\n                    // CONTAINER END\n                    \"</div>\"\n                ].join(\"\")\n            );\n        },\n\n        templateVersion: function() {\n            return _.template(\n                [\n                    // CONTAINER START\n                    '<div class=\"library_style_container\">',\n                    '<div id=\"library_toolbar\">',\n                    '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                    \"&nbsp;Latest dataset\",\n                    \"</button>\",\n                    \"<a>\",\n                    \"</div>\",\n\n                    // BREADCRUMBS\n                    '<ol class=\"breadcrumb\">',\n                    '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                    '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                    \"<% if (path_item[0] != item.id) { %>\",\n                    '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                    \"<% } else { %>\",\n                    '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"</ol>\",\n\n                    '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                    // DATASET START\n                    '<div class=\"dataset_table\">',\n                    '<table class=\"grid table table-striped table-condensed\">',\n                    \"<tr>\",\n                    '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                    '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                    \"</tr>\",\n                    '<% if (ldda.get(\"file_ext\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Data type</th>',\n                    '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"genome_build\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Genome build</th>',\n                    '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"file_size\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Size</th>',\n                    '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"date_uploaded\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Date uploaded (UTC)</th>',\n                    '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"uploaded_by\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Uploaded by</th>',\n                    '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Data Lines</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Comment Lines</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"metadata_columns\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Number of Columns</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Column Types</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"message\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Message</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"misc_blurb\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Miscellaneous blurb</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (ldda.get(\"misc_info\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Miscellaneous information</th>',\n                    '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    '<% if (item.get(\"tags\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Tags</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    \"</table>\",\n                    \"<div>\",\n                    '<pre class=\"peek\">',\n                    \"</pre>\",\n                    \"</div>\",\n                    // DATASET END\n                    \"</div>\",\n                    // CONTAINER END\n                    \"</div>\"\n                ].join(\"\")\n            );\n        },\n\n        templateModifyDataset: function() {\n            return _.template(\n                [\n                    // CONTAINER START\n                    '<div class=\"library_style_container\">',\n                    '<div id=\"library_toolbar\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-times\"></span>',\n                    \"&nbsp;Cancel\",\n                    \"</button>\",\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"&nbsp;Save\",\n                    \"</button>\",\n                    \"</div>\",\n\n                    // BREADCRUMBS\n                    '<ol class=\"breadcrumb\">',\n                    '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                    '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                    \"<% if (path_item[0] != item.id) { %>\",\n                    '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                    \"<% } else { %>\",\n                    '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"</ol>\",\n\n                    '<div class=\"dataset_table\">',\n                    '<table class=\"grid table table-striped table-condensed\">',\n                    \"<tr>\",\n                    '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                    '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Data type</th>',\n                    \"<td>\",\n                    '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                    \"</td>\",\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Genome build</th>',\n                    \"<td>\",\n                    '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                    \"</td>\",\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Size</th>',\n                    '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Date uploaded (UTC)</th>',\n                    '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Uploaded by</th>',\n                    '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                    \"</tr>\",\n                    '<tr scope=\"row\">',\n                    '<th scope=\"row\">Data Lines</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                    \"</tr>\",\n                    '<th scope=\"row\">Comment Lines</th>',\n                    '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                    \"<% } else { %>\",\n                    '<td scope=\"row\">unknown</td>',\n                    \"<% } %>\",\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Number of Columns</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Column Types</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Message</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Misc. blurb</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                    \"</tr>\",\n                    \"<tr>\",\n                    '<th scope=\"row\">Misc. information</th>',\n                    '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                    \"</tr>\",\n                    //TODO: add functionality to modify tags here\n                    '<% if (item.get(\"tags\")) { %>',\n                    \"<tr>\",\n                    '<th scope=\"row\">Tags</th>',\n                    '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                    \"</tr>\",\n                    \"<% } %>\",\n                    \"</table>\",\n                    \"<div>\",\n                    '<pre class=\"peek\">',\n                    \"</pre>\",\n                    \"</div>\",\n                    \"</div>\",\n                    // CONTAINER END\n                    \"</div>\"\n                ].join(\"\")\n            );\n        },\n\n        templateDatasetPermissions: function() {\n            return _.template(\n                [\n                    // CONTAINER START\n                    '<div class=\"library_style_container\">',\n                    '<div id=\"library_toolbar\">',\n                    '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                    '<span class=\"fa fa-file-o\"></span>',\n                    \"&nbsp;Dataset Details\",\n                    \"</button>\",\n                    \"<a>\",\n                    \"</div>\",\n\n                    // BREADCRUMBS\n                    '<ol class=\"breadcrumb\">',\n                    '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                    '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                    \"<% if (path_item[0] != item.id) { %>\",\n                    '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                    \"<% } else { %>\",\n                    '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                    \"<% } %>\",\n                    \"<% }); %>\",\n                    \"</ol>\",\n\n                    '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                    '<div class=\"alert alert-warning\">',\n                    \"<% if (is_admin) { %>\",\n                    \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                    \"<% } else { %>\",\n                    \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                    \"<% } %>\",\n                    \"</div>\",\n                    '<div class=\"dataset_table\">',\n                    \"<h2>Library-related permissions</h2>\",\n                    \"<h4>Roles that can modify the library item</h4>\",\n                    '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                    '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                    \"<hr/>\",\n                    \"<h2>Dataset-related permissions</h2>\",\n                    '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                    '<% if (!item.get(\"is_unrestricted\")) { %>',\n                    '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                    \"<% } else { %>\",\n                    '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                    \"<% } %>\",\n                    \"<h4>Roles that can access the dataset</h4>\",\n                    '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                    '<div class=\"alert alert-info roles-selection\">',\n                    \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                    \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                    \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                    \"</div>\",\n                    \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                    '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                    '<div class=\"alert alert-info roles-selection\">',\n                    \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                    \"</div>\",\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"&nbsp;Save\",\n                    \"</button>\",\n                    \"</div>\",\n                    // CONTAINER END\n                    \"</div>\"\n                ].join(\"\")\n            );\n        },\n\n        templateBulkImportInModal: function() {\n            return _.template(\n                [\n                    \"<div>\",\n                    '<div class=\"library-modal-item\">',\n                    \"Select history: \",\n                    '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                    \"<% _.each(histories, function(history) { %>\",\n                    '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                    \"<% }); %>\",\n                    \"</select>\",\n                    \"</div>\",\n                    '<div class=\"library-modal-item\">',\n                    \"or create new: \",\n                    '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                    \"</input>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            );\n        }\n    });\n\n    return {\n        LibraryDatasetView: LibraryDatasetView\n    };\n});\n"]}