{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["define","LibraryDatasetView","el","mod_toastr","mod_library_model","mod_utils","mod_select","Backbone","View","extend","edit_mode","options","defaults","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .remove-restrictions","select_genome","click .toolbtn_save_modifications","select_extension","text","auto","id","list_genomes","description","this","_","that","model","fetch","success","fetchDataset","fetchVersion","render","Item","error","onclick","show_permissions","Galaxy","show_version","response","responseJSON","err_msg","libraries","library_router","back","get","ldda","remove","renderVersion","$el","html","template","item","$","ldda_id","templateVersion","Ldda","url","urlRoot","enableModification","templateModifyDataset","genome_build","tooltip","processDownload","each","split","pair","inputs","file_ext","downloadDataset","importIntoHistory","refreshUserHistoriesList","templateBulkImportInModal","self","modal","data","title","method","buttons","importCurrentIntoHistory","param","Close","hide","histories","warning","callback","show","closing_events","name","new_history_name","done","new_history","GalaxyHistories","processImportToHistory","fail","length","enableButton","history_id","root","content","disableButton","val","xhr","status","templateDatasetPermissions","always","is_unrestricted","find","prepareSelectBoxes","fetched_permissions","is_admin","historyItem","jQuery","getJSON","save","_serializeRoles","source","i","role_list","selected_roles","window","location","_generate_select_options","modify_item_roles","placeholder","formatResult","role","formatSelection","undefined","initSelection","element","set","config","is_admin_user","dropdownCssClass","select_options","initialData","ajax","page","css","more","results","roles","push","replace","saveModifications","is_changed","ld","accessSelectObject","new_name","access_dataset_roles","modifySelectObject","new_info","manageSelectObject","manage_dataset_roles","patch","dataset_view","type","href","substr","prompt","container","makeDatasetPrivate","selector","post","join","showPermissions","quietMillis","term","q","removeDatasetRestrictions","_extractIds","ids_list","roles_list","modify_ids","access_ids","manage_ids","select2","new_genome_build","new_ext","list_extensions","description_url","copyToClipboard","history","lastIndexOf","current_genome","current_ext","value","templateDataset","savePermissions","event","modify_ids[]","fetchExtAndGenomes","datatypes","key","extension","sort","a","b","unshift","genomes","renderSelectBoxes"],"mappings":"aAAAA,QAEQ,cAMIC,4BACAC,cAJJ,oBAEJ,SAASC,EAAYC,EAAmBC,EAAWC,GA+oC/C,OACIL,mBA/oC0CM,SAAAC,KAAAC,QAC1CP,GAAI,UAOAQ,MAAAA,KAHJC,WAOIC,UACAF,WAAA,GAGAG,QACAC,gCAAuB,qBACvBC,sCAA8B,SAC9BC,kCAAmC,kBACnCC,gCAAqC,oBApBCC,gCAAA,kBAiBtCC,sBAAuB,qBAM3BC,6BAAA,4BACAC,kCAxB0C,kBAoBtCC,oCAAqC,qBASzCD,cAAA,KAGAE,iBAAA,KAGIC,mBAFJC,MAYAC,GAAA,OACAC,KAAc,cAVVC,YAYQ,sZASRD,gBAEID,WAAI,SAAaA,GADrBG,KAAAlB,QAAAmB,EAAArB,OAAAoB,KAAAlB,QAAAA,GAGIoB,KAAAA,qBACCC,KAAMC,QAAMP,IACbQ,KAASC,gBAIDJ,aAAAA,SAAKK,GACRP,KAFMlB,QAEAmB,EAAArB,OAAAoB,KAAAlB,QAAAA,GACHoB,KAAAA,MAAKM,IAAAA,EAALC,MACHZ,GAAAG,KAAAlB,QAAAe,KAELa,IAAAA,EAAOV,KACHA,KAAAG,MAAIC,OACA9B,QAAAA,WAIQqC,EAAAA,QAASC,iBACLC,EAAAA,kBACHX,EAAApB,QAAAgC,aANTZ,EAAAK,eAUAjC,EAAAA,UAMSoC,MAAA,SAAAP,EAAAY,QANT,IAAAA,EAAAC,aASH1C,EAAAoC,MACJK,EAAAC,aAAAC,QADI,0BA/BT,IAgBoBN,QAAS,WAoBzBE,OAAkBK,UAAAC,eAAAC,UAKN9C,EAAW+C,MACzB,4CAxGoC,IA2G5BV,QAAS7B,WACK+B,OAAK/B,UAAdqC,eAAfC,cAWIZ,OAAA,SAAA1B,GAGAkB,KAAKsB,QAALrB,EAAgBrB,OAAAoB,KAAAlB,QAAAA,GACZuB,EAAAA,YAASkB,SACLrB,IAAAA,EAAKsB,KAAAA,kBACRxB,KAHWyB,IAAAC,KAAAC,GAAAC,KAAA5B,KAAAG,SAIZO,EAAAA,SAAOgB,KAAA1B,KAAAG,MAASA,IAAT,SACH0B,EAAA,yBAAWd,WAGPzC,aAAAA,SAAAA,GACH0B,KAAAlB,QAAAmB,EAAArB,OAAAoB,KAAAlB,QAAAA,GACJoB,KAAAF,KAVLA,KAAAlB,QAAAgD,SAiBAH,KAAAA,KAAgBI,IAAAA,EAApBC,MACSN,GAAKC,KAAAA,QAAWC,UA5Ia5B,KAAAsB,KAAAW,IAwH3BjC,KAAKsB,KAAKY,QAwBzBC,KAAAA,MAAAA,GAhJ0C,aAgJ1CA,KAAoBb,KAAAzB,GACdG,KAAFsB,KAAcC,OACVI,QAAgBS,WACNT,KAAAA,iBAEVU,MAAc,SAAAlC,EAAeY,QACnB,IAAWM,EAAIL,aAF7B1C,EAAAoC,MAAAK,EAAAC,aAAAC,SAKE3C,EAAyBgE,MAA3B,2BAnBCtC,KAAAQ,SAtIqClC,EAAAoC,MAiH9B,2DAjH8Bc,cAAA,WA0ItCK,EAAE,YAAYN,SAyBlBgB,IAAAA,EAAiBvC,KAAA+B,kBACb/B,KAAAyB,IAAAC,KAAAC,GAAAC,KAAA5B,KAAAG,MAAAmB,KAAAtB,KAAAsB,QACIW,EAAAA,SAAJP,KAAiB1B,KAAAsB,KAAAD,IAAA,UAGbc,mBAAA,WACAN,EAAA,YAAaN,SACbM,IAAEW,EAAUC,KAAML,wBACdpC,KAAAyB,IAAIiB,KAAAA,GAAOd,KAAX5B,KAAAG,SACAwC,KAAAA,mBAFJN,aAAArC,KAAAG,MAAAkB,IAAA,gBAKAuB,SAAA5C,KAAAG,MAAAkB,IAAA,cAvBJQ,EAAE,SAASH,KAAK1B,KAAKG,MAAMkB,IAAI,SA+B3B/C,EAAAA,yBAAgBgE,WA3BxBO,gBAAiB,WA+BjBC,IAAAA,EACSC,OAAAA,KADTD,+CAEYnB,GAAAA,OAAgBqB,KAAAA,IACpBC,KAAKC,gBAAeA,EAApBC,IAGIC,gBAAO,SAAAnB,EAAAkB,EAFKE,GAIZC,GAAAA,GAAAA,EAAS,CAEDL,EAAKM,iBAAAA,EAAAA,EAAL1B,EAAA2B,MAAAL,GAEJM,IAAAA,EAAO,GACH5C,EAAAA,KAAAA,EAAAA,MAAOqC,KAAMQ,WAChB,IAAAhB,EAAA1C,KAAAyC,MAAA,KANIE,GAAAA,8BAJbD,EAAA,GAIa,YAJbA,EAAA,GAIa,SAnBbb,EAAAA,iBA+BkBI,EA/BlB,cA+BkBoB,GAAA,QA/BlB,KA+BqCV,EA/BrC,WAiCCgB,SAAgBpF,QAChBoF,SACQpC,SAEDjD,EAAAA,KAAWsF,oCAGPd,kBAHJ,WASH9C,KAVD+C,yBAUO,SAAAE,GACHY,IAAAA,EAASZ,EAATD,4BACHC,EAAAC,MAAArC,OAAAqC,MAdYD,EAAAC,MAAAY,MAgBVC,gBAAS5D,EACRiD,MAAOrC,sBACPzC,KAAAA,GAAiByC,UAASC,EAAAA,UAAaC,SAD3CqC,SAGIhF,OAAWoC,WACduC,EAAAM,4BArBTE,MAAA,WAlNsC5C,OAAAqC,MAAAQ,cAmPlC7B,yBAAA,SAAAgC,GACIG,IAAAA,EAAMC,KAD4BjE,KAGjCkE,UAAK,IAASC,EAAaC,gBACxBlE,KAAAA,UAAKmE,OAERC,QAAK,SAAAX,GACe,IAAjBrF,EAAiBiG,OAEbjG,EAAWsF,QACJY,yDAVnB,IAamB7D,QAAA,WAKd0D,OAAuBI,SAA5B5D,OAAA6D,QAKRL,EAAwBpB,IAIpBvC,MAAA,SAAAP,EAAAY,QACA,IAAAA,EAAAC,aAEOH,EADPH,MAAAK,EAAAC,aAAAC,SAIA3C,EACMqG,MAAc9E,0BAUC0D,yBAAA,WAHLvD,KAHJkD,MAAA0B,cAAA,UASH,IAZLX,EAAAjE,KAAAkD,MAaIxC,EAAO,4BACHmE,MACIvG,EAAAA,KAGH,GAAM,KAAN2F,EACG3F,EAAAA,KAAAA,OAAWoC,KAAXpC,iBAGH0F,KAAAC,IAxBbC,KAAA,SAAAC,GApRsCjE,EAAAmE,uBAAAF,EAAAtE,MAkTzByE,KAAA,SAAAQ,EAAAC,EAASjG,GACPR,EAAK0G,MAAAA,wBAEpBC,OAAiBrG,WACH2C,EAAd2B,MAAAsB,aAAA,gBAGQ,CAGA,IAAAC,EAAiBS,EAAAA,KAAAA,MAAAA,KACdC,KACEhF,sDAEZ0E,MACD7E,KAAAqE,uBACaI,GACL7C,KAAMsB,MAAK/C,aADN,YASL8C,uBAAKmC,SAAmBX,GACpBY,IAAAA,EAAAA,IAAAA,EAAqBA,YACrBC,EAAAA,IAFJC,EAAArD,QAAAuC,EAEIa,YANZE,OAAAC,QAcE5E,OAAA6D,KAdF,6BAcAD,GAjEAc,EAAYG,MAqEhBC,QAAiB3F,KAAAH,GAAA+F,OAAA,YAEJC,QAAWC,WAChBjF,OAAAqC,MAAAQ,OACAqC,EACOD,QAEV,sDACMC,IApEapF,QAAS,WAuEbqF,OAAAC,SAASnH,OAAS4F,SAElChE,MAAA,SAAAP,EAAAY,QAUSmF,IADiBnF,EAAItC,aAEZH,EADgBoC,MAChB,yBAED5B,EAAQuG,aAAoBc,SAM3B7H,EADgBoC,MAERiF,iEAYtBS,gBAAa,SAAAtH,GACbuH,IAAAA,EAAcrG,KAAAgF,6BACV/B,EAAUqD,KACbtG,KANgBlB,QAAAmB,EAAArB,OAAAoB,KAAAlB,QAAAA,GAOjByH,EAAAA,YAAAA,cACIC,IAAAxG,KAAAlB,QAAYkF,sBAGZ,IADJyC,KAAAA,QAAepB,oBAASqB,qBACpBnC,OAEAvE,KAAAG,MAAAwG,KAAAzB,iBAAA,IAEEwB,KAAAA,MAAAC,KAAAzB,iBAA+B,KAGzBrF,KAAAA,IAAAA,KACAmE,GAFMpC,KAAV5B,KAAAG,MAFJmF,SAAAzE,OAAA+F,OAAAC,iBASJC,EAAAA,IAxBJjG,OAAA6D,KAwBIoC,0BAxBJ7D,EAAApD,GAwBIiH,8BAKJC,KAAAA,SAAqBjI,GACrBiI,EAAeC,oBACAC,oBAAO5B,EAEJX,SADd7D,OAAA+F,OAAAC,kBAIA1D,KAAM,WACF7E,EAAAoC,MACO,sEAGHwG,EAAAA,yBAAW5E,UAHRT,EAAA,WAAPsF,IAAA,WAAA,SAOAxB,gBAAIyB,SAActB,GAElB,IAAA,IADAC,KACAF,EAASwB,EAAAA,EAAAA,EAAcC,OAAOF,IAhBtCrB,EAAAwB,KAmBOR,EAAPlB,GAAA,GAnBA,IAmBAC,EAAAD,GAAA,GAAA2B,QAAA,IAAA,KAAAA,QAAA,IAAA,OAGJ,OAAAzB,GAGA0B,mBAAmB,SAAA3I,GACX4I,KAAAA,QAAazH,EAAArB,OAAjBoB,KAAAlB,QAAAA,GACI6I,KAAKC,mBAAT,IAAAnJ,EAAAE,KACIkJ,KAAAA,0BAEOA,SAAP,cAGIA,YAAA7H,KAAqB2F,gBACd3F,KAAPlB,QAAe+I,oBACFC,yBAMhB9H,KAAA+H,mBAAA,IAAAtJ,EAAAE,KACJqB,KAAAkG,0BACG8B,SAAgBvG,cAETuG,YAAahI,KAAA2F,gBAGb3F,KAAAlB,QAAakJ,oBAApB7B,sBAMAnG,KAAAiI,mBAAA,IAA4BxJ,EAA5BE,KAGGgI,KAAIT,0BACPwB,SAAA,cACHV,YAAAhH,KAAA2F,gBACa3F,KAAKN,QAAAA,oBAEfwI,0BAQAP,yBAAc,SAAA7I,GACVqJ,IAAAA,GACA9H,mBAAS,EACL+H,UAAAA,EACA9J,YAAAA,yBAGH+H,aAPS,SAAAC,GAQV5F,OAAO4F,EAAAtC,KAAPtD,UAAuBK,EAAhBsH,MAEC/J,gBAAAA,SAAiBgI,GACpB,OAAMA,EAAAtC,MAINyC,cAAA,SAAAC,EAAA7C,GAITuE,IAAAA,KACA9J,EAAAA,EAAgBuG,MAAApC,MAAA,MAAAD,KAAhB,WACH,IAAAZ,EAAA5B,KAAAyC,MAAA,KA7fqCU,EAAAoE,MAqZtB1H,GAAI+B,EAAK,GA2GZoC,KAAApC,EAAA,OAGF0G,EAAKC,IAETC,iBAAO,WA0Bd,OAlIAzB,EAAe0B,UAAYzI,KAAKyB,IAAI0D,KAAT,IA2G/BuD,EAAoBC,UAEdC,EAAFzB,IAAArI,EAAA6J,SAIQ1F,EAAe+D,YAAE9B,EAAiB8B,YAAlC6B,KAAA,KACA5F,EAAK6F,MACDzD,IADJxE,OAAA6D,KACIW,0BADJrF,KAAAH,GACIwF,+BAEJ/G,SAAW+B,OAIT0I,YAAW,IACbzK,KAAAA,SACI0K,EAAA9B,GAxhB0B,OA0a1B+B,EAAGD,EAmHnBE,WAA2B,GACvBhC,KAAAA,IAMQjE,QAAK6F,SAAgB3F,EAAA+D,GACjB7B,IAAAA,EAAqBA,GAArBA,EAAqBA,EAAAA,MAEzB/G,OAAW+B,QACP8C,EAAAmE,MAAAF,KAAAA,KATZL,GAsBJoC,kBAAa,SAAArK,GACLsK,IAAAA,GAAJ,EACKzB,EAAQ0B,KAAAA,MACTD,EAAcC,KAAAA,IAAAA,KAAcxJ,uBAA5BgF,MACH,QACD,IAAAgD,GA1jBsCA,IAAAF,EAAAtG,IAAA,QAkcpC,CA2HN,KAAAwG,EAAAtD,OAAA,GAWQ+E,YAPOhL,EAAXsF,QACI2F,6DA9HI5B,EAAGhB,IAAI,OAAQkB,GACfH,GAAa,EA0Ib,IAAAM,EAAAhI,KAAgBwJ,IAAAA,KAFpB,4BAAA3E,WAMeQ,IAAT2C,GACF/E,IAAK6F,EAALzH,IAAqB,eAArBsG,EAAAhB,IAAA,YAAAqB,GAGA1J,GAAW+B,GAGX/B,IAAAA,EACI0B,KAAAR,cAAAiC,IAAAgI,QAAA,QAhBZ5J,QAnHgC,IAArB6J,GAwIfA,IAAA/B,EAAAtG,IAAA,kBArIQsG,EAAGhB,IAAI,eAAgB+C,GACvBhC,GAAa,GAyIbxH,IAAAA,EAAJF,KAAAN,iBAAA+B,IAAAgI,QAAA,QAAA5J,QAEkB,IAAJwB,GACNY,IAAeyC,EAAAA,IAAf,cAEIiD,EAAAhB,IAAA,WAAAgD,GACIzJ,GAAK0J,GAEDjK,IAAAA,EAAAA,KACAI,EACA8J,EAAAA,KAAAA,MAJsB1B,OAA1B,EAOH9H,QAAA,SAAAsH,GACDzH,EAAK0J,SACDtL,EAAO+B,QADX,sCAZRK,MAAA,SAAAP,EAAAY,QAkBH,IAAAA,EAAAC,aACQ4I,EAALlJ,MAAJK,EAAsCC,aAAAC,SAEfyD,EAAfhE,MACS,wEAMJ0H,EAAA5H,SACDN,EAAKJ,KAAAA,0BATCgK,gBAAd,WAcH,IAAAxB,EAAA5J,SAAAqL,QAAA9D,SAAAqC,MAzoBqC,IAAAA,EAAA0B,YAAA,kBAmgBlC1B,EAAOA,EAAKC,OAAO,EAAGD,EAAK0B,YAAY,kBA0I3ChE,OAAAwC,OAAA,mCAAAF,IAGAI,mBAAA,WACIxI,IAAAA,EAAJF,KACIiK,EAAAA,KACAC,OAAcxF,KADduF,0BACJhH,EAAApD,GADIoK,oCAGI/F,KAAA,SAAe7B,GACf4H,EAAAA,MAAAA,KAAiBnL,iBAAjB,IACHmE,EAAA6F,iBACUhK,oBAAqBuG,IAE/B/G,EAAA+B,QACJ,wCAGG8C,KAAMjD,WACNuI,EAAW/H,MACJuJ,kEAKPxB,0BAAoBtD,WACpBgF,IAAAA,EAAOD,KAJXrI,EAAA+G,KAlqBsC/H,OAAA6D,KAkqBtC,0BAlqBsCzB,EAAApD,GAkqBtC,2CAQJuK,KAAiB,SAAA/E,GACJ1D,EAAFxB,MACHwG,KAAAzB,iBAAA,IACIjC,EAAA6F,iBACAzD,oBAAAA,IA0BA/G,EAAA+B,QACA,iDAkBAiE,KAAA,WAqGAhG,EAAAoC,MApJJ,uEAgKIyI,YAAA,SAAAE,GAUA,IAAA,IAhSJD,KAgSIvD,EAAAwD,EAAA9E,OAAA,EAAAsB,GAAA,EAAAA,IACAuD,EAAA7B,KAAA8B,EACAxD,GAAAhG,IAYA,OAAAuJ,GApSZiB,gBAAiB,SAASC,GAqY1BlI,IAAAA,EAAAA,KACWnC,EACHD,KAAAmJ,YACInJ,KAAA4H,mBAAAnG,IAAAgI,QAAA,SAnYJD,EAAaxJ,KAAKmJ,YAgZdnJ,KAAAiI,mBAAAxG,IAAAgI,QAAA,SAyEAH,EAAAtJ,KAAAmJ,YACAnJ,KAAA+H,mBAxFJtG,IAyFIgI,QACA,SAWA5H,EAAA+G,KA5iC8B/H,OAAA6D,KA4iC9B,0BA5iC8BzB,EAAApD,GA4iC9B,uCAKZmF,eAA4BuE,EACf5H,eACL6H,EACIe,eAAAjB,IAWApF,KAAA,SAAAmB,GACApC,EAAA6F,iBAiDAzD,oBAAAA,IAjnC8B/G,EAAA+B,QAAA,wBAunC1C2C,KAAAA,WACarB,EAEDjB,MAiBX,qEAviBD8J,mBAAoB,WAChB,IAAItK,EAAOF,KACqB,GAA5BA,KAAKF,aAAayE,QAClB/F,EAAU6C,KACNY,IAAQpB,OAAO6D,KAAf,qCACArE,QAAS,SAASoK,GACd,IAAK,IAAIC,KAAOD,EACZvK,EAAK0J,gBAAgBrC,MACjB1H,GAAI4K,EAAUC,GAAKC,UACnBhL,KAAM8K,EAAUC,GAAKC,UACrB5K,YAAa0K,EAAUC,GAAK3K,YAC5B8J,gBACIY,EAAUC,GAAKb,kBAG3B3J,EAAK0J,gBAAgBgB,KAAK,SAASC,EAAGC,GAClC,OAAOD,EAAEhL,GAAKiL,EAAEjL,GAAK,EAAIgL,EAAEhL,GAAKiL,EAAEjL,IAAM,EAAI,IAEhDK,EAAK0J,gBAAgBmB,QAAQ7K,EAAKN,SAIX,GAA/BI,KAAK4J,gBAAgBrF,QACrB/F,EAAU6C,KACNY,IAAQpB,OAAO6D,KAAf,cACArE,QAAS,SAAS2K,GACd,IAAK,IAAIN,KAAOM,EACZ9K,EAAKJ,aAAayH,MACd1H,GAAImL,EAAQN,GAAK,GACjB/K,KAAMqL,EAAQN,GAAK,KAG3BxK,EAAKJ,aAAa8K,KAAK,SAASC,EAAGC,GAC/B,OAAOD,EAAEhL,GAAKiL,EAAEjL,GAAK,EAAIgL,EAAEhL,GAAKiL,EAAEjL,IAAM,EAAI,QAOhEoL,kBAAmB,SAASnM,GAKxB,IAAIoB,EAAOF,KACPiK,EAAiB,IACjBC,EAAc,YACK,IAAZpL,SAC6B,IAAzBA,EAAQuD,eACf4H,EAAiBnL,EAAQuD,mBAEG,IAArBvD,EAAQ8D,WACfsH,EAAcpL,EAAQ8D,WAG9B5C,KAAKR,cAAgB,IAAIf,EAAWE,MAChCwI,IAAK,wBACLhE,KAAMjD,EAAKJ,aACX2I,UAAWvI,EAAKuB,IAAI0D,KAAK,0BACzBgF,MAAOF,IAEXjK,KAAKN,iBAAmB,IAAIjB,EAAWE,MACnCwI,IAAK,2BACLhE,KAAMjD,EAAK0J,gBACXnB,UAAWvI,EAAKuB,IAAI0D,KAAK,6BACzBgF,MAAOD,KAIfE,gBAAiB,WACb,OAAOnK,EAAE0B,UAGD,wCACA,6BACA,0KACA,uCACA,iBACA,YACA,mLACA,mCACA,mBACA,YACA,2CACA,2KACA,qCACA,eACA,YACA,UACA,2CACA,uFACA,8KACA,oCACA,oBACA,YACA,OACA,UACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,2CACA,QACA,kJACA,SACA,UAGA,8BACA,2DACA,OACA,oHACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFkH,KAAK,MAIf9G,gBAAiB,WACb,OAAO9B,EAAE0B,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACFkH,KAAK,MAIfzG,sBAAuB,WACnB,OAAOnC,EAAE0B,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,4DACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACFkH,KAAK,MAIf7D,2BAA4B,WACxB,OAAO/E,EAAE0B,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,iHACA,iBACA,4FACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACFkH,KAAK,MAIf7F,0BAA2B,WACvB,OAAO/C,EAAE0B,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACFkH,KAAK","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"utils/utils\",\n        \"mvc/ui/ui-select\"\n    ],\n    function(mod_toastr, mod_library_model, mod_utils, mod_select) {\n        var LibraryDatasetView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            defaults: {\n                edit_mode: false\n            },\n\n            events: {\n                \"click .toolbtn_modify_dataset\": \"enableModification\",\n                \"click .toolbtn_cancel_modifications\": \"render\",\n                \"click .toolbtn-download-dataset\": \"downloadDataset\",\n                \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n                \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n                \"click .make-private\": \"makeDatasetPrivate\",\n                \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n                \"click .toolbtn_save_permissions\": \"savePermissions\",\n                \"click .toolbtn_save_modifications\": \"saveModifications\"\n            },\n\n            // genome select\n            select_genome: null,\n\n            // extension select\n            select_extension: null,\n\n            // extension types\n            list_extensions: [],\n\n            // datatype placeholder for extension auto-detection\n            auto: {\n                id: \"auto\",\n                text: \"Auto-detect\",\n                description:\n                    \"This system will try to detect the file type automatically.\" +\n                    \" If your file is not detected properly as one of the known formats,\" +\n                    \" it most likely means that it has some format problems (e.g., different\" +\n                    \" number of columns on different rows). You can still coerce the system\" +\n                    \" to set your data to the format you think it should be.\" +\n                    \" You can also upload compressed files, which will automatically be decompressed.\"\n            },\n\n            // genomes\n            list_genomes: [],\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                this.fetchExtAndGenomes();\n                if (this.options.id) {\n                    this.fetchDataset();\n                }\n            },\n\n            fetchDataset: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.Item({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        } else if (that.options.show_version) {\n                            that.fetchVersion();\n                        } else {\n                            that.render();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                `${response.responseJSON.err_msg} Click this to go back.`,\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                var template = this.templateDataset();\n                this.$el.html(template({ item: this.model }));\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            fetchVersion: function(options) {\n                this.options = _.extend(this.options, options);\n                that = this;\n                if (!this.options.ldda_id) {\n                    this.render();\n                    mod_toastr.error(\n                        \"Library dataset version requested but no id provided.\"\n                    );\n                } else {\n                    this.ldda = new mod_library_model.Ldda({\n                        id: this.options.ldda_id\n                    });\n                    this.ldda.url =\n                        `${this.ldda.urlRoot +\nthis.model.id}/versions/${this.ldda.id}`;\n                    this.ldda.fetch({\n                        success: function() {\n                            that.renderVersion();\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\"An error occurred.\");\n                            }\n                        }\n                    });\n                }\n            },\n\n            renderVersion: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateVersion();\n                this.$el.html(template({ item: this.model, ldda: this.ldda }));\n                $(\".peek\").html(this.ldda.get(\"peek\"));\n            },\n\n            enableModification: function() {\n                $(\".tooltip\").remove();\n                var template = this.templateModifyDataset();\n                this.$el.html(template({ item: this.model }));\n                this.renderSelectBoxes({\n                    genome_build: this.model.get(\"genome_build\"),\n                    file_ext: this.model.get(\"file_ext\")\n                });\n                $(\".peek\").html(this.model.get(\"peek\"));\n                $(\"#center [data-toggle]\").tooltip();\n            },\n\n            downloadDataset: function() {\n                var url =\n                    `${Galaxy.root}api/libraries/datasets/download/uncompressed`;\n                var data = { ld_ids: this.id };\n                this.processDownload(url, data);\n            },\n\n            processDownload: function(url, data, method) {\n                //url and data options required\n                if (url && data) {\n                    //data can be string of parameters or array/object\n                    data = typeof data == \"string\" ? data : $.param(data);\n                    //split params into form inputs\n                    var inputs = \"\";\n                    $.each(data.split(\"&\"), function() {\n                        var pair = this.split(\"=\");\n                        inputs +=\n                            `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n                    });\n                    //send request\n                    $(\n                        `<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`\n                    )\n                        .appendTo(\"body\")\n                        .submit()\n                        .remove();\n\n                    mod_toastr.info(\"Your download will begin soon.\");\n                }\n            },\n\n            importIntoHistory: function() {\n                this.refreshUserHistoriesList(function(self) {\n                    var template = self.templateBulkImportInModal();\n                    self.modal = Galaxy.modal;\n                    self.modal.show({\n                        closing_events: true,\n                        title: \"Import into History\",\n                        body: template({ histories: self.histories.models }),\n                        buttons: {\n                            Import: function() {\n                                self.importCurrentIntoHistory();\n                            },\n                            Close: function() {\n                                Galaxy.modal.hide();\n                            }\n                        }\n                    });\n                });\n            },\n\n            refreshUserHistoriesList: function(callback) {\n                var self = this;\n                this.histories = new mod_library_model.GalaxyHistories();\n                this.histories.fetch({\n                    success: function(histories) {\n                        if (histories.length === 0) {\n                            mod_toastr.warning(\n                                \"You have to create history first. Click this to do so.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        } else {\n                            callback(self);\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            },\n\n            importCurrentIntoHistory: function() {\n                this.modal.disableButton(\"Import\");\n                var new_history_name = this.modal\n                    .$(\"input[name=history_name]\")\n                    .val();\n                var that = this;\n                if (new_history_name !== \"\") {\n                    $.post(`${Galaxy.root}api/histories`, {\n                        name: new_history_name\n                    })\n                        .done(function(new_history) {\n                            that.processImportToHistory(new_history.id);\n                        })\n                        .fail(function(xhr, status, error) {\n                            mod_toastr.error(\"An error occurred.\");\n                        })\n                        .always(function() {\n                            that.modal.enableButton(\"Import\");\n                        });\n                } else {\n                    var history_id = $(this.modal.$el)\n                        .find(\n                            \"select[name=dataset_import_single] option:selected\"\n                        )\n                        .val();\n                    this.processImportToHistory(history_id);\n                    this.modal.enableButton(\"Import\");\n                }\n            },\n\n            processImportToHistory: function(history_id) {\n                var historyItem = new mod_library_model.HistoryItem();\n                historyItem.url =\n                    `${historyItem.urlRoot + history_id}/contents`;\n                // set the used history as current so user will see the last one\n                // that he imported into in the history panel on the 'analysis' page\n                jQuery.getJSON(\n                    `${Galaxy.root}history/set_as_current?id=${history_id}`\n                );\n                // save the dataset into selected history\n                historyItem.save(\n                    { content: this.id, source: \"library\" },\n                    {\n                        success: function() {\n                            Galaxy.modal.hide();\n                            mod_toastr.success(\n                                \"Dataset imported. Click this to start analyzing it.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        window.location = Galaxy.root;\n                                    }\n                                }\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(\n                                    `Dataset not imported. ${response.responseJSON.err_msg}`\n                                );\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured. Dataset not imported. Please try again.\"\n                                );\n                            }\n                        }\n                    }\n                );\n            },\n\n            showPermissions: function(options) {\n                var template = this.templateDatasetPermissions();\n                var self = this;\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n                if (this.options.fetched_permissions !== undefined) {\n                    if (\n                        this.options.fetched_permissions.access_dataset_roles\n                            .length === 0\n                    ) {\n                        this.model.set({ is_unrestricted: true });\n                    } else {\n                        this.model.set({ is_unrestricted: false });\n                    }\n                }\n                this.$el.html(\n                    template({\n                        item: this.model,\n                        is_admin: Galaxy.config.is_admin_user\n                    })\n                );\n                $.get(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?scope=current`\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions,\n                            is_admin: Galaxy.config.is_admin_user\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch dataset permissions.\"\n                        );\n                    });\n                $(\"#center [data-toggle]\").tooltip();\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    // Replace the : and , in role's name since these are select2 separators for initialData\n                    selected_roles.push(\n                        `${role_list[i][1]}:${role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")}`\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                this.accessSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"access_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .access_dataset_roles\n                        )\n                    })\n                );\n                this.modifySelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"modify_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions.modify_item_roles\n                        )\n                    })\n                );\n                this.manageSelectObject = new mod_select.View(\n                    this._generate_select_options({\n                        selector: \"manage_perm\",\n                        initialData: this._serializeRoles(\n                            this.options.fetched_permissions\n                                .manage_dataset_roles\n                        )\n                    })\n                );\n            },\n\n            _generate_select_options: function(options) {\n                var select_options = {\n                    minimumInputLength: 0,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    formatResult: function roleFormatResult(role) {\n                        return `${role.name} type: ${role.type}`;\n                    },\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n                select_options.container = this.$el.find(\n                    `#${options.selector}`\n                );\n                select_options.css = options.selector;\n                select_options.initialData = options.initialData.join(\",\");\n                select_options.ajax = {\n                    url:\n                        `${Galaxy.root}api/libraries/datasets/${this.id}/permissions?scope=available`,\n                    dataType: \"json\",\n                    quietMillis: 100,\n                    data: function(term, page) {\n                        // page is the one-based page number tracked by Select2\n                        return {\n                            q: term, //search term\n                            page_limit: 10, // page size, should be same as used in 'more' variable below\n                            page: page // page number\n                        };\n                    },\n                    results: function(data, page) {\n                        var more = page * 10 < data.total; // whether or not there are more results available\n                        // notice we return the value of more so Select2 knows if more results can be loaded\n                        return { results: data.roles, more: more };\n                    }\n                };\n                return select_options;\n            },\n\n            /**\n   * Save the changes made to the library dataset.\n   */\n            saveModifications: function(options) {\n                var is_changed = false;\n                var ld = this.model;\n                var new_name = this.$el.find(\".input_dataset_name\").val();\n                if (\n                    typeof new_name !== \"undefined\" &&\n                    new_name !== ld.get(\"name\")\n                ) {\n                    if (new_name.length > 0) {\n                        ld.set(\"name\", new_name);\n                        is_changed = true;\n                    } else {\n                        mod_toastr.warning(\n                            \"Library dataset name has to be at least 1 character long.\"\n                        );\n                        return;\n                    }\n                }\n                var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n                if (\n                    typeof new_info !== \"undefined\" &&\n                    new_info !== ld.get(\"misc_info\")\n                ) {\n                    ld.set(\"misc_info\", new_info);\n                    is_changed = true;\n                }\n                var new_genome_build = this.select_genome.$el.select2(\"data\")\n                    .id;\n                if (\n                    typeof new_genome_build !== \"undefined\" &&\n                    new_genome_build !== ld.get(\"genome_build\")\n                ) {\n                    ld.set(\"genome_build\", new_genome_build);\n                    is_changed = true;\n                }\n                var new_ext = this.select_extension.$el.select2(\"data\").id;\n                if (\n                    typeof new_ext !== \"undefined\" &&\n                    new_ext !== ld.get(\"file_ext\")\n                ) {\n                    ld.set(\"file_ext\", new_ext);\n                    is_changed = true;\n                }\n                var dataset_view = this;\n                if (is_changed) {\n                    ld.save(null, {\n                        patch: true,\n                        success: function(ld) {\n                            dataset_view.render();\n                            mod_toastr.success(\n                                \"Changes to library dataset saved.\"\n                            );\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured while attempting to update the library dataset.\"\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    dataset_view.render();\n                    mod_toastr.info(\"Nothing has changed.\");\n                }\n            },\n\n            copyToClipboard: function() {\n                var href = Backbone.history.location.href;\n                if (href.lastIndexOf(\"/permissions\") !== -1) {\n                    href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n                }\n                window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n            },\n\n            makeDatasetPrivate: function() {\n                var self = this;\n                $.post(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: false });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"The dataset is now private to you.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset private.\"\n                        );\n                    });\n            },\n\n            removeDatasetRestrictions: function() {\n                var self = this;\n                $.post(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: true });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"Access to this dataset is now unrestricted.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset unrestricted.\"\n                        );\n                    });\n            },\n\n            /**\n   * Extract the role ids from Select2 elements's 'data'\n   */\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n\n            /**\n   * Save the permissions for roles entered in the select boxes.\n   */\n            savePermissions: function(event) {\n                var self = this;\n                var access_ids = this._extractIds(\n                    this.accessSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n                $.post(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=set_permissions`,\n                    {\n                        \"access_ids[]\": access_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set dataset permissions.\"\n                        );\n                    });\n            },\n\n            /**\n   * If needed request all extensions and/or genomes from Galaxy\n   * and save them in sorted arrays.\n   */\n            fetchExtAndGenomes: function() {\n                var that = this;\n                if (this.list_genomes.length == 0) {\n                    mod_utils.get({\n                        url: `${Galaxy.root}api/datatypes?extension_only=False`,\n                        success: function(datatypes) {\n                            for (var key in datatypes) {\n                                that.list_extensions.push({\n                                    id: datatypes[key].extension,\n                                    text: datatypes[key].extension,\n                                    description: datatypes[key].description,\n                                    description_url:\n                                        datatypes[key].description_url\n                                });\n                            }\n                            that.list_extensions.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                            that.list_extensions.unshift(that.auto);\n                        }\n                    });\n                }\n                if (this.list_extensions.length == 0) {\n                    mod_utils.get({\n                        url: `${Galaxy.root}api/genomes`,\n                        success: function(genomes) {\n                            for (var key in genomes) {\n                                that.list_genomes.push({\n                                    id: genomes[key][1],\n                                    text: genomes[key][0]\n                                });\n                            }\n                            that.list_genomes.sort(function(a, b) {\n                                return a.id > b.id ? 1 : a.id < b.id ? -1 : 0;\n                            });\n                        }\n                    });\n                }\n            },\n\n            renderSelectBoxes: function(options) {\n                // This won't work properly unlesss we already have the data fetched.\n                // See this.fetchExtAndGenomes()\n                // TODO switch to common resources:\n                // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n                var that = this;\n                var current_genome = \"?\";\n                var current_ext = \"auto\";\n                if (typeof options !== \"undefined\") {\n                    if (typeof options.genome_build !== \"undefined\") {\n                        current_genome = options.genome_build;\n                    }\n                    if (typeof options.file_ext !== \"undefined\") {\n                        current_ext = options.file_ext;\n                    }\n                }\n                this.select_genome = new mod_select.View({\n                    css: \"dataset-genome-select\",\n                    data: that.list_genomes,\n                    container: that.$el.find(\"#dataset_genome_select\"),\n                    value: current_genome\n                });\n                this.select_extension = new mod_select.View({\n                    css: \"dataset-extension-select\",\n                    data: that.list_extensions,\n                    container: that.$el.find(\"#dataset_extension_select\"),\n                    value: current_ext\n                });\n            },\n\n            templateDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-download\"></span>',\n                        \"&nbsp;Download\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-book\"></span>',\n                        \"&nbsp;to History\",\n                        \"</button>\",\n                        '<% if (item.get(\"can_user_modify\")) { %>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-pencil\"></span>',\n                        \"&nbsp;Modify\",\n                        \"</button>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"can_user_manage\")) { %>',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-group\"></span>',\n                        \"&nbsp;Permissions\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<% if (item.get(\"is_unrestricted\")) { %>',\n                        \"<div>\",\n                        'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a>this page</a></span>.',\n                        \"</div>\",\n                        \"<% } %>\",\n\n                        // TABLE START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><%= _.escape(item.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (item.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. info</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n\n                        '<% if (item.get(\"has_versions\")) { %>',\n                        \"<div>\",\n                        \"<h3>Expired versions:</h3>\",\n                        \"<ul>\",\n                        '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                        '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                        \"<% }) %>\",\n                        \"<ul>\",\n                        \"</div>\",\n                        \"<% } %>\",\n                        // TABLE END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateVersion: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                        \"&nbsp;Latest dataset\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                        // DATASET START\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                        '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                        \"</tr>\",\n                        '<% if (ldda.get(\"file_ext\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"genome_build\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"file_size\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"date_uploaded\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"uploaded_by\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_columns\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"message\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_blurb\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (ldda.get(\"misc_info\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Miscellaneous information</th>',\n                        '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        // DATASET END\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateModifyDataset: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-times\"></span>',\n                        \"&nbsp;Cancel\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<div class=\"dataset_table\">',\n                        '<table class=\"grid table table-striped table-condensed\">',\n                        \"<tr>\",\n                        '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                        '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Data type</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Genome build</th>',\n                        \"<td>\",\n                        '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                        \"</td>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Size</th>',\n                        '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Date uploaded (UTC)</th>',\n                        '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Uploaded by</th>',\n                        '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                        \"</tr>\",\n                        '<tr scope=\"row\">',\n                        '<th scope=\"row\">Data Lines</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                        \"</tr>\",\n                        '<th scope=\"row\">Comment Lines</th>',\n                        '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                        \"<% } else { %>\",\n                        '<td scope=\"row\">unknown</td>',\n                        \"<% } %>\",\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Number of Columns</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Column Types</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Message</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. blurb</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                        \"</tr>\",\n                        \"<tr>\",\n                        '<th scope=\"row\">Misc. information</th>',\n                        '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                        \"</tr>\",\n                        //TODO: add functionality to modify tags here\n                        '<% if (item.get(\"tags\")) { %>',\n                        \"<tr>\",\n                        '<th scope=\"row\">Tags</th>',\n                        '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                        \"</tr>\",\n                        \"<% } %>\",\n                        \"</table>\",\n                        \"<div>\",\n                        '<pre class=\"peek\">',\n                        \"</pre>\",\n                        \"</div>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateDatasetPermissions: function() {\n                return _.template(\n                    [\n                        // CONTAINER START\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                        '<span class=\"fa fa-file-o\"></span>',\n                        \"&nbsp;Dataset Details\",\n                        \"</button>\",\n                        \"<a>\",\n                        \"</div>\",\n\n                        // BREADCRUMBS\n                        '<ol class=\"breadcrumb\">',\n                        '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                        '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                        \"<% if (path_item[0] != item.id) { %>\",\n                        '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                        \"<% } else { %>\",\n                        '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                        \"<% } %>\",\n                        \"<% }); %>\",\n                        \"</ol>\",\n\n                        '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% } %>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Library-related permissions</h2>\",\n                        \"<h4>Roles that can modify the library item</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                        \"<hr/>\",\n                        \"<h2>Dataset-related permissions</h2>\",\n                        '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                        '<% if (!item.get(\"is_unrestricted\")) { %>',\n                        '<p>You can <span class=\"remove-restrictions\"><a>remove all access restrictions</a></span> on this dataset.</p>',\n                        \"<% } else { %>\",\n                        '<p>You can <span class=\"make-private\"><a>make this dataset private</a></span> to you.</p>',\n                        \"<% } %>\",\n                        \"<h4>Roles that can access the dataset</h4>\",\n                        '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                        \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                        \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                        \"</div>\",\n                        \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"></span>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        // CONTAINER END\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateBulkImportInModal: function() {\n                return _.template(\n                    [\n                        \"<div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"Select history: \",\n                        '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                        \"<% _.each(histories, function(history) { %>\",\n                        '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                        \"<% }); %>\",\n                        \"</select>\",\n                        \"</div>\",\n                        '<div class=\"library-modal-item\">',\n                        \"or create new: \",\n                        '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                        \"</input>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryDatasetView: LibraryDatasetView\n        };\n    }\n);\n"]}