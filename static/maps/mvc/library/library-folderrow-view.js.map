{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["define","mod_toastr","mod_library_dataset_view","FolderRowView","Backbone","View","extend","events","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","click .cancel_folder_btn","click .save_folder_btn","visibility_config","edit_folder_btn","save_folder_btn","cancel_folder_btn","permission_folder_btn","edit_mode","initialize","render","options","this","_","defaults","folder_item","template","model","prepareButtons","get","templateRowDeletedFolder","templateRowFolder","templateRowDeletedFile","type","Galaxy","error","button_config","emit","setElement","content_item","vis_config","folder","showDatasetDetails","libraries","dataset_id","dataset","folderListView","LibraryDatasetView","id","$","updated_dataset","onclick","folder_id","collection","window","destroy","success","response","remove","Item","add","sortByNameAsc","that","location","root","undeleteFolder","responseJSON","err_msg","event","target","closest","updated_folder","mod_library_model","FolderAsModel","startModifications","repaint","cancelModifications","is_changed","new_name","find","warning","saveModifications","new_description","$el","val","length","row_view","set","save","patch","info","old_element","join","templateRowFile","tooltip"],"mappings":"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,yBADJ,OAnZJ,gFAqPoB,QACA,OACA,yCACA,QACA,YACA,8BACA,oIACA,yJACA,UACA,kBACA,OACA,mDACA,QACA,YACA,OACA,wBACA,4NACA,sCACA,YACA,mOACA,qCACA,YACA,+BACA,0PACA,oCACA,YACA,0DACA,gQACA,qCACA,YACA,OACA,UACA,QACA,SACFyF,KAAK,MAIfC,gBAAiB,WACb,OAAOtE,EAAEG,UAED,8EACA,OACA,+CACA,QACA,oCACA,6CACA,QACA,OACA,mHACA,kCACA,MACA,QACA,8CACA,yDACA,0DACA,4DACA,OACA,oDACA,6CACA,UACA,QACA,OACA,mDACA,gIACA,UACA,8CACA,yHACA,UACA,6GACA,+HACA,UACA,8CACA,uGACA,uKACA,qCACA,YACA,OACA,UACA,QACA,SACFkE,KAAK,MAIf5D,uBAAwB,WACpB,OAAOT,EAAEG,UAED,mFACA,OACA,+CACA,QACA,YACA,2BACA,kCACA,QACA,OACA,qCACA,QACA,OACA,gDACA,QACA,OACA,iDACA,QACA,OACA,mDACA,QACA,OACA,oDACA,6CACA,UACA,QACA,OACA,wHACA,qMACA,wCACA,YACA,QACA,SACFkE,KAAK,MAIf9D,yBAA0B,WACtB,OAAOP,EAAEG,UAED,wFACA,OACA,gDACA,QACA,YACA,2BACA,kCACA,QACA,OACA,yCACA,QACA,OACA,SACA,QACA,YACA,OACA,mDACA,QACA,YACA,OACA,wHACA,oMACA,wCACA,YACA,QACA,SACFkE,KAAK","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["define([\"libs/toastr\", \"mvc/library/library-model\", \"mvc/library/library-dataset-view\"], function(\n    mod_toastr,\n    mod_library_model,\n    mod_library_dataset_view\n) {\n    var FolderRowView = Backbone.View.extend({\n        events: {\n            \"click .undelete_dataset_btn\": \"undeleteDataset\",\n            \"click .undelete_folder_btn\": \"undeleteFolder\",\n            \"click .edit_folder_btn\": \"startModifications\",\n            \"click .cancel_folder_btn\": \"cancelModifications\",\n            \"click .save_folder_btn\": \"saveModifications\"\n        },\n\n        defaults: {\n            type: null,\n            visibility_config: {\n                edit_folder_btn: false,\n                save_folder_btn: false,\n                cancel_folder_btn: false,\n                permission_folder_btn: false\n            },\n            edit_mode: false\n        },\n\n        initialize: function(options) {\n            this.options = _.defaults(options || {}, this.defaults);\n            this.render(this.options);\n        },\n\n        render: function(options) {\n            this.options = _.extend(this.options, options);\n            var folder_item = this.options.model;\n            var template = null;\n\n            if (folder_item.get(\"type\") === \"folder\" || folder_item.get(\"model_class\") === \"LibraryFolder\") {\n                this.options.type = \"folder\";\n                this.prepareButtons(folder_item);\n                if (folder_item.get(\"deleted\")) {\n                    template = this.templateRowDeletedFolder();\n                } else {\n                    template = this.templateRowFolder();\n                }\n            } else if (\n                folder_item.get(\"type\") === \"file\" ||\n                folder_item.get(\"model_class\") === \"LibraryDatasetDatasetAssociation\" ||\n                folder_item.get(\"model_class\") === \"LibraryDataset\"\n            ) {\n                this.options.type = \"file\";\n                if (folder_item.get(\"deleted\")) {\n                    template = this.templateRowDeletedFile();\n                } else {\n                    template = this.templateRowFile();\n                }\n            } else {\n                Galaxy.emit.error(\"Unknown library item type found.\");\n                Galaxy.emit.error(folder_item.get(\"type\") || folder_item.get(\"model_class\"));\n            }\n            this.setElement(\n                template({\n                    content_item: folder_item,\n                    edit_mode: this.options.edit_mode,\n                    button_config: this.options.visibility_config\n                })\n            );\n            this.$el.show();\n            return this;\n        },\n\n        /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n        prepareButtons: function(folder) {\n            var vis_config = this.options.visibility_config;\n            if (this.options.edit_mode === false) {\n                vis_config.save_folder_btn = false;\n                vis_config.cancel_folder_btn = false;\n                if (folder.get(\"deleted\") === true) {\n                    vis_config.edit_folder_btn = false;\n                    vis_config.permission_folder_btn = false;\n                } else if (folder.get(\"deleted\") === false) {\n                    vis_config.save_folder_btn = false;\n                    vis_config.cancel_folder_btn = false;\n                    if (folder.get(\"can_modify\") === true) {\n                        vis_config.edit_folder_btn = true;\n                    }\n                    if (folder.get(\"can_manage\") === true) {\n                        vis_config.permission_folder_btn = true;\n                    }\n                }\n            } else if (this.options.edit_mode === true) {\n                vis_config.edit_folder_btn = false;\n                vis_config.permission_folder_btn = false;\n                vis_config.save_folder_btn = true;\n                vis_config.cancel_folder_btn = true;\n            }\n            this.options.visibility_config = vis_config;\n        },\n\n        /* Show the page with dataset details. */\n        showDatasetDetails: function() {\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({ id: this.id });\n        },\n\n        /* Undelete the dataset on server and render the row again. */\n        undeleteDataset: function(event) {\n            $(\".tooltip\").hide();\n            var that = this;\n            var dataset_id = $(event.target)\n                .closest(\"tr\")\n                .data(\"id\");\n            var dataset = Galaxy.libraries.folderListView.collection.get(dataset_id);\n            dataset.url = dataset.urlRoot + dataset.id + \"?undelete=true\";\n            dataset.destroy({\n                success: function(model, response) {\n                    Galaxy.libraries.folderListView.collection.remove(dataset_id);\n                    var updated_dataset = new mod_library_model.Item(response);\n                    Galaxy.libraries.folderListView.collection.add(updated_dataset);\n                    Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                    mod_toastr.success(\"Dataset undeleted. Click this to see it.\", \"\", {\n                        onclick: function() {\n                            var folder_id = that.model.get(\"folder_id\");\n                            window.location =\n                                Galaxy.root + \"library/list#folders/\" + folder_id + \"/datasets/\" + that.id;\n                        }\n                    });\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(\"Dataset was not undeleted. \" + response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured! Dataset was not undeleted. Please try again.\");\n                    }\n                }\n            });\n        },\n\n        /* Undelete the folder on server and render the row again. */\n        undeleteFolder: function(event) {\n            $(\".tooltip\").hide();\n            var that = this;\n            var folder_id = $(event.target)\n                .closest(\"tr\")\n                .data(\"id\");\n            var folder = Galaxy.libraries.folderListView.collection.get(folder_id);\n            folder.url = folder.urlRoot + folder.id + \"?undelete=true\";\n            folder.destroy({\n                success: function(model, response) {\n                    Galaxy.libraries.folderListView.collection.remove(folder_id);\n                    var updated_folder = new mod_library_model.FolderAsModel(response);\n                    Galaxy.libraries.folderListView.collection.add(updated_folder);\n                    Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                    mod_toastr.success(\"Folder undeleted.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(\"Folder was not undeleted. \" + response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured! Folder was not undeleted. Please try again.\");\n                    }\n                }\n            });\n        },\n\n        /* User clicked the 'edit' button on row so render the row as editable. */\n        startModifications: function() {\n            this.options.edit_mode = true;\n            this.repaint();\n        },\n\n        /* User clicked the 'cancel' button so render normal row */\n        cancelModifications: function() {\n            this.options.edit_mode = false;\n            this.repaint();\n        },\n\n        saveModifications: function() {\n            var folder = Galaxy.libraries.folderListView.collection.get(this.$el.data(\"id\"));\n            var is_changed = false;\n            var new_name = this.$el.find(\".input_folder_name\").val();\n            if (typeof new_name !== \"undefined\" && new_name !== folder.get(\"name\")) {\n                if (new_name.length > 2) {\n                    folder.set(\"name\", new_name);\n                    is_changed = true;\n                } else {\n                    mod_toastr.warning(\"Folder name has to be at least 3 characters long.\");\n                    return;\n                }\n            }\n            var new_description = this.$el.find(\".input_folder_description\").val();\n            if (typeof new_description !== \"undefined\" && new_description !== folder.get(\"description\")) {\n                folder.set(\"description\", new_description);\n                is_changed = true;\n            }\n            if (is_changed) {\n                var row_view = this;\n                folder.save(null, {\n                    patch: true,\n                    success: function(folder) {\n                        row_view.options.edit_mode = false;\n                        row_view.repaint(folder);\n                        mod_toastr.success(\"Changes to folder saved.\");\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occured while attempting to update the folder.\");\n                        }\n                    }\n                });\n            } else {\n                this.options.edit_mode = false;\n                this.repaint(folder);\n                mod_toastr.info(\"Nothing has changed.\");\n            }\n        },\n\n        repaint: function() {\n            /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n            $(\".tooltip\").hide();\n            /* we need to store the old element to be able to replace it with\n    new one */\n            var old_element = this.$el;\n            /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n            this.render();\n            old_element.replaceWith(this.$el);\n            /* now we attach new tooltips to the newly created row element */\n            this.$el.find(\"[data-toggle]\").tooltip();\n        },\n\n        templateRowFolder: function() {\n            return _.template(\n                [\n                    '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                    \"<td>\",\n                    '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                    \"</td>\",\n                    '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n                    \"<% if(!edit_mode) { %>\",\n                    \"<td>\",\n                    '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%- content_item.get(\"description\") %>',\n                    \"</td>\",\n                    \"<td></td>\",\n                    \"<% } else if(edit_mode){ %>\",\n                    '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n                    '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n                    \"<% } %>\",\n                    \"<td>folder</td>\",\n                    \"<td>\",\n                    '<%= _.escape(content_item.get(\"update_time\")) %>',\n                    \"</td>\",\n                    \"<td></td>\",\n                    \"<td>\",\n                    \"<% if(edit_mode) { %>\", // start edit mode\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                    '<span class=\"fa fa-floppy-o\"/> Save',\n                    \"</button>\",\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                    '<span class=\"fa fa-times\"/> Cancel',\n                    \"</button>\",\n                    \"<% } else if (!edit_mode){%>\", // start no edit mode\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                    '<span class=\"fa fa-pencil\"/> Edit',\n                    \"</button>\",\n                    '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                    '<span class=\"fa fa-group\"/> Manage',\n                    \"</button>\",\n                    \"</a>\",\n                    \"<% } %>\", //end no edit mode\n                    \"</td>\",\n                    \"</tr>\"\n                ].join(\"\")\n            );\n        },\n\n        templateRowFile: function() {\n            return _.template(\n                [\n                    '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                    \"<td>\",\n                    '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                    \"</td>\",\n                    '<td style=\"text-align: center; \">',\n                    '<input style=\"margin: 0;\" type=\"checkbox\">',\n                    \"</td>\",\n                    \"<td>\",\n                    '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n                    '<%- content_item.get(\"name\") %>',\n                    \"<a>\",\n                    \"</td>\",\n                    '<td><%- content_item.get(\"message\") %></td>',\n                    '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n                    '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n                    '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n                    \"<td>\",\n                    '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                    '<%= _.escape(content_item.get(\"state\")) %>',\n                    \"<% } %>\",\n                    \"</td>\",\n                    \"<td>\",\n                    '<% if (content_item.get(\"is_unrestricted\")) { %>',\n                    '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n                    \"<% } %>\",\n                    '<% if (content_item.get(\"is_private\")) { %>',\n                    '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n                    \"<% } %>\",\n                    '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n                    '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n                    \"<% } %>\",\n                    '<% if (content_item.get(\"can_manage\")) { %>',\n                    '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Permissions of \\'<%- content_item.get(\"name\") %>\\'\">',\n                    '<span class=\"fa fa-group\"/> Manage',\n                    \"</button>\",\n                    \"</a>\",\n                    \"<% } %>\",\n                    \"</td>\",\n                    \"</tr>\"\n                ].join(\"\")\n            );\n        },\n\n        templateRowDeletedFile: function() {\n            return _.template(\n                [\n                    '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n                    \"<td>\",\n                    '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                    \"</td>\",\n                    \"<td></td>\",\n                    '<td style=\"color:grey;\">',\n                    '<%- content_item.get(\"name\") %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%- content_item.get(\"message\") %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%= _.escape(content_item.get(\"file_ext\")) %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%= _.escape(content_item.get(\"file_size\")) %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%= _.escape(content_item.get(\"update_time\")) %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<% if ( content_item.get(\"state\") !== \"ok\" ) { %>',\n                    '<%= _.escape(content_item.get(\"state\")) %>',\n                    \"<% } %>\",\n                    \"</td>\",\n                    \"<td>\",\n                    '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                    '<span class=\"fa fa-unlock\"/> Undelete',\n                    \"</button>\",\n                    \"</td>\",\n                    \"</tr>\"\n                ].join(\"\")\n            );\n        },\n\n        templateRowDeletedFolder: function() {\n            return _.template(\n                [\n                    '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n                    \"<td>\",\n                    '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                    \"</td>\",\n                    \"<td></td>\",\n                    '<td style=\"color:grey;\">',\n                    '<%- content_item.get(\"name\") %>',\n                    \"</td>\",\n                    \"<td>\",\n                    '<%- content_item.get(\"description\") %>',\n                    \"</td>\",\n                    \"<td>\",\n                    \"folder\",\n                    \"</td>\",\n                    \"<td></td>\",\n                    \"<td>\",\n                    '<%= _.escape(content_item.get(\"update_time\")) %>',\n                    \"</td>\",\n                    \"<td></td>\",\n                    \"<td>\",\n                    '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                    '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                    '<span class=\"fa fa-unlock\"/> Undelete',\n                    \"</button>\",\n                    \"</td>\",\n                    \"</tr>\"\n                ].join(\"\")\n            );\n        }\n    });\n\n    return {\n        FolderRowView: FolderRowView\n    };\n});\n"]}