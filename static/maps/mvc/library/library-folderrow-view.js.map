{"version":3,"sources":["mvc/library/library-folderrow-view.js"],"names":["define","FolderRowView","events","mod_toastr","mod_library_model","mod_library_dataset_view","Backbone","View","extend","click .undelete_dataset_btn","click .undelete_folder_btn","click .edit_folder_btn","defaults","type","save_folder_btn","cancel_folder_btn","permission_folder_btn","edit_folder_btn","edit_mode","_","initialize","options","this","render","folder_item","model","template","prepareButtons","vis_config","get","templateRowFolder","templateRowDeletedFile","templateRowFile","Galaxy","error","setElement","button_config","emit","folder","visibility_config","datasetView","dataset_id","event","closest","dataset","folderListView","url","destroy","libraries","success","onclick","LibraryDatasetView","id","$","hide","target","data","collection","urlRoot","undeleteFolder","response","remove","add","updated_folder","responseJSON","folder_id","that","window","location","root","err_msg","is_changed","new_name","length","set","new_description","find","FolderAsModel","save","row_view","sortByNameAsc","repaint","cancelModifications","saveModifications","tooltip","$el","val","join","warning","patch","info","old_element","replaceWith","templateRowDeletedFolder"],"mappings":"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,gDACA,QACA,mFACA,yBACA,OACA,gFACA,QACA,OACA,yCACA,QACA,8BACA,oIACA,yJACA,UACA,kBACA,YACA,OACA,mDACA,QACA,OACA,wBACA,4NACA,iCACA,aACA,YACA,mOACA,8BACA,eACA,YACA,+BACA,0PACA,+BACA,YACA,0DACA,wPACA,8BACA,YACA,OACA,UACA,QACA,SACF6D,KAAK,MAIfvD,gBAAiB,WACb,OAAOb,EAAEO,UAED,8EACA,OACA,+CACA,QACA,oCACA,6CACA,QACA,OACA,mHACA,kCACA,MACA,QACA,8CACA,yDACA,0DACA,4DACA,OACA,mDACA,gIACA,UACA,8CACA,yHACA,UACA,6GACA,+HACA,UACA,8CACA,uGACA,uIACA,8BACA,YACA,OACA,UACA,QACA,SACF6D,KAAK,MAIfxD,uBAAwB,WACpB,OAAOZ,EAAEO,UAED,mFACA,OACA,+CACA,QACA,YACA,2BACA,kCACA,QACA,OACA,qCACA,QACA,OACA,gDACA,QACA,OACA,iDACA,QACA,OACA,mDACA,QACA,OACA,wHACA,iMACA,+BACA,iBACA,YACA,QACA,SACF6D,KAAK,MAIfM,yBAA0B,WACtB,OAAO1E,EAAEO,UAED,wFACA,OACA,gDACA,QACA,YACA,2BACA,kCACA,QACA,OACA,yCACA,QACA,OACA,SACA,QACA,YACA,OACA,mDACA,QACA,OACA,wHACA,gMACA,+BACA,iBACA,YACA,QACA,SACF6D,KAAK","file":"../../../scripts/mvc/library/library-folderrow-view.js","sourcesContent":["define(\n    [\n        \"libs/toastr\",\n        \"mvc/library/library-model\",\n        \"mvc/library/library-dataset-view\"\n    ],\n    function(mod_toastr, mod_library_model, mod_library_dataset_view) {\n        var FolderRowView = Backbone.View.extend({\n            events: {\n                \"click .undelete_dataset_btn\": \"undeleteDataset\",\n                \"click .undelete_folder_btn\": \"undeleteFolder\",\n                \"click .edit_folder_btn\": \"startModifications\",\n                \"click .cancel_folder_btn\": \"cancelModifications\",\n                \"click .save_folder_btn\": \"saveModifications\"\n            },\n\n            defaults: {\n                type: null,\n                visibility_config: {\n                    edit_folder_btn: true,\n                    save_folder_btn: false,\n                    cancel_folder_btn: false,\n                    permission_folder_btn: true\n                },\n                edit_mode: false\n            },\n\n            initialize: function(options) {\n                this.options = _.defaults(options || {}, this.defaults);\n                this.render(this.options);\n            },\n\n            render: function(options) {\n                this.options = _.extend(this.options, options);\n                var folder_item = this.options.model;\n                var template = null;\n\n                if (\n                    folder_item.get(\"type\") === \"folder\" ||\n                    folder_item.get(\"model_class\") === \"LibraryFolder\"\n                ) {\n                    this.options.type = \"folder\";\n                    this.prepareButtons(folder_item);\n                    if (folder_item.get(\"deleted\")) {\n                        template = this.templateRowDeletedFolder();\n                    } else {\n                        template = this.templateRowFolder();\n                    }\n                } else if (\n                    folder_item.get(\"type\") === \"file\" ||\n                    folder_item.get(\"model_class\") ===\n                        \"LibraryDatasetDatasetAssociation\" ||\n                    folder_item.get(\"model_class\") === \"LibraryDataset\"\n                ) {\n                    this.options.type = \"file\";\n                    if (folder_item.get(\"deleted\")) {\n                        template = this.templateRowDeletedFile();\n                    } else {\n                        template = this.templateRowFile();\n                    }\n                } else {\n                    Galaxy.emit.error(\"Unknown library item type found.\");\n                    Galaxy.emit.error(\n                        folder_item.get(\"type\") ||\n                            folder_item.get(\"model_class\")\n                    );\n                }\n                this.setElement(\n                    template({\n                        content_item: folder_item,\n                        edit_mode: this.options.edit_mode,\n                        button_config: this.options.visibility_config\n                    })\n                );\n                this.$el.show();\n                return this;\n            },\n\n            /**\n   * Modify the visibility of buttons for\n   * the filling of the row template of a given folder.\n   */\n            prepareButtons: function(folder) {\n                var vis_config = this.options.visibility_config;\n                if (this.options.edit_mode === false) {\n                    vis_config.save_folder_btn = false;\n                    vis_config.cancel_folder_btn = false;\n                    if (folder.get(\"deleted\") === true) {\n                        vis_config.edit_folder_btn = false;\n                        vis_config.permission_folder_btn = false;\n                    } else if (folder.get(\"deleted\") === false) {\n                        vis_config.save_folder_btn = false;\n                        vis_config.cancel_folder_btn = false;\n                        if (folder.get(\"can_modify\") === true) {\n                            vis_config.edit_folder_btn = true;\n                        }\n                        if (folder.get(\"can_manage\") === true) {\n                            vis_config.permission_folder_btn = true;\n                        }\n                    }\n                } else if (this.options.edit_mode === true) {\n                    vis_config.edit_folder_btn = false;\n                    vis_config.permission_folder_btn = false;\n                    vis_config.save_folder_btn = true;\n                    vis_config.cancel_folder_btn = true;\n                }\n                this.options.visibility_config = vis_config;\n            },\n\n            /* Show the page with dataset details. */\n            showDatasetDetails: function() {\n                Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView(\n                    { id: this.id }\n                );\n            },\n\n            /* Undelete the dataset on server and render the row again. */\n            undeleteDataset: function(event) {\n                $(\".tooltip\").hide();\n                var that = this;\n                var dataset_id = $(event.target)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                var dataset = Galaxy.libraries.folderListView.collection.get(\n                    dataset_id\n                );\n                dataset.url = `${dataset.urlRoot + dataset.id}?undelete=true`;\n                dataset.destroy({\n                    success: function(model, response) {\n                        Galaxy.libraries.folderListView.collection.remove(\n                            dataset_id\n                        );\n                        var updated_dataset = new mod_library_model.Item(\n                            response\n                        );\n                        Galaxy.libraries.folderListView.collection.add(\n                            updated_dataset\n                        );\n                        Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                        mod_toastr.success(\n                            \"Dataset undeleted. Click this to see it.\",\n                            \"\",\n                            {\n                                onclick: function() {\n                                    var folder_id = that.model.get(\"folder_id\");\n                                    window.location = `${Galaxy.root}library/list#folders/${folder_id}/datasets/${that.id}`;\n                                }\n                            }\n                        );\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                `Dataset was not undeleted. ${response\n                                    .responseJSON.err_msg}`\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occured! Dataset was not undeleted. Please try again.\"\n                            );\n                        }\n                    }\n                });\n            },\n\n            /* Undelete the folder on server and render the row again. */\n            undeleteFolder: function(event) {\n                $(\".tooltip\").hide();\n                var that = this;\n                var folder_id = $(event.target)\n                    .closest(\"tr\")\n                    .data(\"id\");\n                var folder = Galaxy.libraries.folderListView.collection.get(\n                    folder_id\n                );\n                folder.url = `${folder.urlRoot + folder.id}?undelete=true`;\n                folder.destroy({\n                    success: function(model, response) {\n                        Galaxy.libraries.folderListView.collection.remove(\n                            folder_id\n                        );\n                        var updated_folder = new mod_library_model.FolderAsModel(\n                            response\n                        );\n                        Galaxy.libraries.folderListView.collection.add(\n                            updated_folder\n                        );\n                        Galaxy.libraries.folderListView.collection.sortByNameAsc();\n                        mod_toastr.success(\"Folder undeleted.\");\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                `Folder was not undeleted. ${response\n                                    .responseJSON.err_msg}`\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occured! Folder was not undeleted. Please try again.\"\n                            );\n                        }\n                    }\n                });\n            },\n\n            /* User clicked the 'edit' button on row so render the row as editable. */\n            startModifications: function() {\n                this.options.edit_mode = true;\n                this.repaint();\n            },\n\n            /* User clicked the 'cancel' button so render normal row */\n            cancelModifications: function() {\n                this.options.edit_mode = false;\n                this.repaint();\n            },\n\n            saveModifications: function() {\n                var folder = Galaxy.libraries.folderListView.collection.get(\n                    this.$el.data(\"id\")\n                );\n                var is_changed = false;\n                var new_name = this.$el.find(\".input_folder_name\").val();\n                if (\n                    typeof new_name !== \"undefined\" &&\n                    new_name !== folder.get(\"name\")\n                ) {\n                    if (new_name.length > 2) {\n                        folder.set(\"name\", new_name);\n                        is_changed = true;\n                    } else {\n                        mod_toastr.warning(\n                            \"Folder name has to be at least 3 characters long.\"\n                        );\n                        return;\n                    }\n                }\n                var new_description = this.$el\n                    .find(\".input_folder_description\")\n                    .val();\n                if (\n                    typeof new_description !== \"undefined\" &&\n                    new_description !== folder.get(\"description\")\n                ) {\n                    folder.set(\"description\", new_description);\n                    is_changed = true;\n                }\n                if (is_changed) {\n                    var row_view = this;\n                    folder.save(null, {\n                        patch: true,\n                        success: function(folder) {\n                            row_view.options.edit_mode = false;\n                            row_view.repaint(folder);\n                            mod_toastr.success(\"Changes to folder saved.\");\n                        },\n                        error: function(model, response) {\n                            if (typeof response.responseJSON !== \"undefined\") {\n                                mod_toastr.error(response.responseJSON.err_msg);\n                            } else {\n                                mod_toastr.error(\n                                    \"An error occured while attempting to update the folder.\"\n                                );\n                            }\n                        }\n                    });\n                } else {\n                    this.options.edit_mode = false;\n                    this.repaint(folder);\n                    mod_toastr.info(\"Nothing has changed.\");\n                }\n            },\n\n            repaint: function() {\n                /* need to hide manually because of the element removal in setElement\n    invoked in render() */\n                $(\".tooltip\").hide();\n                /* we need to store the old element to be able to replace it with\n    new one */\n                var old_element = this.$el;\n                /* if user canceled the folder param is undefined,\n      if user saved and succeeded the updated folder is rendered */\n                this.render();\n                old_element.replaceWith(this.$el);\n                /* now we attach new tooltips to the newly created row element */\n                this.$el.find(\"[data-toggle]\").tooltip();\n            },\n\n            templateRowFolder: function() {\n                return _.template(\n                    [\n                        '<tr class=\"folder_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                        \"</td>\",\n                        '<td style=\"text-align: center; \"><input style=\"margin: 0;\" type=\"checkbox\"></td>',\n                        \"<% if(!edit_mode) { %>\",\n                        \"<td>\",\n                        '<a href=\"#folders/<%- content_item.id %>\"><%- content_item.get(\"name\") %></a>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"description\") %>',\n                        \"</td>\",\n                        \"<% } else if(edit_mode){ %>\",\n                        '<td><textarea rows=\"4\" class=\"form-control input_folder_name\" placeholder=\"name\" ><%- content_item.get(\"name\") %></textarea></td>',\n                        '<td><textarea rows=\"4\" class=\"form-control input_folder_description\" placeholder=\"description\" ><%- content_item.get(\"description\") %></textarea></td>',\n                        \"<% } %>\",\n                        \"<td>folder</td>\",\n                        \"<td></td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        \"<% if(edit_mode) { %>\", // start edit mode\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save changes\" class=\"primary-button btn-xs save_folder_btn\" type=\"button\" style=\"<% if(button_config.save_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-floppy-o\"/>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Discard changes\" class=\"primary-button btn-xs cancel_folder_btn\" type=\"button\" style=\"<% if(button_config.cancel_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-times\"/>',\n                        \"&nbsp;Cancel\",\n                        \"</button>\",\n                        \"<% } else if (!edit_mode){%>\", // start no edit mode\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify \\'<%- content_item.get(\"name\") %>\\'\" class=\"primary-button btn-xs edit_folder_btn\" type=\"button\" style=\"<% if(button_config.edit_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-pencil\"/>',\n                        \"</button>\",\n                        '<a href=\"#/folders/<%- content_item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permission_folder_btn\" title=\"Manage \\'<%- content_item.get(\"name\") %>\\'\" style=\"<% if(button_config.permission_folder_btn === false) { print(\"display:none;\") } %>\">',\n                        '<span class=\"fa fa-group\"/>',\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\", //end no edit mode\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowFile: function() {\n                return _.template(\n                    [\n                        '<tr class=\"dataset_row light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                        \"</td>\",\n                        '<td style=\"text-align: center; \">',\n                        '<input style=\"margin: 0;\" type=\"checkbox\">',\n                        \"</td>\",\n                        \"<td>\",\n                        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>\" class=\"library-dataset\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"<a>\",\n                        \"</td>\",\n                        '<td><%- content_item.get(\"message\") %></td>',\n                        '<td><%= _.escape(content_item.get(\"file_ext\")) %></td>',\n                        '<td><%= _.escape(content_item.get(\"file_size\")) %></td>',\n                        '<td><%= _.escape(content_item.get(\"update_time\")) %></td>',\n                        \"<td>\",\n                        '<% if (content_item.get(\"is_unrestricted\")) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Unrestricted dataset\" style=\"color:grey;\" class=\"fa fa-globe fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if (content_item.get(\"is_private\")) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Private dataset\" style=\"color:grey;\" class=\"fa fa-key fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if ((content_item.get(\"is_unrestricted\") === false) && (content_item.get(\"is_private\") === false)) { %>',\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restricted dataset\" style=\"color:grey;\" class=\"fa fa-shield fa-lg\"/>',\n                        \"<% } %>\",\n                        '<% if (content_item.get(\"can_manage\")) { %>',\n                        '<a href=\"#folders/<%- content_item.get(\"folder_id\") %>/datasets/<%- content_item.id %>/permissions\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" class=\"primary-button btn-xs permissions-dataset-btn\" title=\"Manage permissions\">',\n                        '<span class=\"fa fa-group\"/>',\n                        \"</button>\",\n                        \"</a>\",\n                        \"<% } %>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowDeletedFile: function() {\n                return _.template(\n                    [\n                        '<tr class=\"active deleted_dataset library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Dataset\" class=\"fa fa-file-o\"/>',\n                        \"</td>\",\n                        \"<td></td>\",\n                        '<td style=\"color:grey;\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"message\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"file_ext\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"file_size\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_dataset_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                        '<span class=\"fa fa-unlock\"/>',\n                        \"&nbsp;Undelete\",\n                        \"</button>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            },\n\n            templateRowDeletedFolder: function() {\n                return _.template(\n                    [\n                        '<tr class=\"active deleted_folder light library-row\" data-id=\"<%- content_item.id %>\">',\n                        \"<td>\",\n                        '<span title=\"Folder\" class=\"fa fa-folder-o\"/>',\n                        \"</td>\",\n                        \"<td></td>\",\n                        '<td style=\"color:grey;\">',\n                        '<%- content_item.get(\"name\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<%- content_item.get(\"description\") %>',\n                        \"</td>\",\n                        \"<td>\",\n                        \"folder\",\n                        \"</td>\",\n                        \"<td></td>\",\n                        \"<td>\",\n                        '<%= _.escape(content_item.get(\"update_time\")) %>',\n                        \"</td>\",\n                        \"<td>\",\n                        '<span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Marked deleted\" style=\"color:grey;\" class=\"fa fa-ban fa-lg\"/>',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Undelete <%- content_item.get(\"name\") %>\" class=\"primary-button btn-xs undelete_folder_btn\" type=\"button\" style=\"margin-left:1em;\">',\n                        '<span class=\"fa fa-unlock\"/>',\n                        \"&nbsp;Undelete\",\n                        \"</button>\",\n                        \"</td>\",\n                        \"</tr>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            FolderRowView: FolderRowView\n        };\n    }\n);\n"]}