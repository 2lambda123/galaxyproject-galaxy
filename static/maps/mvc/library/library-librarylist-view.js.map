{"version":3,"sources":["mvc/library/library-librarylist-view.js"],"names":["define","mod_toastr","mod_library_libraryrow_view","el","LibraryListView","Backbone","View","extend","events","defaults","all_fetched","page_count","show_page","initialize","modal","options","this","_","that","collection","success","mod_library_model","Libraries","render","urlRoot","fetch","error","model","response","responseJSON","err_msg","template","libraries_to_render","models","is_public","templateLibraryList","hide","$","sortLibraries","deleted","where","Galaxy","libraries","preferences","get","is_deleted","filter","total_libraries_count","page_start","slice","libraries_shown","length","search_term","libraryToolbarView","renderRows","order","tooltip","renderPaginator","fetchDeleted","url","remove","i","library","renderOne","rowView","LibraryRowView","$el","find","append","sort_clicked","sortByNameAsc","set","sort_order","searchLibraries","trimmed_term","trim","results","search","searching","join"],"mappings":"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","file":"../../../scripts/mvc/library/library-librarylist-view.js","sourcesContent":["define([\"libs/toastr\", \"mvc/library/library-model\", \"mvc/library/library-libraryrow-view\", \"libs/underscore\"], function(\n    mod_toastr,\n    mod_library_model,\n    mod_library_libraryrow_view,\n    _\n) {\n    var LibraryListView = Backbone.View.extend({\n        el: \"#libraries_element\",\n\n        events: {\n            \"click .sort-libraries-link\": \"sort_clicked\"\n        },\n\n        defaults: {\n            page_count: null,\n            show_page: null,\n            all_fetched: false\n        },\n\n        /**\n     * Initialize and fetch the libraries from server.\n     * Async render afterwards.\n     * @param  {object} options an object with options\n     */\n        initialize: function(options) {\n            this.options = _.defaults(this.options || {}, options, this.defaults);\n            var that = this;\n            this.modal = null;\n            // collection of {Item}s\n            this.collection = new mod_library_model.Libraries();\n            this.collection.url = this.collection.urlRoot + \"?deleted=false\";\n            this.collection.fetch({\n                success: function() {\n                    that.render();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        },\n\n        /**\n     * Render the libraries table either from the object's own collection,\n     * or from a given array of library models,\n     * or render an empty list in case no data is given.\n     */\n        render: function(options) {\n            this.options = _.extend(this.options, options);\n            this.setElement(\"#libraries_element\");\n            var template = this.templateLibraryList();\n            var libraries_to_render = null;\n            var models = null;\n            var is_public = function(model) {\n                return model.get(\"public\") === true;\n            };\n            $(\".tooltip\").hide();\n            if (typeof options !== \"undefined\") {\n                models = typeof options.models !== \"undefined\" ? options.models : null;\n            }\n            if (this.collection !== null && models === null) {\n                this.sortLibraries();\n                if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                    libraries_to_render = this.collection.models;\n                } else {\n                    libraries_to_render = this.collection.where({\n                        deleted: false\n                    });\n                }\n                if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                    libraries_to_render = _.filter(libraries_to_render, is_public);\n                }\n            } else if (models !== null) {\n                if (Galaxy.libraries.preferences.get(\"with_deleted\")) {\n                    libraries_to_render = models;\n                } else {\n                    var is_deleted = function(model) {\n                        return model.get(\"deleted\") === false;\n                    };\n                    libraries_to_render = _.filter(models, is_deleted);\n                }\n                if (Galaxy.libraries.preferences.get(\"without_restricted\")) {\n                    libraries_to_render = _.filter(libraries_to_render, is_public);\n                }\n            } else {\n                libraries_to_render = [];\n            }\n\n            // pagination\n            if (this.options.show_page === null || this.options.show_page < 1) {\n                this.options.show_page = 1;\n            }\n            this.options.total_libraries_count = libraries_to_render.length;\n            var page_start = Galaxy.libraries.preferences.get(\"library_page_size\") * (this.options.show_page - 1);\n            this.options.page_count = Math.ceil(\n                this.options.total_libraries_count / Galaxy.libraries.preferences.get(\"library_page_size\")\n            );\n            if (this.options.total_libraries_count > 0 && page_start < this.options.total_libraries_count) {\n                libraries_to_render = libraries_to_render.slice(\n                    page_start,\n                    page_start + Galaxy.libraries.preferences.get(\"library_page_size\")\n                );\n                this.options.libraries_shown = libraries_to_render.length;\n                // User requests page with no libraries\n                if (\n                    Galaxy.libraries.preferences.get(\"library_page_size\") * this.options.show_page >\n                    this.options.total_libraries_count + Galaxy.libraries.preferences.get(\"library_page_size\")\n                ) {\n                    libraries_to_render = [];\n                }\n                this.$el.html(\n                    template({\n                        length: 1,\n                        order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                        search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                    })\n                );\n                Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n                this.renderRows(libraries_to_render);\n            } else {\n                this.$el.html(\n                    template({\n                        length: 0,\n                        order: Galaxy.libraries.preferences.get(\"sort_order\"),\n                        search_term: Galaxy.libraries.libraryToolbarView.options.search_term\n                    })\n                );\n                Galaxy.libraries.libraryToolbarView.renderPaginator(this.options);\n            }\n            $(\"#center [data-toggle]\").tooltip();\n            $(\"#center\").css(\"overflow\", \"auto\");\n        },\n\n        fetchDeleted: function() {\n            if (this.options.all_fetched) {\n                this.render();\n            } else {\n                var that = this;\n                this.collection.url = this.collection.urlRoot + \"?deleted=true\";\n                this.collection.fetch({\n                    remove: false,\n                    success: function() {\n                        that.options.all_fetched = true;\n                        that.render();\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(response.responseJSON.err_msg);\n                        } else {\n                            mod_toastr.error(\"An error occurred.\");\n                        }\n                    }\n                });\n            }\n        },\n\n        /**\n     * Render all given models as rows in the library list\n     * @param  {array} libraries_to_render array of library models to render\n     */\n        renderRows: function(libraries_to_render) {\n            for (var i = 0; i < libraries_to_render.length; i++) {\n                var library = libraries_to_render[i];\n                this.renderOne({ library: library });\n            }\n        },\n\n        /**\n     * Create a view for the given model and add it to the libraries view.\n     * @param {Library} model of the view that will be rendered\n     */\n        renderOne: function(options) {\n            var library = options.library;\n            var rowView = new mod_library_libraryrow_view.LibraryRowView(library);\n            this.$el.find(\"#library_list_body\").append(rowView.el);\n        },\n\n        /**\n     * Table heading was clicked, update sorting preferences and re-render.\n     * @return {[type]} [description]\n     */\n        sort_clicked: function() {\n            if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                Galaxy.libraries.preferences.set({ sort_order: \"desc\" });\n            } else {\n                Galaxy.libraries.preferences.set({ sort_order: \"asc\" });\n            }\n            this.render();\n        },\n\n        /**\n     * Sort the underlying collection according to the parameters received.\n     * Currently supports only sorting by name.\n     */\n        sortLibraries: function() {\n            if (Galaxy.libraries.preferences.get(\"sort_by\") === \"name\") {\n                if (Galaxy.libraries.preferences.get(\"sort_order\") === \"asc\") {\n                    this.collection.sortByNameAsc();\n                } else if (Galaxy.libraries.preferences.get(\"sort_order\") === \"desc\") {\n                    this.collection.sortByNameDesc();\n                }\n            }\n        },\n\n        /**\n     * In case the search_term is not empty perform the search and render\n     * the result. Render all visible libraries otherwise.\n     * @param  {string} search_term string to search for\n     */\n        searchLibraries: function(search_term) {\n            var trimmed_term = $.trim(search_term);\n            if (trimmed_term !== \"\") {\n                var results = null;\n                results = this.collection.search(search_term);\n                this.options.searching = true;\n                this.render({ models: results, show_page: 1 });\n            } else {\n                this.options.searching = false;\n                this.render();\n            }\n        },\n\n        // MMMMMMMMMMMMMMMMMM\n        // === TEMPLATES ====\n        // MMMMMMMMMMMMMMMMMM\n\n        templateLibraryList: function() {\n            return _.template(\n                [\n                    '<div class=\"library_container table-responsive\">',\n                    \"<% if(length === 0) { %>\",\n                    \"<% if(search_term.length > 0) { %>\",\n                    \"<div>\",\n                    \"There are no libraries matching your search. Try different keyword.\",\n                    \"</div>\",\n                    \"<% } else{ %>\",\n                    \"<div>\",\n                    \"There are no libraries visible to you here. If you expected some to show up please consult the\",\n                    ' <a href=\"https://galaxyproject.org/data-libraries/#permissions\" target=\"_blank\">library security wikipage</a>',\n                    ' or visit the <a href=\"https://biostar.usegalaxy.org/\" target=\"_blank\">Galaxy support site</a>.',\n                    \"</div>\",\n                    \"<% }%>\",\n                    \"<% } else{ %>\",\n                    '<table class=\"grid table table-condensed\">',\n                    \"<thead>\",\n                    '<th style=\"width:30%;\">',\n                    '<a class=\"sort-libraries-link\" title=\"Click to reverse order\" href=\"#\">',\n                    \"name\",\n                    \"</a>\",\n                    '<span title=\"Sorted alphabetically\" class=\"fa fa-sort-alpha-<%- order %>\"/>',\n                    \"</th>\",\n                    '<th style=\"width:22%;\">description</th>',\n                    '<th style=\"width:22%;\">synopsis</th> ',\n                    '<th style=\"width:26%;\"></th>',\n                    \"</thead>\",\n                    '<tbody id=\"library_list_body\">',\n                    // library item views will attach here\n                    \"</tbody>\",\n                    \"</table>\",\n                    \"<% }%>\",\n                    \"</div>\"\n                ].join(\"\")\n            );\n        }\n    });\n\n    return {\n        LibraryListView: LibraryListView\n    };\n});\n"]}