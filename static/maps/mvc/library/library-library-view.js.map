{"version":3,"sources":["mvc/library/library-library-view.js"],"names":["define","mod_toastr","mod_library_model","mod_select","LibraryView","Backbone","View","extend","el","model","options","events","click .toolbtn_save_permissions","initialize","this","id","fetchLibrary","Library","that","fetch","success","show_permissions","showPermissions","error","response","responseJSON","onclick","err_msg","Galaxy","libraries","library_router","back","is_unrestricted","_","$","remove","undefined","user","fetched_permissions","access_library_role_list","templateLibraryPermissions","set","is_admin","isAdmin","template","$el","html","library","self","_serializeRoles","selected_roles","prepareSelectBoxes","selected_add_item_roles","tooltip","selected_modify_library_roles","addSelectObject","role_list","modifySelectObject","manageSelectObject","push","i","select_options","multiple","placeholder","container","ajax","dataType","quietMillis","add_library_item_role_list","page_limit","page","manage_library_role_list","results","modify_library_role_list","accessSelectObject","data","more","_createSelectOptions","formatResult","selected_access_library_roles","initSelection","split","name","selected_manage_library_roles","initialData","dropdownCssClass","is_library_access","fail","minimumInputLength","css","removeDatasetRestrictions","find","term","q","ids_list","roles_list","total","roles","role","access_ids","_extractIds","modify_ids","element","callback","val","each","item","makeDatasetPrivate","post","root","done","length","savePermissions","event","select2","add_ids","manage_ids","access_ids[]","add_ids[]","manage_ids[]","modify_ids[]","join"],"mappings":"aAAAA,QACK,cAAe,4BAA6B,oBADjDA,SACKC,EAAeC,EAAAC,GAgXZ,OACIC,YA/WcC,SAAAC,KAAcC,QACxBC,GAAA,UAEJC,MAHmC,KAKnCC,WAEAC,QACIC,kCAAmC,mBAGvCC,WAAY,SAAAH,GACRI,KAAKJ,QAAYH,EAAAA,OAAOO,KAAKJ,QAASA,GAClCI,KAAKJ,QAAYK,IACjBD,KAAKE,gBAIbA,aAAc,SAAAN,GACVI,KAAKJ,QAAYH,EAAAA,OAAOO,KAAKJ,QAASA,GACtCI,KAAKL,MAAYP,IAAAA,EAAkBe,SAC3BF,GAAAD,KAAKJ,QAAQK,KAEjBG,IAAAA,EAAJJ,KACAA,KAAKL,MAAMU,OACPC,QAAS,WACDF,EAAKR,QAAQW,kBACbH,EAAKI,mBAGbC,MAAO,SAAAd,EAAAe,QACkC,IAA1BA,EAASC,aAChBxB,EAAWsB,MAIHG,EAASD,aAAWE,QAJ5B1B,0BAKY2B,IALZF,QAAA,WASGE,OAAAC,UAAAC,eAAAC,UACH9B,EAAAsB,MASH,4CACJ,IApD0BG,QAAA,WA+CPE,OAAOC,UAAUC,eAAeC,cAoBhDT,gBAAKb,SAAYuB,GACpBlB,KAAAJ,QAAAuB,EAAA1B,OAAAO,KAAAJ,QAAAA,GACJwB,EAAA,YAAAC,cAEgBC,IAAbR,KAAOS,QAAMC,sBAGjB,IADCxB,KAAAJ,QAAA4B,oBACcC,yBAAKC,OATZ1B,KAAKL,MAAMgC,KAAMT,iBAAiB,IAgBnCJ,KADPnB,MAAAgC,KAAAT,iBAAA,KAIgC,IAAxBU,GAAA,EAIEd,OAAAS,OACFpC,EAAWsB,OACPc,KAAAM,WAhBZ,IAAIC,EAAW9B,KAAK0B,6BAoBlB1B,KAAA+B,IAAAC,KACFF,GAAAG,QAAAjC,KAAAL,MAAAiC,SAAAA,KAhBA,IAAIM,EAAOlC,KAoBfmC,EAAAA,IACQC,OAAAA,KADRD,iBACID,EAAAjC,GADJkC,8BAGQC,KAAAA,SAAAZ,GAGHU,EAAAG,oBACMD,oBAAPZ,MAGJa,KAAAA,WACIlD,EAAesB,MACXe,sEAMAc,EAAAA,yBAA0BC,UAM1BC,EAAAA,WAAAA,IAAAA,WAAAA,SAYJN,gBAAKO,SAAkBC,GAgBvBR,IAAKS,IARAC,KAQAD,EAAAA,EAAAA,EAALD,EAA8BrD,OAAWG,IAvJV4C,EAAAS,KAuGpBH,EAAUI,GAAG,GAvGO,IAuGDJ,EAAUI,GAAG,IAkEvCC,OAAAA,GAGAC,mBAHiB,SAAApD,GAIjBqD,KAAAA,QAAa9B,EAAA1B,OAAAO,KAAAJ,QAJIA,GAKjBsD,IAAAA,EAAWlD,KAAkBC,QALZuB,oBAMjB2B,EAAMnD,KAGFoD,EAHEpD,KAAAmC,gBAIFkB,EAJE5B,0BAMEa,EAAAtC,KAAAmC,gBACAX,EAAO8B,4BAEHC,EAAgBvD,KAAAmC,gBAChBqB,EAAWC,0BAElBjB,EAZCxC,KAAAmC,gBAaFuB,EAASC,0BAGLzB,EAAA0B,mBAAkBC,IAAAA,EAAYC,KACjC9D,KAAA+D,qBAvBY/D,KAyBjBgE,cACIC,GA1Ba,IA8Bb/B,EAAAO,gBAAA,IAAApD,EAAAG,KA9BaQ,KAAA+D,qBAgCjBG,KACI,WACA5B,GACA,IAGIJ,EAAAU,mBAAgBuB,IAAM9E,EAAtBG,KACAqE,KAAAA,qBACI5D,KACAmE,cAFMC,GAFd,IASJnC,EAAAS,mBAAA,IAAAtD,EAAAG,KACA8E,KAAAA,qBACAC,KAhDJ,cAdQ/B,GAiEDO,KAKP3B,qBAAA,SAIQc,EACAA,EACIV,EADiBgD,GAV7B,OAiBKC,GAEO,IADJtF,GACIqF,GA/OmBE,mBAAA,EA2K3BC,IAAK1E,EAyEb2E,UAAAA,EACQ1C,YAAJ,yBAEOpB,UADPoB,EAAAH,IAAA8C,KAAA,IAAA5E,GAIQiC,MACK1B,IACDgB,OAAAA,KADChB,iBACoBgB,EAAAA,GADpBhB,kDACoBgB,EADzB4B,SAAA,OAGAjE,YACI,IAGF0E,KAAA,SAAWiB,EAAAtB,GAZrB,OAtP+BuB,EAAAD,EAwLfvB,WAAY,GAiFnBC,KAAAA,IAGLwB,QAAcC,SAAApB,EAAdL,GACH,IAAAM,EAAA,GAAAN,EAAAK,EAAAqB,MA7Q8B,OAAAxB,QAAAG,EAAAsB,MAAArB,KAAAA,KAkM3BE,aAAc,SAA0BoB,GAiFxCC,OAAkBC,EAAAA,KAAlBD,UACKzB,EAAAA,MAQL2B,gBAAkBD,SACb3C,GAtFD,OAAOyC,EAAKhB,MA4FZF,cAAgBmB,SADpBG,EAAAC,GAOM,IAAA5B,KACFzC,EAAAoE,EAAAE,MAAAvB,MAAA,MAAAwB,KAAA,WACKnF,IAAAA,EAAgBR,KAAAmE,MAAA,KACjB3C,EAAAA,MADJvB,GAAA2F,EAAA,GAGWtF,KAAQsF,EAAA,OAd3BH,EAAA5B,IAuBJnC,YAAAA,EACWP,iBAEC,YAoDhB0E,mBAAA,WAjXR,IAAA3D,EAAAlC,KAoOgBoB,EAAE0E,KACKhF,OAAOiF,KADd,0BAC4C7D,EAAKjC,GADjD,oCAGK+F,KAAK,SAASxE,GACXU,EAAKvC,MAAMgC,KAAMT,iBAAiB,IAClCgB,EAAK1B,iBACDgB,oBAAqBA,IAEzBrC,EAAWmB,QACP,wCAGPmE,KAAK,WACFtF,EAAWsB,MACP,kEAKhBmE,0BAA2B,WACvB,IAAI1C,EAAOlC,KACXoB,EAAE0E,KACKhF,OAAOiF,KADd,0BAC4C7D,EAAKjC,GADjD,2CAGK+F,KAAK,SAASxE,GACXU,EAAKvC,MAAMgC,KAAMT,iBAAiB,IAClCgB,EAAK1B,iBACDgB,oBAAqBA,IAEzBrC,EAAWmB,QACP,iDAGPmE,KAAK,WACFtF,EAAWsB,MACP,uEAKhB6E,YAAa,SAASL,GAElB,IAAK,IADDD,KACKlC,EAAImC,EAAWgB,OAAS,EAAGnD,GAAK,EAAGA,IACxCkC,EAASnC,KAAKoC,EAAWnC,GAAG7C,IAEhC,OAAO+E,GAEXkB,gBAAiB,SAASC,GACtB,IAAIjE,EAAOlC,KAEPqF,EAAarF,KAAKsF,YAClBtF,KAAK4D,mBAAmB7B,IAAIqE,QAAQ,SAEpCC,EAAUrG,KAAKsF,YACftF,KAAKyC,gBAAgBV,IAAIqE,QAAQ,SAEjCE,EAAatG,KAAKsF,YAClBtF,KAAK4C,mBAAmBb,IAAIqE,QAAQ,SAEpCb,EAAavF,KAAKsF,YAClBtF,KAAK2C,mBAAmBZ,IAAIqE,QAAQ,SAGxChF,EAAE0E,KACKhF,OAAOiF,KADd,iBACmC7D,EAAKjC,GADxC,uCAGQsG,eAAgBlB,EAChBmB,YAAaH,EACbI,eAAgBH,EAChBI,eAAgBnB,IAGnBS,KAAK,SAASxE,GAEXU,EAAK1B,iBACDgB,oBAAqBA,IAEzBrC,EAAWmB,QAAQ,wBAEtBmE,KAAK,WACFtF,EAAWsB,MACP,qEAKhBiB,2BAA4B,WACxB,OAAOP,EAAEW,UAED,wCACA,6BACA,eACA,oJACA,6BACA,kBACA,YACA,OACA,SACA,OACA,gDACA,QACA,oCACA,wBACA,yKACA,iBACA,+IACA,SACA,SACA,8BACA,+BACA,6CACA,8DACA,iDACA,yKACA,SACA,6DACA,8DACA,iDACA,iHACA,SACA,oDACA,wDACA,iDACA,sGACA,SACA,8CACA,8DACA,iDACA,gGACA,SACA,iLACA,iCACA,aACA,YACA,SACA,UACF6E,KAAK","file":"../../../scripts/mvc/library/library-library-view.js","sourcesContent":["define(\n    [\"libs/toastr\", \"mvc/library/library-model\", \"mvc/ui/ui-select\"],\n    function(mod_toastr, mod_library_model, mod_select) {\n        var LibraryView = Backbone.View.extend({\n            el: \"#center\",\n\n            model: null,\n\n            options: {},\n\n            events: {\n                \"click .toolbtn_save_permissions\": \"savePermissions\"\n            },\n\n            initialize: function(options) {\n                this.options = _.extend(this.options, options);\n                if (this.options.id) {\n                    this.fetchLibrary();\n                }\n            },\n\n            fetchLibrary: function(options) {\n                this.options = _.extend(this.options, options);\n                this.model = new mod_library_model.Library({\n                    id: this.options.id\n                });\n                var that = this;\n                this.model.fetch({\n                    success: function() {\n                        if (that.options.show_permissions) {\n                            that.showPermissions();\n                        }\n                    },\n                    error: function(model, response) {\n                        if (typeof response.responseJSON !== \"undefined\") {\n                            mod_toastr.error(\n                                `${response.responseJSON.err_msg} Click this to go back.`,\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        } else {\n                            mod_toastr.error(\n                                \"An error occurred. Click this to go back.\",\n                                \"\",\n                                {\n                                    onclick: function() {\n                                        Galaxy.libraries.library_router.back();\n                                    }\n                                }\n                            );\n                        }\n                    }\n                });\n            },\n\n            showPermissions: function(options) {\n                this.options = _.extend(this.options, options);\n                $(\".tooltip\").remove();\n\n                if (this.options.fetched_permissions !== undefined) {\n                    if (\n                        this.options.fetched_permissions\n                            .access_library_role_list.length === 0\n                    ) {\n                        this.model.set({ is_unrestricted: true });\n                    } else {\n                        this.model.set({ is_unrestricted: false });\n                    }\n                }\n                var is_admin = false;\n                if (Galaxy.user) {\n                    is_admin = Galaxy.user.isAdmin();\n                }\n                var template = this.templateLibraryPermissions();\n                this.$el.html(\n                    template({ library: this.model, is_admin: is_admin })\n                );\n\n                var self = this;\n                $.get(\n                    `${Galaxy.root}api/libraries/${self.id}/permissions?scope=current`\n                )\n                    .done(function(fetched_permissions) {\n                        self.prepareSelectBoxes({\n                            fetched_permissions: fetched_permissions\n                        });\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to fetch library permissions.\"\n                        );\n                    });\n\n                $(\"#center [data-toggle]\").tooltip();\n                //hack to show scrollbars\n                $(\"#center\").css(\"overflow\", \"auto\");\n            },\n\n            _serializeRoles: function(role_list) {\n                var selected_roles = [];\n                for (var i = 0; i < role_list.length; i++) {\n                    selected_roles.push(\n                        `${role_list[i][1]}:${role_list[i][0]}`\n                    );\n                }\n                return selected_roles;\n            },\n\n            prepareSelectBoxes: function(options) {\n                this.options = _.extend(this.options, options);\n                var fetched_permissions = this.options.fetched_permissions;\n                var self = this;\n\n                var selected_access_library_roles = this._serializeRoles(\n                    fetched_permissions.access_library_role_list\n                );\n                var selected_add_item_roles = this._serializeRoles(\n                    fetched_permissions.add_library_item_role_list\n                );\n                var selected_manage_library_roles = this._serializeRoles(\n                    fetched_permissions.manage_library_role_list\n                );\n                var selected_modify_library_roles = this._serializeRoles(\n                    fetched_permissions.modify_library_role_list\n                );\n\n                self.accessSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"access_perm\",\n                        selected_access_library_roles,\n                        true\n                    )\n                );\n                self.addSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"add_perm\",\n                        selected_add_item_roles,\n                        false\n                    )\n                );\n                self.manageSelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"manage_perm\",\n                        selected_manage_library_roles,\n                        false\n                    )\n                );\n                self.modifySelectObject = new mod_select.View(\n                    this._createSelectOptions(\n                        this,\n                        \"modify_perm\",\n                        selected_modify_library_roles,\n                        false\n                    )\n                );\n            },\n\n            _createSelectOptions: function(\n                self,\n                id,\n                init_data,\n                is_library_access\n            ) {\n                is_library_access =\n                    is_library_access === true ? is_library_access : false;\n                var select_options = {\n                    minimumInputLength: 0,\n                    css: id,\n                    multiple: true,\n                    placeholder: \"Click to select a role\",\n                    container: self.$el.find(`#${id}`),\n                    ajax: {\n                        url:\n                            `${Galaxy.root}api/libraries/${self.id}/permissions?scope=available&is_library_access=${is_library_access}`,\n                        dataType: \"json\",\n                        quietMillis: 100,\n                        data: function(term, page) {\n                            // page is the one-based page number tracked by Select2\n                            return {\n                                q: term, //search term\n                                page_limit: 10, // page size\n                                page: page // page number\n                            };\n                        },\n                        results: function(data, page) {\n                            var more = page * 10 < data.total; // whether or not there are more results available\n                            // notice we return the value of more so Select2 knows if more results can be loaded\n                            return { results: data.roles, more: more };\n                        }\n                    },\n                    formatResult: function roleFormatResult(role) {\n                        return `${role.name} type: ${role.type}`;\n                    },\n\n                    formatSelection: function roleFormatSelection(role) {\n                        return role.name;\n                    },\n                    initSelection: function(element, callback) {\n                        // the input tag has a value attribute preloaded that points to a preselected role's id\n                        // this function resolves that id attribute to an object that select2 can render\n                        // using its formatResult renderer - that way the role name is shown preselected\n                        var data = [];\n                        $(element.val().split(\",\")).each(function() {\n                            var item = this.split(\":\");\n                            data.push({\n                                id: item[0],\n                                name: item[1]\n                            });\n                        });\n                        callback(data);\n                    },\n                    // initialData: init_data.join(','),\n                    initialData: init_data,\n                    dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n                };\n\n                return select_options;\n            },\n\n            makeDatasetPrivate: function() {\n                var self = this;\n                $.post(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: false });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"The dataset is now private to you.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset private.\"\n                        );\n                    });\n            },\n\n            removeDatasetRestrictions: function() {\n                var self = this;\n                $.post(\n                    `${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`\n                )\n                    .done(function(fetched_permissions) {\n                        self.model.set({ is_unrestricted: true });\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\n                            \"Access to this dataset is now unrestricted.\"\n                        );\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to make dataset unrestricted.\"\n                        );\n                    });\n            },\n\n            _extractIds: function(roles_list) {\n                var ids_list = [];\n                for (var i = roles_list.length - 1; i >= 0; i--) {\n                    ids_list.push(roles_list[i].id);\n                }\n                return ids_list;\n            },\n            savePermissions: function(event) {\n                var self = this;\n\n                var access_ids = this._extractIds(\n                    this.accessSelectObject.$el.select2(\"data\")\n                );\n                var add_ids = this._extractIds(\n                    this.addSelectObject.$el.select2(\"data\")\n                );\n                var manage_ids = this._extractIds(\n                    this.manageSelectObject.$el.select2(\"data\")\n                );\n                var modify_ids = this._extractIds(\n                    this.modifySelectObject.$el.select2(\"data\")\n                );\n\n                $.post(\n                    `${Galaxy.root}api/libraries/${self.id}/permissions?action=set_permissions`,\n                    {\n                        \"access_ids[]\": access_ids,\n                        \"add_ids[]\": add_ids,\n                        \"manage_ids[]\": manage_ids,\n                        \"modify_ids[]\": modify_ids\n                    }\n                )\n                    .done(function(fetched_permissions) {\n                        //fetch dataset again\n                        self.showPermissions({\n                            fetched_permissions: fetched_permissions\n                        });\n                        mod_toastr.success(\"Permissions saved.\");\n                    })\n                    .fail(function() {\n                        mod_toastr.error(\n                            \"An error occurred while attempting to set library permissions.\"\n                        );\n                    });\n            },\n\n            templateLibraryPermissions: function() {\n                return _.template(\n                    [\n                        '<div class=\"library_style_container\">',\n                        '<div id=\"library_toolbar\">',\n                        '<a href=\"#\">',\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-list\"/>',\n                        \"&nbsp;Libraries\",\n                        \"</button>\",\n                        \"</a>\",\n                        \"</div>\",\n                        \"<h1>\",\n                        'Library: <%= _.escape(library.get(\"name\")) %>',\n                        \"</h1>\",\n                        '<div class=\"alert alert-warning\">',\n                        \"<% if (is_admin) { %>\",\n                        \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\",\n                        \"<% } else { %>\",\n                        \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                        \"<% }%>\",\n                        \"</div>\",\n                        '<div class=\"dataset_table\">',\n                        \"<h2>Library permissions</h2>\",\n                        \"<h4>Roles that can access the library</h4>\",\n                        '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\",\n                        \"</div>\",\n                        \"<h4>Roles that can manage permissions on this library</h4>\",\n                        '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\",\n                        \"</div>\",\n                        \"<h4>Roles that can add items to this library</h4>\",\n                        '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\",\n                        \"</div>\",\n                        \"<h4>Roles that can modify this library</h4>\",\n                        '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                        '<div class=\"alert alert-info roles-selection\">',\n                        \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\",\n                        \"</div>\",\n                        '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                        '<span class=\"fa fa-floppy-o\"/>',\n                        \"&nbsp;Save\",\n                        \"</button>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                );\n            }\n        });\n\n        return {\n            LibraryView: LibraryView\n        };\n    }\n);\n"]}