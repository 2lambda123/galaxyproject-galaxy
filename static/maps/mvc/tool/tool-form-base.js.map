{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["_formView2","default","extend","initialize","options","self","this","deferred","_deferred2","prototype","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","collection","callback","process","then","_render","$el","off","execute","attributes","set","title","_destroy","fixed_title","name","description","version","operations","hide_operations","_operations","onchange","reset","debug","$","status","message","id","persistent","show_message","versions_button","_uiMisc2","ButtonMenu","icon","narrow","versions","length","i","addMenu","tooltip","sustain_version","replace","menu_button","biostar_url","onclick","window","location","origin","root","prompt","user","requirements","collapsed","portlet","expand","update","requirements_visible","_templateRequirements","sharable_url","getJSON","webhooks","_","each","webhook","activate","config","function","Function","menu","append","_templateHelp","citations","_citations2","ToolCitationCollection","_footer","tool_id","CitationListView","citation_list_view","$tmpl","addClass","help","find","attr","nreq","requirements_message","req","requirements_link","text"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormBase from \"mvc/form/form-view\";\nimport Citations from \"mvc/citations\";\nexport default FormBase.extend({\n    initialize: function(options) {\n        var self = this;\n        this.deferred = new Deferred();\n        FormBase.prototype.initialize.call(this, options);\n\n        // optional model update\n        this._update(this.model.get(\"initialmodel\"));\n\n        // listen to history panel\n        if (this.model.get(\"listen_to_history\") && parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n            this.listenTo(parent.Galaxy.currHistoryPanel.collection, \"change\", () => {\n                self.model.get(\"onchange\")();\n            });\n        }\n        // destroy dom elements\n        this.$el.on(\"remove\", () => {\n            self._destroy();\n        });\n    },\n\n    /** Allows tool form variation to update tool model */\n    _update: function(callback) {\n        var self = this;\n        callback = callback || this.model.get(\"buildmodel\");\n        if (callback) {\n            this.deferred.reset();\n            this.deferred.execute(process => {\n                callback(process, self);\n                process.then(() => {\n                    self._render();\n                });\n            });\n        } else {\n            this._render();\n        }\n    },\n\n    /** Wait for deferred build processes before removal */\n    _destroy: function() {\n        var self = this;\n        this.$el.off().hide();\n        this.deferred.execute(() => {\n            FormBase.prototype.remove.call(self);\n            Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n        });\n    },\n\n    /** Build form */\n    _render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.model.set({\n            title:\n                options.fixed_title ||\n                `<b>${options.name}</b> ${options.description} (Galaxy Version ${options.version})`,\n            operations: !options.hide_operations && this._operations(),\n            onchange: function() {\n                self.deferred.reset();\n                self.deferred.execute(process => {\n                    self.model.get(\"postchange\")(process, self);\n                });\n            }\n        });\n        this.render();\n        if (!this.model.get(\"collapsible\")) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-margin-top-large\")\n                    .append(this._footer())\n            );\n        }\n        this.show_message &&\n            this.message.update({\n                status: \"success\",\n                message: `Now you are using '${options.name}' version ${options.version}, id '${options.id}'.`,\n                persistent: false\n            });\n        this.show_message = true;\n    },\n\n    /** Create tool operation menu */\n    _operations: function() {\n        var self = this;\n        var options = this.model.attributes;\n\n        // button for version selection\n        var versions_button = new Ui.ButtonMenu({\n            icon: \"fa-cubes\",\n            title: (!options.narrow && \"Versions\") || null,\n            tooltip: \"Select another tool version\"\n        });\n        if (!options.sustain_version && options.versions && options.versions.length > 1) {\n            for (var i in options.versions) {\n                var version = options.versions[i];\n                if (version != options.version) {\n                    versions_button.addMenu({\n                        title: `Switch to ${version}`,\n                        version: version,\n                        icon: \"fa-cube\",\n                        onclick: function() {\n                            // here we update the tool version (some tools encode the version also in the id)\n                            self.model.set(\"id\", options.id.replace(options.version, this.version));\n                            self.model.set(\"version\", this.version);\n                            self._update();\n                        }\n                    });\n                }\n            }\n        } else {\n            versions_button.$el.hide();\n        }\n\n        // button for options e.g. search, help\n        var menu_button = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: (!options.narrow && \"Options\") || null,\n            tooltip: \"View available options\"\n        });\n        if (options.biostar_url) {\n            menu_button.addMenu({\n                icon: \"fa-question-circle\",\n                title: \"Question?\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/p/new/post/`);\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-search\",\n                title: \"Search\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/local/search/page/?q=${options.name}`);\n                }\n            });\n        }\n        menu_button.addMenu({\n            icon: \"fa-share\",\n            title: \"Share\",\n            onclick: function() {\n                prompt(\n                    \"Copy to clipboard: Ctrl+C, Enter\",\n                    `${window.location.origin + Galaxy.root}root?tool_id=${options.id}`\n                );\n            }\n        });\n\n        // add admin operations\n        if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n            menu_button.addMenu({\n                icon: \"fa-download\",\n                title: \"Download\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}api/tools/${options.id}/download`;\n                }\n            });\n        }\n\n        // button for version selection\n        if (options.requirements && options.requirements.length > 0) {\n            menu_button.addMenu({\n                icon: \"fa-info-circle\",\n                title: \"Requirements\",\n                onclick: function() {\n                    if (!this.requirements_visible || self.portlet.collapsed) {\n                        this.requirements_visible = true;\n                        self.portlet.expand();\n                        self.message.update({\n                            persistent: true,\n                            message: self._templateRequirements(options),\n                            status: \"info\"\n                        });\n                    } else {\n                        this.requirements_visible = false;\n                        self.message.update({ message: \"\" });\n                    }\n                }\n            });\n        }\n\n        // add toolshed url\n        if (options.sharable_url) {\n            menu_button.addMenu({\n                icon: \"fa-external-link\",\n                title: \"See in Tool Shed\",\n                onclick: function() {\n                    window.open(options.sharable_url);\n                }\n            });\n        }\n\n        // add tool menu webhooks\n        $.getJSON(\"/api/webhooks/tool-menu/all\", webhooks => {\n            _.each(webhooks, webhook => {\n                if (webhook.activate && webhook.config.function) {\n                    menu_button.addMenu({\n                        icon: webhook.config.icon,\n                        title: webhook.config.title,\n                        onclick: function() {\n                            var func = new Function(\"options\", webhook.config.function);\n                            func(options);\n                        }\n                    });\n                }\n            });\n        });\n\n        return {\n            menu: menu_button,\n            versions: versions_button\n        };\n    },\n\n    /** Create footer */\n    _footer: function() {\n        var options = this.model.attributes;\n        var $el = $(\"<div/>\").append(this._templateHelp(options));\n        if (options.citations) {\n            var citations = new Citations.ToolCitationCollection();\n            citations.tool_id = options.id;\n            var citation_list_view = new Citations.CitationListView({\n                collection: citations\n            });\n            citation_list_view.render();\n            citations.fetch();\n            $el.append(citation_list_view.$el);\n        }\n        return $el;\n    },\n\n    /** Templates */\n    _templateHelp: function(options) {\n        var $tmpl = $(\"<div/>\")\n            .addClass(\"ui-form-help\")\n            .append(options.help);\n        $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n        return $tmpl;\n    },\n\n    _templateRequirements: function(options) {\n        var nreq = options.requirements.length;\n        if (nreq > 0) {\n            var requirements_message = \"This tool requires \";\n            _.each(options.requirements, (req, i) => {\n                requirements_message +=\n                    req.name +\n                    (req.version ? ` (Version ${req.version})` : \"\") +\n                    (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n            });\n            var requirements_link = $(\"<a/>\")\n                .attr(\"target\", \"_blank\")\n                .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                .text(\"here\");\n            return $(\"<span/>\")\n                .append(`${requirements_message}. Click `)\n                .append(requirements_link)\n                .append(\" for more information.\");\n        }\n        return \"No requirements found.\";\n    }\n});\n"]}