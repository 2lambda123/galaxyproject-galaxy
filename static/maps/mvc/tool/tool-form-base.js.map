{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["define","initialize","FormBase","Utils","Deferred","Ui","CitationModel","CitationView","extend","options","self","this","model","listenTo","parent","currHistoryPanel","_update","get","_destroy","Galaxy","collection","on","callback","process","then","deferred","reset","_render","execute","$el","off","hide","prototype","remove","call","emit","attributes","set","title","fixed_title","name","append","description","show_message","version","persistent","hide_operations","_operations","onchange","versions_button","addClass","narrow","_footer","i","icon","onclick","id","menu_button","ButtonMenu","tooltip","biostar_url","versions","length","addMenu","open","replace","window","location","url","success","status","error","message","response","err_msg","user","requirements","href","root","portlet","_templateRequirements","update","requirements_visible","webhooks","activate","function","collapsed","webhook","config","func","Function","sharable_url","_templateHelp","el","$citations","citations","citation_list_view","render","menu","requirements_message","requirements_link","attr","$","ToolCitationCollection","tool_id","CitationListView","fetch","$tmpl","help","find","nreq","_","each","req","text"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\ndefine(\n    [\n        \"utils/utils\",\n        \"utils/deferred\",\n        \"mvc/ui/ui-misc\",\n        \"mvc/form/form-view\",\n        \"mvc/citation/citation-model\",\n        \"mvc/citation/citation-view\"\n    ],\n    function(Utils, Deferred, Ui, FormBase, CitationModel, CitationView) {\n        return FormBase.extend({\n            initialize: function(options) {\n                var self = this;\n                this.deferred = new Deferred();\n                FormBase.prototype.initialize.call(this, options);\n\n                // optional model update\n                this._update(this.model.get(\"initialmodel\"));\n\n                // listen to history panel\n                if (this.model.get(\"listen_to_history\") && parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n                    this.listenTo(parent.Galaxy.currHistoryPanel.collection, \"change\", function() {\n                        self.model.get(\"onchange\")();\n                    });\n                }\n                // destroy dom elements\n                this.$el.on(\"remove\", function() {\n                    self._destroy();\n                });\n            },\n\n            /** Allows tool form variation to update tool model */\n            _update: function(callback) {\n                var self = this;\n                callback = callback || this.model.get(\"buildmodel\");\n                if (callback) {\n                    this.deferred.reset();\n                    this.deferred.execute(function(process) {\n                        callback(process, self);\n                        process.then(function() {\n                            self._render();\n                        });\n                    });\n                } else {\n                    this._render();\n                }\n            },\n\n            /** Wait for deferred build processes before removal */\n            _destroy: function() {\n                var self = this;\n                this.$el.off().hide();\n                this.deferred.execute(function() {\n                    FormBase.prototype.remove.call(self);\n                    Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n                });\n            },\n\n            /** Build form */\n            _render: function() {\n                var self = this;\n                var options = this.model.attributes;\n                this.model.set({\n                    title:\n                        options.fixed_title ||\n                        \"<b>\" +\n                            options.name +\n                            \"</b> \" +\n                            options.description +\n                            \" (Galaxy Version \" +\n                            options.version +\n                            \")\",\n                    operations: !options.hide_operations && this._operations(),\n                    onchange: function() {\n                        self.deferred.reset();\n                        self.deferred.execute(function(process) {\n                            self.model.get(\"postchange\")(process, self);\n                        });\n                    }\n                });\n                this.render();\n                if (!this.model.get(\"collapsible\")) {\n                    this.$el.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-margin-top-large\")\n                            .append(this._footer())\n                    );\n                }\n                this.show_message &&\n                    this.message.update({\n                        status: \"success\",\n                        message:\n                            \"Now you are using '\" +\n                            options.name +\n                            \"' version \" +\n                            options.version +\n                            \", id '\" +\n                            options.id +\n                            \"'.\",\n                        persistent: false\n                    });\n                this.show_message = true;\n            },\n\n            /** Create tool operation menu */\n            _operations: function() {\n                var self = this;\n                var options = this.model.attributes;\n\n                // button for version selection\n                var versions_button = new Ui.ButtonMenu({\n                    icon: \"fa-cubes\",\n                    title: (!options.narrow && \"Versions\") || null,\n                    tooltip: \"Select another tool version\"\n                });\n                if (!options.sustain_version && options.versions && options.versions.length > 1) {\n                    for (var i in options.versions) {\n                        var version = options.versions[i];\n                        if (version != options.version) {\n                            versions_button.addMenu({\n                                title: \"Switch to \" + version,\n                                version: version,\n                                icon: \"fa-cube\",\n                                onclick: function() {\n                                    // here we update the tool version (some tools encode the version also in the id)\n                                    self.model.set(\"id\", options.id.replace(options.version, this.version));\n                                    self.model.set(\"version\", this.version);\n                                    self._update();\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    versions_button.$el.hide();\n                }\n\n                // button for options e.g. search, help\n                var menu_button = new Ui.ButtonMenu({\n                    icon: \"fa-caret-down\",\n                    title: (!options.narrow && \"Options\") || null,\n                    tooltip: \"View available options\"\n                });\n                if (options.biostar_url) {\n                    menu_button.addMenu({\n                        icon: \"fa-question-circle\",\n                        title: \"Question?\",\n                        onclick: function() {\n                            window.open(options.biostar_url + \"/p/new/post/\");\n                        }\n                    });\n                    menu_button.addMenu({\n                        icon: \"fa-search\",\n                        title: \"Search\",\n                        onclick: function() {\n                            window.open(options.biostar_url + \"/local/search/page/?q=\" + options.name);\n                        }\n                    });\n                }\n                menu_button.addMenu({\n                    icon: \"fa-share\",\n                    title: \"Share\",\n                    onclick: function() {\n                        prompt(\n                            \"Copy to clipboard: Ctrl+C, Enter\",\n                            window.location.origin + Galaxy.root + \"root?tool_id=\" + options.id\n                        );\n                    }\n                });\n\n                // add admin operations\n                if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n                    menu_button.addMenu({\n                        icon: \"fa-download\",\n                        title: \"Download\",\n                        onclick: function() {\n                            window.location.href = Galaxy.root + \"api/tools/\" + options.id + \"/download\";\n                        }\n                    });\n                    menu_button.addMenu({\n                        icon: \"fa-refresh\",\n                        title: \"Reload XML\",\n                        onclick: function() {\n                            Utils.get({\n                                url: Galaxy.root + \"api/tools/\" + options.id + \"/reload\",\n                                success: function(response) {\n                                    self.message.update({\n                                        persistent: false,\n                                        message: \"Tool XML has been reloaded.\",\n                                        status: \"success\"\n                                    });\n                                },\n                                error: function(response) {\n                                    self.message.update({\n                                        persistent: false,\n                                        message: response.err_msg,\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n\n                // button for version selection\n                if (options.requirements && options.requirements.length > 0) {\n                    menu_button.addMenu({\n                        icon: \"fa-info-circle\",\n                        title: \"Requirements\",\n                        onclick: function() {\n                            if (!this.requirements_visible || self.portlet.collapsed) {\n                                this.requirements_visible = true;\n                                self.portlet.expand();\n                                self.message.update({\n                                    persistent: true,\n                                    message: self._templateRequirements(options),\n                                    status: \"info\"\n                                });\n                            } else {\n                                this.requirements_visible = false;\n                                self.message.update({ message: \"\" });\n                            }\n                        }\n                    });\n                }\n\n                // add toolshed url\n                if (options.sharable_url) {\n                    menu_button.addMenu({\n                        icon: \"fa-external-link\",\n                        title: \"See in Tool Shed\",\n                        onclick: function() {\n                            window.open(options.sharable_url);\n                        }\n                    });\n                }\n\n                // add tool menu webhooks\n                $.getJSON(\"/api/webhooks/tool-menu/all\", function(webhooks) {\n                    _.each(webhooks, function(webhook) {\n                        if (webhook.activate && webhook.config.function) {\n                            menu_button.addMenu({\n                                icon: webhook.config.icon,\n                                title: webhook.config.title,\n                                onclick: function() {\n                                    var func = new Function(\"options\", webhook.config.function);\n                                    func(options);\n                                }\n                            });\n                        }\n                    });\n                });\n\n                return {\n                    menu: menu_button,\n                    versions: versions_button\n                };\n            },\n\n            /** Create footer */\n            _footer: function() {\n                var options = this.model.attributes;\n                var $el = $(\"<div/>\").append(this._templateHelp(options));\n                if (options.citations) {\n                    var $citations = $(\"<div/>\");\n                    var citations = new CitationModel.ToolCitationCollection();\n                    citations.tool_id = options.id;\n                    var citation_list_view = new CitationView.CitationListView({\n                        el: $citations,\n                        collection: citations\n                    });\n                    citation_list_view.render();\n                    citations.fetch();\n                    $el.append($citations);\n                }\n                return $el;\n            },\n\n            /** Templates */\n            _templateHelp: function(options) {\n                var $tmpl = $(\"<div/>\")\n                    .addClass(\"ui-form-help\")\n                    .append(options.help);\n                $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n                return $tmpl;\n            },\n\n            _templateRequirements: function(options) {\n                var nreq = options.requirements.length;\n                if (nreq > 0) {\n                    var requirements_message = \"This tool requires \";\n                    _.each(options.requirements, function(req, i) {\n                        requirements_message +=\n                            req.name +\n                            (req.version ? \" (Version \" + req.version + \")\" : \"\") +\n                            (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n                    });\n                    var requirements_link = $(\"<a/>\")\n                        .attr(\"target\", \"_blank\")\n                        .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                        .text(\"here\");\n                    return $(\"<span/>\")\n                        .append(requirements_message + \". Click \")\n                        .append(requirements_link)\n                        .append(\" for more information.\");\n                }\n                return \"No requirements found.\";\n            }\n        });\n    }\n);\n"]}