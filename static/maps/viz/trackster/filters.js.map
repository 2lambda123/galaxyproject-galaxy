{"version":3,"sources":["viz/trackster/filters.js"],"names":["define","_","extend","Filter","obj_dict","this","manager","name","tool_id","prototype","to_dict","index","tool_exp_name","create_action_icon","title","css_class","on_click_fn","$","attr","addClass","tooltip","click","call","max","Number","MAX_VALUE","high","slider","min","slider_label","container","values","low","filter_label","change","filter","control_element","values_span","text","values_span_container","edit_slider_values","appendTo","append","display_controls_div","transparency_icon","slider_div","range","force","clear_after","height_icon","event","ui","height_filter","multi_value","slider_row","parseFloat","input_size","toString","length","parents","span","e","stopPropagation","cur_value","removeClass","keyup","keyCode","focus","blur","slider_min","slider_max","invalid","new_value","split","a_val","val","alert","parent_div","alpha_filter","hide","show","NumberFilter","track","request_draw","find","hover","setTimeout","self","type","applies_to","element","copy","_keep_val","isNaN","get_slider_step","slide","to_filter","keep","value","updated","update_ui_elt","Array","returnVal","i","update_attrs","filters","Math","floor","ceil","alpha_filter_name","height_filter_name","filters_dict","FiltersManager","bind","visible","filter_dicts","push","add_filter","log","new_track","run_buttons_row","filter_manager","run_on_dataset","toggle","is","active_filters","tool_filter_conditions","remove_all","children","remove","init_filters","clear_filters","tool_filter_str","url_params","cond","input","input_dataset_id","getJSON","run_filter","get_or_create_dict_item","dict","key","new_item","body","response","dataset_id","active_filters_list","filter_tuple","join","target_dataset_id","slice","run_tool_url","error","Galaxy","modal","buttons","Close"],"mappings":"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","file":"../../../scripts/viz/trackster/filters.js","sourcesContent":["define([\"libs/underscore\"], function(_) {\n    var extend = _.extend;\n\n    /**\n * Filters that enable users to show/hide data points dynamically.\n */\n    var Filter = function(obj_dict) {\n        this.manager = null;\n        this.name = obj_dict.name;\n        // Index into payload to filter.\n        this.index = obj_dict.index;\n        this.tool_id = obj_dict.tool_id;\n        // Name to use for filter when building expression for tool.\n        this.tool_exp_name = obj_dict.tool_exp_name;\n    };\n\n    extend(Filter.prototype, {\n        /**\n     * Convert filter to dictionary.\n     */\n        to_dict: function() {\n            return {\n                name: this.name,\n                index: this.index,\n                tool_id: this.tool_id,\n                tool_exp_name: this.tool_exp_name\n            };\n        }\n    });\n\n    /**\n * Creates an action icon.\n */\n    var create_action_icon = function(title, css_class, on_click_fn) {\n        return $(\"<a/>\")\n            .attr(\"href\", \"javascript:void(0);\")\n            .attr(\"title\", title)\n            .addClass(\"icon-button\")\n            .addClass(css_class)\n            .tooltip()\n            .click(on_click_fn);\n    };\n\n    /**\n * Number filters have a min, max as well as a low, high; low and high are used \n */\n    var NumberFilter = function(obj_dict) {\n        //\n        // Attribute init.\n        //\n        Filter.call(this, obj_dict);\n        // Filter low/high. These values are used to filter elements.\n        this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n        this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n        // Slide min/max. These values are used to set/update slider.\n        this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n        this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n        // UI elements associated with filter.\n        this.container = null;\n        this.slider = null;\n        this.slider_label = null;\n\n        //\n        // Create HTML.\n        //\n\n        // Function that supports inline text editing of slider values.\n        // Enable users to edit parameter's value via a text box.\n        var edit_slider_values = function(container, span, slider) {\n            container.click(function() {\n                var cur_value = span.text(),\n                    max = parseFloat(slider.slider(\"option\", \"max\")),\n                    input_size = max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6,\n                    multi_value = false,\n                    slider_row = $(this).parents(\".slider-row\");\n\n                // Row now has input.\n                slider_row.addClass(\"input\");\n\n                // Increase input size if there are two values.\n                if (slider.slider(\"option\", \"values\")) {\n                    input_size = 2 * input_size + 1;\n                    multi_value = true;\n                }\n                span.text(\"\");\n                // Temporary input for changing value.\n                $(\"<input type='text'/>\")\n                    .attr(\"size\", input_size)\n                    .attr(\"maxlength\", input_size)\n                    .attr(\"value\", cur_value)\n                    .appendTo(span)\n                    .focus()\n                    .select()\n                    .click(function(e) {\n                        // Don't want click to propogate up to values_span and restart everything.\n                        e.stopPropagation();\n                    })\n                    .blur(function() {\n                        $(this).remove();\n                        span.text(cur_value);\n                        slider_row.removeClass(\"input\");\n                    })\n                    .keyup(function(e) {\n                        if (e.keyCode === 27) {\n                            // Escape key.\n                            $(this).trigger(\"blur\");\n                        } else if (e.keyCode === 13) {\n                            //\n                            // Enter/return key initiates callback. If new value(s) are in slider range,\n                            // change value (which calls slider's change() function).\n                            //\n                            var slider_min = slider.slider(\"option\", \"min\"),\n                                slider_max = slider.slider(\"option\", \"max\"),\n                                invalid = function(a_val) {\n                                    return isNaN(a_val) || a_val > slider_max || a_val < slider_min;\n                                },\n                                new_value = $(this).val();\n                            if (!multi_value) {\n                                new_value = parseFloat(new_value);\n                                if (invalid(new_value)) {\n                                    alert(\n                                        \"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\"\n                                    );\n                                    return $(this);\n                                }\n                            } else {\n                                // Multi value.\n                                new_value = new_value.split(\"-\");\n                                new_value = [parseFloat(new_value[0]), parseFloat(new_value[1])];\n                                if (invalid(new_value[0]) || invalid(new_value[1])) {\n                                    alert(\n                                        \"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\"\n                                    );\n                                    return $(this);\n                                }\n                            }\n\n                            // Updating the slider also updates slider values and removes input.\n                            slider.slider(multi_value ? \"values\" : \"value\", new_value);\n                            slider_row.removeClass(\"input\");\n                        }\n                    });\n            });\n        };\n\n        var filter = this;\n\n        filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n        // Set up filter label (name, values).\n        var filter_label = $(\"<div/>\")\n                .addClass(\"elt-label\")\n                .appendTo(filter.parent_div),\n            name_span = $(\"<span/>\")\n                .addClass(\"slider-name\")\n                .text(filter.name + \"  \")\n                .appendTo(filter_label),\n            values_span = $(\"<span/>\").text(this.low + \"-\" + this.high),\n            values_span_container = $(\"<span/>\")\n                .addClass(\"slider-value\")\n                .appendTo(filter_label)\n                .append(\"[\")\n                .append(values_span)\n                .append(\"]\");\n        filter.values_span = values_span;\n\n        // Set up slider for filter.\n        var slider_div = $(\"<div/>\")\n            .addClass(\"slider\")\n            .appendTo(filter.parent_div);\n        filter.control_element = $(\"<div/>\")\n            .attr(\"id\", filter.name + \"-filter-control\")\n            .appendTo(slider_div);\n        filter.control_element.slider({\n            range: true,\n            min: this.min,\n            max: this.max,\n            step: this.get_slider_step(this.min, this.max),\n            values: [this.low, this.high],\n            slide: function(event, ui) {\n                filter.slide(event, ui);\n            },\n            change: function(event, ui) {\n                filter.control_element.slider(\"option\", \"slide\").call(filter.control_element, event, ui);\n            }\n        });\n        filter.slider = filter.control_element;\n        filter.slider_label = values_span;\n\n        // Enable users to edit slider values via text box.\n        edit_slider_values(values_span_container, values_span, filter.control_element);\n\n        // Set up filter display controls.\n        var display_controls_div = $(\"<div/>\")\n            .addClass(\"display-controls\")\n            .appendTo(filter.parent_div);\n        this.transparency_icon = create_action_icon(\n            \"Use filter for data transparency\",\n            \"layer-transparent\",\n            function() {\n                if (filter.manager.alpha_filter !== filter) {\n                    // Setting this filter as the alpha filter.\n                    filter.manager.alpha_filter = filter;\n                    // Update UI for new filter.\n                    filter.manager.parent_div\n                        .find(\".layer-transparent\")\n                        .removeClass(\"active\")\n                        .hide();\n                    filter.transparency_icon.addClass(\"active\").show();\n                } else {\n                    // Clearing filter as alpha filter.\n                    filter.manager.alpha_filter = null;\n                    filter.transparency_icon.removeClass(\"active\");\n                }\n                filter.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        )\n            .appendTo(display_controls_div)\n            .hide();\n        this.height_icon = create_action_icon(\"Use filter for data height\", \"arrow-resize-090\", function() {\n            if (filter.manager.height_filter !== filter) {\n                // Setting this filter as the height filter.\n                filter.manager.height_filter = filter;\n                // Update UI for new filter.\n                filter.manager.parent_div\n                    .find(\".arrow-resize-090\")\n                    .removeClass(\"active\")\n                    .hide();\n                filter.height_icon.addClass(\"active\").show();\n            } else {\n                // Clearing filter as alpha filter.\n                filter.manager.height_filter = null;\n                filter.height_icon.removeClass(\"active\");\n            }\n            filter.manager.track.request_draw({\n                force: true,\n                clear_after: true\n            });\n        })\n            .appendTo(display_controls_div)\n            .hide();\n        filter.parent_div.hover(\n            function() {\n                filter.transparency_icon.show();\n                filter.height_icon.show();\n            },\n            function() {\n                if (filter.manager.alpha_filter !== filter) {\n                    filter.transparency_icon.hide();\n                }\n                if (filter.manager.height_filter !== filter) {\n                    filter.height_icon.hide();\n                }\n            }\n        );\n\n        // Add to clear floating layout.\n        $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n    };\n    extend(NumberFilter.prototype, {\n        /**\n     * Convert filter to dictionary.\n     */\n        to_dict: function() {\n            var obj_dict = Filter.prototype.to_dict.call(this);\n            return extend(obj_dict, {\n                type: \"number\",\n                min: this.min,\n                max: this.max,\n                low: this.low,\n                high: this.high\n            });\n        },\n        /**\n     * Return a copy of filter.\n     */\n        copy: function() {\n            return new NumberFilter({\n                name: this.name,\n                index: this.index,\n                tool_id: this.tool_id,\n                tool_exp_name: this.tool_exp_name\n            });\n        },\n        /**\n     * Get step for slider.\n     */\n        // FIXME: make this a \"static\" function.\n        get_slider_step: function(min, max) {\n            var range = max - min;\n            return range <= 2 ? 0.01 : 1;\n        },\n        /**\n     * Handle slide events.\n     */\n        slide: function(event, ui) {\n            var values = ui.values;\n\n            // Set new values in UI.\n            this.values_span.text(values[0] + \"-\" + values[1]);\n\n            // Set new values in filter.\n            this.low = values[0];\n            this.high = values[1];\n\n            // Set timeout to update if filter low, high are stable.\n            var self = this;\n            setTimeout(function() {\n                if (values[0] === self.low && values[1] === self.high) {\n                    self.manager.track.request_draw({\n                        force: true,\n                        clear_after: true\n                    });\n                }\n            }, 25);\n        },\n        /** \n     * Returns true if filter can be applied to element.\n     */\n        applies_to: function(element) {\n            if (element.length > this.index) {\n                return true;\n            }\n            return false;\n        },\n        /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n        _keep_val: function(val) {\n            return isNaN(val) || (val >= this.low && val <= this.high);\n        },\n        /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive) \n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n        keep: function(element) {\n            if (!this.applies_to(element)) {\n                // No element to filter on.\n                return true;\n            }\n\n            // Keep value function.\n            var filter = this;\n\n            // Do filtering.\n            var to_filter = element[this.index];\n            if (to_filter instanceof Array) {\n                var returnVal = true;\n                for (var i = 0; i < to_filter.length; i++) {\n                    if (!this._keep_val(to_filter[i])) {\n                        // Exclude element.\n                        returnVal = false;\n                        break;\n                    }\n                }\n                return returnVal;\n            } else {\n                return this._keep_val(element[this.index]);\n            }\n        },\n        /**\n     * Update filter's min and max values based on element's values.\n     */\n        update_attrs: function(element) {\n            var updated = false;\n            if (!this.applies_to(element)) {\n                return updated;\n            }\n\n            //\n            // Update filter's min, max based on element values.\n            //\n\n            // Make value(s) into an Array.\n            var values = element[this.index];\n            if (!(values instanceof Array)) {\n                values = [values];\n            }\n\n            // Loop through values and update min, max.\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i];\n                if (value < this.min) {\n                    this.min = Math.floor(value);\n                    updated = true;\n                }\n                if (value > this.max) {\n                    this.max = Math.ceil(value);\n                    updated = true;\n                }\n            }\n            return updated;\n        },\n        /**\n     * Update filter's slider.\n     */\n        update_ui_elt: function() {\n            // Only show filter if min < max because filter is not useful otherwise. This\n            // covers all corner cases, such as when min, max have not been defined and\n            // when min == max.\n            if (this.min < this.max) {\n                this.parent_div.show();\n            } else {\n                this.parent_div.hide();\n            }\n\n            var slider_min = this.slider.slider(\"option\", \"min\"),\n                slider_max = this.slider.slider(\"option\", \"max\");\n            if (this.min < slider_min || this.max > slider_max) {\n                // Update slider min, max, step.\n                this.slider.slider(\"option\", \"min\", this.min);\n                this.slider.slider(\"option\", \"max\", this.max);\n                this.slider.slider(\"option\", \"step\", this.get_slider_step(this.min, this.max));\n                // Refresh slider:\n                // TODO: do we want to keep current values or reset to min/max?\n                // Currently we reset values:\n                this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n                // To use the current values.\n                //var values = this.slider.slider( \"option\", \"values\" );\n                //this.slider.slider( \"option\", \"values\", values );\n            }\n        }\n    });\n\n    /**\n * Manages a set of filters.\n */\n    var FiltersManager = function(track, obj_dict) {\n        this.track = track;\n        this.alpha_filter = null;\n        this.height_filter = null;\n        this.filters = [];\n\n        //\n        // Create HTML.\n        //\n\n        //\n        // Create parent div.\n        //\n        this.parent_div = $(\"<div/>\")\n            .addClass(\"filters\")\n            .hide();\n        // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n        this.parent_div\n            .bind(\"drag\", function(e) {\n                e.stopPropagation();\n            })\n            .click(function(e) {\n                e.stopPropagation();\n            })\n            .bind(\"dblclick\", function(e) {\n                e.stopPropagation();\n            })\n            .bind(\"keydown\", function(e) {\n                e.stopPropagation();\n            });\n\n        //\n        // Restore state from dict.\n        //\n        if (obj_dict && \"filters\" in obj_dict) {\n            // Second condition needed for backward compatibility.\n            var alpha_filter_name = \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null,\n                height_filter_name = \"height_filter\" in obj_dict ? obj_dict.height_filter : null,\n                filters_dict = obj_dict.filters,\n                filter;\n            for (var i = 0; i < filters_dict.length; i++) {\n                if (filters_dict[i].type === \"number\") {\n                    filter = new NumberFilter(filters_dict[i]);\n                    this.add_filter(filter);\n                    if (filter.name === alpha_filter_name) {\n                        this.alpha_filter = filter;\n                        filter.transparency_icon.addClass(\"active\").show();\n                    }\n                    if (filter.name === height_filter_name) {\n                        this.height_filter = filter;\n                        filter.height_icon.addClass(\"active\").show();\n                    }\n                } else {\n                    console.log(\"ERROR: unsupported filter: \", name, type);\n                }\n            }\n\n            if (\"visible\" in obj_dict && obj_dict.visible) {\n                this.parent_div.show();\n            }\n        }\n\n        // Add button to filter complete dataset.\n        if (this.filters.length !== 0) {\n            var run_buttons_row = $(\"<div/>\")\n                .addClass(\"param-row\")\n                .appendTo(this.parent_div);\n            var run_on_dataset_button = $(\"<input type='submit'/>\")\n                .attr(\"value\", \"Run on complete dataset\")\n                .appendTo(run_buttons_row);\n            var filter_manager = this;\n            run_on_dataset_button.click(function() {\n                filter_manager.run_on_dataset();\n            });\n        }\n    };\n\n    extend(FiltersManager.prototype, {\n        // HTML manipulation and inspection.\n        show: function() {\n            this.parent_div.show();\n        },\n        hide: function() {\n            this.parent_div.hide();\n        },\n        toggle: function() {\n            this.parent_div.toggle();\n        },\n        visible: function() {\n            return this.parent_div.is(\":visible\");\n        },\n        /**\n     * Returns dictionary for manager.\n     */\n        to_dict: function() {\n            var obj_dict = {},\n                filter_dicts = [],\n                filter;\n\n            // Include individual filter states.\n            for (var i = 0; i < this.filters.length; i++) {\n                filter = this.filters[i];\n                filter_dicts.push(filter.to_dict());\n            }\n            obj_dict.filters = filter_dicts;\n\n            // Include transparency, height filters.\n            obj_dict.alpha_filter = this.alpha_filter ? this.alpha_filter.name : null;\n            obj_dict.height_filter = this.height_filter ? this.height_filter.name : null;\n\n            // Include visibility.\n            obj_dict.visible = this.parent_div.is(\":visible\");\n\n            return obj_dict;\n        },\n        /**\n     * Return a copy of the manager.\n     */\n        copy: function(new_track) {\n            var copy = new FiltersManager(new_track);\n            for (var i = 0; i < this.filters.length; i++) {\n                copy.add_filter(this.filters[i].copy());\n            }\n            return copy;\n        },\n        /**\n     * Add a filter to the manager.\n     */\n        add_filter: function(filter) {\n            filter.manager = this;\n            this.parent_div.append(filter.parent_div);\n            this.filters.push(filter);\n        },\n        /**\n     * Remove all filters from manager.\n     */\n        remove_all: function() {\n            this.filters = [];\n            this.parent_div.children().remove();\n        },\n        /**\n     * Initialize filters.\n     */\n\n        init_filters: function() {\n            for (var i = 0; i < this.filters.length; i++) {\n                var filter = this.filters[i];\n                filter.update_ui_elt();\n            }\n        },\n        /**\n     * Clear filters so that they do not impact track display.\n     */\n        clear_filters: function() {\n            for (var i = 0; i < this.filters.length; i++) {\n                var filter = this.filters[i];\n                filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n            }\n            this.alpha_filter = null;\n            this.height_filter = null;\n\n            // Hide icons for setting filters.\n            this.parent_div.find(\".icon-button\").hide();\n        },\n        run_on_dataset: function() {\n            // Get or create dictionary item.\n            var get_or_create_dict_item = function(dict, key, new_item) {\n                // Add new item to dict if\n                if (!(key in dict)) {\n                    dict[key] = new_item;\n                }\n                return dict[key];\n            };\n\n            //\n            // Find and group active filters. Active filters are those being used to hide data.\n            // Filters with the same tool id are grouped.\n            //\n            var active_filters = {},\n                filter,\n                tool_filter_conditions;\n            for (var i = 0; i < this.filters.length; i++) {\n                filter = this.filters[i];\n                if (filter.tool_id) {\n                    // Add filtering conditions if filter low/high are set.\n                    if (filter.min !== filter.low) {\n                        tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                        tool_filter_conditions[tool_filter_conditions.length] =\n                            filter.tool_exp_name + \" >= \" + filter.low;\n                    }\n                    if (filter.max !== filter.high) {\n                        tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                        tool_filter_conditions[tool_filter_conditions.length] =\n                            filter.tool_exp_name + \" <= \" + filter.high;\n                    }\n                }\n            }\n\n            //\n            // Use tools to run filters.\n            //\n\n            // Create list of (tool_id, tool_filters) tuples.\n            var active_filters_list = [];\n            for (var tool_id in active_filters) {\n                active_filters_list[active_filters_list.length] = [tool_id, active_filters[tool_id]];\n            }\n\n            // Invoke recursive function to run filters; this enables chaining of filters via\n            // iteratively application.\n            (function run_filter(input_dataset_id, filters) {\n                var // Set up filtering info and params.\n                    filter_tuple = filters[0],\n                    tool_id = filter_tuple[0],\n                    tool_filters = filter_tuple[1],\n                    tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\",\n                    url_params = {\n                        cond: tool_filter_str,\n                        input: input_dataset_id,\n                        target_dataset_id: input_dataset_id,\n                        tool_id: tool_id\n                    };\n\n                // Remove current filter.\n                filters = filters.slice(1);\n\n                $.getJSON(run_tool_url, url_params, function(response) {\n                    if (response.error) {\n                        // General error.\n                        Galaxy.modal.show({\n                            title: \"Filter Dataset\",\n                            body: \"Error running tool \" + tool_id,\n                            buttons: { Close: Galaxy.modal.hide() }\n                        });\n                    } else if (filters.length === 0) {\n                        // No more filters to run.\n                        Galaxy.modal.show({\n                            title: \"Filtering Dataset\",\n                            body: \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                            buttons: { Close: Galaxy.modal.hide() }\n                        });\n                    } else {\n                        // More filters to run.\n                        run_filter(response.dataset_id, filters);\n                    }\n                });\n            })(this.track.dataset_id, active_filters_list);\n        }\n    });\n\n    return {\n        FiltersManager: FiltersManager,\n        NumberFilter: NumberFilter\n    };\n});\n"]}