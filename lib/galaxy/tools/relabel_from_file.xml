<tool id="__RELABEL_FROM_FILE__"
      name="Relabel List Identifiers"
      version="1.0.0"
      tool_type="relabel_from_file">
    <description>from contents of a file</description>
    <type class="RelabelFromFileTool" module="galaxy.tools" />
    <action module="galaxy.tools.actions.model_operations"
            class="ModelOperationToolAction"/>
    <edam_operations>
        <edam_operation>operation_3096</edam_operation>
    </edam_operations>
    <inputs>
        <param type="data_collection" name="input" label="Input Collection" help="collection to change identifiers in"/>
        <conditional name="how">
            <param type="select" name="how_select" label="How should the new labels be specified?">
                <option value="txt">Simple list</option>
                <option value="tabular">Old-new map</option>
            </param>
            <when value="txt">
                <param type="data" name="labels" format="txt" label="New Identifiers" />
                <param name="strict" type="boolean" label="Ensure strict mapping" help="If selected, the target file must contain exactly the correct number of lines." truevalue="true" falsevalue="false" />
            </when>
            <when value="tabular">
                <param type="data" name="labels" format="tabular" label="New Identifiers" />
                <param name="strict" type="boolean" label="Ensure strict mapping" help="If YES, the target file must contain exactly the correct number of lines and each input identifier must match exactly one element of the input collection." truevalue="true" falsevalue="false" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <collection name="output" format_source="input" type_source="input" label="${on_string} (relabelled)" >
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="input">
                <collection type="list:paired">
                    <element name="i1">
                        <collection type="paired">
                            <element name="forward" value="simple_line.txt" />
                            <element name="reverse" value="simple_line_alternative.txt" />
                        </collection>
                    </element>
                </collection>
            </param>
            <param name="how_select" value="txt" />
            <param name="labels" value="new_labels_1.txt" ftype="txt" />
            <output_collection name="output" type="list:paired">
              <element name="new_i1">
                <element name="forward">
                  <assert_contents>
                    <has_text_matching expression="^This is a line of text.\n$" />
                  </assert_contents>
                </element>
                <element name="reverse">
                  <assert_contents>
                    <has_text_matching expression="^This is a different line of text.\n$" />
                  </assert_contents>
                </element>
              </element>
            </output_collection>
        </test>
        <test>
            <param name="input">
                <collection type="list:paired">
                    <element name="i1">
                        <collection type="paired">
                            <element name="forward" value="simple_line.txt" />
                            <element name="reverse" value="simple_line_alternative.txt" />
                        </collection>
                    </element>
                </collection>
            </param>
            <param name="how_select" value="tabular" />
            <param name="labels" value="new_labels_2.txt" ftype="tabular" />
            <output_collection name="output" type="list:paired">
              <element name="new_i1">
                <element name="forward">
                  <assert_contents>
                    <has_text_matching expression="^This is a line of text.\n$" />
                  </assert_contents>
                </element>
                <element name="reverse">
                  <assert_contents>
                    <has_text_matching expression="^This is a different line of text.\n$" />
                  </assert_contents>
                </element>
              </element>
            </output_collection>
        </test>
        <!-- test strict -->
        <test expect_failure="true">
            <param name="input">
                <collection type="list:paired">
                    <element name="wrongi">
                        <collection type="paired">
                            <element name="forward" value="simple_line.txt" />
                            <element name="reverse" value="simple_line_alternative.txt" />
                        </collection>
                    </element>
                </collection>
            </param>
            <param name="strict" value="true" />
            <param name="how_select" value="tabular" />
            <param name="labels" value="new_labels_2.txt" ftype="tabular" />
        </test>
        <test expect_failure="true">
            <param name="input">
                <collection type="list">
                    <element name="i1" value="simple_line.txt" />
                    <element name="i3" value="simple_line_alternative.txt" />
                </collection>
            </param>
            <param name="how_select" value="txt" />
            <param name="labels" value="new_labels_1.txt" ftype="txt" />
        </test>
        <!-- test label bad characters -->
        <test expect_failure="true">
            <param name="input">
                <collection type="list">
                    <element name="i1" value="simple_line.txt" />
                </collection>
            </param>
            <param name="how_select" value="txt" />
            <param name="labels" value="new_labels_bad_1.txt" ftype="txt" />
        </test>
        <!-- test label bad because of duplicates -->
        <test expect_failure="true">
            <param name="input">
                <collection type="list">
                    <element name="i1" value="simple_line.txt" />
                    <element name="i2" value="simple_line.txt" />
                </collection>
            </param>
            <param name="how_select" value="txt" />
            <param name="labels" value="new_labels_bad_2.txt" ftype="txt" />
        </test>
    </tests>
    <help><![CDATA[

============
What it does
============

This tool changes names of datasets within a collection using identifiers from a supplied file. 

.. class:: infomark

This document uses terms *name*, *label*, and *identifier* interchangeably: they all mean the same thing - name of individual datasets inside a collection. 

===================
Supplying new names
===================

New names can be supplied as either a simple list or a tab-delimited file mapping old names to the new ones. This is controlled using **How should the new labels be specified?** drop-down:

**Simple list**

Given a collection::

 Collection: [Dataset A] 
             [Dataset B] 
             [Dataset X]

and a simple text file::

             Alpha
             Beta
             Gamma

the tool will return::

 Collection: [Dataset Alpha] 
             [Dataset Beta] 
             [Dataset Gamma]

.. class:: infomark

**Note** that the order and number of entries in the text file must match the order of the items you want to rename in your dataset collection.

-------

**Old-new map**

Given a collection::

 Collection: [Dataset A] 
             [Dataset B] 
             [Dataset X]

and a simple text file (you can see that entries do not have to be in order here)::

             B Beta
             X Gamma
             A Alpha

the tool will return::

 Collection: [Dataset Alpha] 
             [Dataset Beta] 
             [Dataset Gamma]


.. class:: warningmark

Valid identifiers must contain only characters (a-z, A-Z), numbers (0-9), dash and underscore (-, _). Punctuation or whitespace are not allowed.

.. class:: infomark

This tool will create new history datasets from your collection but your quota usage will not increase.
    ]]></help>
</tool>
