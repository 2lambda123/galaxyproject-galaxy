name: Converter and tool tests
on:
  push:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'client/**'
      - 'doc/**'
  schedule:
    # Run at midnight UTC every Tuesday
    - cron: '0 0 * * 2'
env:
  GALAXY_TEST_RAISE_EXCEPTION_ON_HISTORYLESS_HDA: '1'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7']
        path: [{'path': 'lib/galaxy/datatypes/converters/', 'error_level': 'warn'}, {'path': 'tools/', 'error_level': 'error'}]
    steps:
      - if: github.event_name == 'schedule'
        run: |
          echo "GALAXY_CONFIG_OVERRIDE_METADATA_STRATEGY=extended" >> $GITHUB_ENV
          echo "GALAXY_CONFIG_OVERRIDE_OUTPUTS_TO_WORKING_DIRECTORY=true" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          path: 'galaxy root'
      - name: Clone galaxyproject/galaxy-test-data
        uses: actions/checkout@v3
        with:
          repository: galaxyproject/galaxy-test-data
          path: galaxy-test-data
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache venv dir
        uses: actions/cache@v3
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('galaxy root/requirements.txt') }}
      - name: Move test data
        run: rsync -av --remove-source-files --exclude .git galaxy-test-data/ 'galaxy root/test-data/'
      - name: Install planemo
        run: pip install planemo
      - name: Install jq
        run: sudo apt-get install jq
        shell: bash
      - name: Determine tools and converters to check
        run: |
          find 'galaxy root'/${{ matrix.path.path }} -name "*xml" | grep -v "macros" | grep -v -f 'galaxy root'/${{ matrix.path.path }}/.tt_skip > tool_list.txt
          echo "Skipping checks for the following:"
          find 'galaxy root'/${{ matrix.path.path }} -name "*xml" | grep -v "macros" | grep -f 'galaxy root'/${{ matrix.path.path }}/.tt_skip
          echo "Checking only the following:"
          cat tool_list.txt
      - name: Lint converters
        run: |
          mapfile -t TOOL_ARRAY < tool_list.txt
          planemo lint --skip citations,stdio,help --report_level warn --fail_level ${{ matrix.path.error_level }} "${TOOL_ARRAY[@]}"
      - name: Mock some test data
        if: always()
        run: |
          mkdir -p 'galaxy root'/tool-data/shared/ucsc/chrom/
          curl ftp://hgdownload.soe.ucsc.edu/apache/htdocs/goldenPath/hg17/bigZips/hg17.chrom.sizes -o 'galaxy root'/tool-data/shared/ucsc/chrom/hg17.len
      - name: Run tests
        if: always()
        run: |
          mkdir -p json_output
          while read -r TOOL; do
            echo TESTING $TOOL
            json=$(mktemp -u -p json_output --suff .json)
            planemo test  --test_output_json "$json" --galaxy_python_version ${{ matrix.python-version }} --galaxy_root 'galaxy root' --test_timeout 900 "$TOOL" || true
          done < tool_list.txt
          planemo merge_test_reports json_output/*.json tool_test_output.json
          planemo test_reports tool_test_output.json --test_output tool_test_output.html
          if jq '.["tests"][]["data"]["status"]' tool_test_output.json | grep -v "success"; then
            echo "Unsuccessful tests found, inspect the 'Converter and built in tools test results' artifact for details."
            exit 1
          fi
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Converter and built in tools test results (${{ matrix.python-version }})
          path: tool_test_output.html
