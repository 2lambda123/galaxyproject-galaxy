name: Selenium tests
on:
  push:
    paths-ignore:
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'doc/**'
  schedule:
    # Run at midnight UTC every Tuesday
    - cron: '0 0 * * 2'
env:
  GALAXY_CONFIG_GALAXY_URL_PREFIX: '/galaxypf'
  GALAXY_TEST_DBURI: 'postgresql://postgres:postgres@localhost:5432/galaxy?client_encoding=utf8'
  GALAXY_TEST_RAISE_EXCEPTION_ON_HISTORYLESS_HDA: '1'
  GALAXY_TEST_SELENIUM_RETRIES: 1
  GALAXY_TEST_SKIP_FLAKEY_TESTS_ON_ERROR: 1
  YARN_INSTALL_OPTS: --frozen-lockfile
  GALAXY_CONFIG_SQLALCHEMY_WARN_20: '1'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7']
        chunk: [0, 1, 2]
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - if: github.event_name == 'schedule'
        run: |
          echo "GALAXY_CONFIG_OVERRIDE_METADATA_STRATEGY=extended" >> $GITHUB_ENV
          echo "GALAXY_CONFIG_OVERRIDE_OUTPUTS_TO_WORKING_DIRECTORY=true" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          path: 'galaxy root'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo "version=$(python -c 'import sys; print("-".join(str(v) for v in sys.version_info))')" >> $GITHUB_OUTPUT
      - name: Cache pip dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ matrix.python-version }}-${{ hashFiles('galaxy root/requirements.txt') }}
      - name: Cache galaxy venv
        uses: actions/cache@v3
        with:
          path: 'galaxy root/.venv'
          key: gxy-venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('galaxy root/requirements.txt') }}-selenium
      - uses: mvdbeek/gha-yarn-cache@master
        with:
          yarn-lock-file: 'galaxy root/client/yarn.lock'
      - uses: nanasess/setup-chromedriver@v1
      - name: Run tests
        run: ./run_tests.sh --coverage -selenium lib/galaxy_test/selenium -- --num-shards=3 --shard-id=${{ matrix.chunk }}
        working-directory: 'galaxy root'

      - if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') && matrix.chunk == 0 # https://github.com/orgs/community/discussions/25692
        name: create screenshots from current version
        run: |
          # Setup environment
          export GALAXY_VERSION=$(cat lib/galaxy/version.py | grep '^VERSION_MAJOR' | cut -d'"' -f 2)
          export SCREENSHOTS_DIR=${{ github.workspace }}/screenshots
          echo "SCREENSHOTS_DIR=$SCREENSHOTS_DIR" >> $GITHUB_ENV
          echo "GALAXY_VERSION=$GALAXY_VERSION" >> $GITHUB_ENV

          # Take our screenshots
          mkdir -p "$SCREENSHOTS_DIR"
          GALAXY_TEST_SCREENSHOTS_DIRECTORY=$SCREENSHOTS_DIR ./run_tests.sh -selenium lib/galaxy_test/selenium -- -m gtn_screenshot -m local

      - if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') && matrix.chunk == 0 # https://github.com/orgs/community/discussions/25692
        name: Upload screenshots to S3
        run: |
          echo $SCREENSHOTS_DIR
          aws configure set aws_access_key_id ${{ secrets.TESTS_AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.TESTS_AWS_SECRET_KEY_ID }}
          aws configure set default.region us-east-2
          aws s3 cp --recursive $SCREENSHOTS_DIR s3://galaxy-tests/galaxy-gtn-screenshots/${GALAXY_VERSION}/ --acl public-read
          aws s3 ls s3://galaxy-tests

      - uses: codecov/codecov-action@v3
        with:
          flags: selenium
          working-directory: 'galaxy root'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Selenium test results (${{ matrix.python-version }}, ${{ matrix.chunk }})
          path: 'galaxy root/run_selenium_tests.html'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Selenium debug info (${{ matrix.python-version }}, ${{ matrix.chunk }})
          path: 'galaxy root/database/test_errors'
